"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/bybit-api";
exports.ids = ["vendor-chunks/bybit-api"];
exports.modules = {

/***/ "(rsc)/./node_modules/bybit-api/lib/account-asset-client-v3.js":
/*!***************************************************************!*\
  !*** ./node_modules/bybit-api/lib/account-asset-client-v3.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AccountAssetClientV3 = void 0;\nconst util_1 = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/bybit-api/lib/util/index.js\");\nconst BaseRestClient_1 = __importDefault(__webpack_require__(/*! ./util/BaseRestClient */ \"(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js\"));\n/**\n * REST API client for Account Asset V3 APIs\n */\nclass AccountAssetClientV3 extends BaseRestClient_1.default {\n    getClientType() {\n        return util_1.REST_CLIENT_TYPE_ENUM.v3;\n    }\n    fetchServerTime() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.getServerTime();\n            return Number(res.time);\n        });\n    }\n    getServerTime() {\n        return this.get('/v3/public/time');\n    }\n    /**\n     *\n     * Transfer Data Endpoints\n     *\n     */\n    createInternalTransfer(params) {\n        return this.postPrivate('/asset/v3/private/transfer/inter-transfer', params);\n    }\n    getInternalTransfers(params) {\n        return this.getPrivate('/asset/v3/private/transfer/inter-transfer/list/query', params);\n    }\n    createSubAccountTransfer(params) {\n        return this.postPrivate('/asset/v3/private/transfer/sub-member-transfer', params);\n    }\n    getSubAccountTransfers(params) {\n        return this.getPrivate('/asset/v3/private/transfer/sub-member-transfer/list/query', params);\n    }\n    getSubAccounts() {\n        return this.getPrivate('/asset/v3/private/transfer/sub-member/list/query');\n    }\n    enableUniversalTransfer(params) {\n        return this.postPrivate('/asset/v3/private/transfer/transfer-sub-member-save', params);\n    }\n    createUniversalTransfer(params) {\n        return this.postPrivate('/asset/v3/private/transfer/universal-transfer', params);\n    }\n    getUniversalTransfers(params) {\n        return this.getPrivate('/asset/v3/private/transfer/universal-transfer/list/query', params);\n    }\n    getTransferableCoinList(params) {\n        return this.getPrivate('/asset/v3/private/transfer/transfer-coin/list/query', params);\n    }\n    getAccountCoinBalance(params) {\n        return this.getPrivate('/asset/v3/private/transfer/account-coin/balance/query', params);\n    }\n    getAccountCoinBalances(params) {\n        return this.getPrivate('/asset/v3/private/transfer/account-coins/balance/query', params);\n    }\n    getAssetInfo(params) {\n        return this.getPrivate('/asset/v3/private/transfer/asset-info/query', params);\n    }\n    /**\n     *\n     * Wallet & Deposit Endpoints\n     *\n     */\n    /** Get Deposit Spec */\n    getSupportedDepositList(params) {\n        return this.get('/asset/v3/public/deposit/allowed-deposit-list/query', params);\n    }\n    getDepositRecords(params) {\n        return this.getPrivate('/asset/v3/private/deposit/record/query', params);\n    }\n    getSubDepositRecords(params) {\n        return this.getPrivate('/asset/v3/private/deposit/sub-member-record/query', params);\n    }\n    getWithdrawRecords(params) {\n        return this.getPrivate('/asset/v3/private/withdraw/record/query', params);\n    }\n    getCoinInformation(coin) {\n        return this.getPrivate('/asset/v3/private/coin-info/query', { coin });\n    }\n    submitWithdrawal(params) {\n        return this.postPrivate('/asset/v3/private/withdraw/create', params);\n    }\n    cancelWithdrawal(withdrawalId) {\n        return this.postPrivate('/asset/v3/private/withdraw/create', {\n            withdrawalId,\n        });\n    }\n    getMasterAccountDepositAddress(params) {\n        return this.getPrivate('/asset/v3/private/deposit/address/query', params);\n    }\n    getSubAccountDepositAddress(params) {\n        return this.getPrivate('/asset/v3/private/deposit/sub-member-address/query', params);\n    }\n    createSubMember(params) {\n        return this.postPrivate('/user/v3/private/create-sub-member', params);\n    }\n    createSubAPIKey(params) {\n        return this.postPrivate('/user/v3/private/create-sub-api', params);\n    }\n    /**\n     * Get Sub UID List\n     */\n    getSubMembers() {\n        return this.getPrivate('/user/v3/private/query-sub-members');\n    }\n    /**\n     * Froze Sub UID\n     */\n    freezeSubMember(subuid, frozenStatus) {\n        return this.postPrivate('/user/v3/private/frozen-sub-member', {\n            subuid,\n            frozen: frozenStatus,\n        });\n    }\n    getAPIKeyInformation() {\n        return this.getPrivate('/user/v3/private/query-api');\n    }\n    modifyMasterAPIKey(params) {\n        return this.postPrivate('/user/v3/private/update-api', params);\n    }\n    modifySubAPIKey(params) {\n        return this.postPrivate('/user/v3/private/update-sub-api', params);\n    }\n    /** WARNING: BE CAREFUL! The API key used to call this interface will be invalid immediately. */\n    deleteMasterAPIKey() {\n        return this.postPrivate('/user/v3/private/delete-api');\n    }\n    /** WARNING: BE CAREFUL! The API key used to call this interface will be invalid immediately. */\n    deleteSubAPIKey() {\n        return this.postPrivate('/user/v3/private/delete-sub-api');\n    }\n}\nexports.AccountAssetClientV3 = AccountAssetClientV3;\n//# sourceMappingURL=account-asset-client-v3.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi9hY2NvdW50LWFzc2V0LWNsaWVudC12My5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEI7QUFDNUIsZUFBZSxtQkFBTyxDQUFDLGdFQUFRO0FBQy9CLHlDQUF5QyxtQkFBTyxDQUFDLHdGQUF1QjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0VBQXNFLE1BQU07QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWRpbmctc3lzdGVtLy4vbm9kZV9tb2R1bGVzL2J5Yml0LWFwaS9saWIvYWNjb3VudC1hc3NldC1jbGllbnQtdjMuanM/NTYxZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BY2NvdW50QXNzZXRDbGllbnRWMyA9IHZvaWQgMDtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuL3V0aWxcIik7XG5jb25zdCBCYXNlUmVzdENsaWVudF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3V0aWwvQmFzZVJlc3RDbGllbnRcIikpO1xuLyoqXG4gKiBSRVNUIEFQSSBjbGllbnQgZm9yIEFjY291bnQgQXNzZXQgVjMgQVBJc1xuICovXG5jbGFzcyBBY2NvdW50QXNzZXRDbGllbnRWMyBleHRlbmRzIEJhc2VSZXN0Q2xpZW50XzEuZGVmYXVsdCB7XG4gICAgZ2V0Q2xpZW50VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHV0aWxfMS5SRVNUX0NMSUVOVF9UWVBFX0VOVU0udjM7XG4gICAgfVxuICAgIGZldGNoU2VydmVyVGltZSgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlcyA9IHlpZWxkIHRoaXMuZ2V0U2VydmVyVGltZSgpO1xuICAgICAgICAgICAgcmV0dXJuIE51bWJlcihyZXMudGltZSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRTZXJ2ZXJUaW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXQoJy92My9wdWJsaWMvdGltZScpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKlxuICAgICAqIFRyYW5zZmVyIERhdGEgRW5kcG9pbnRzXG4gICAgICpcbiAgICAgKi9cbiAgICBjcmVhdGVJbnRlcm5hbFRyYW5zZmVyKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5wb3N0UHJpdmF0ZSgnL2Fzc2V0L3YzL3ByaXZhdGUvdHJhbnNmZXIvaW50ZXItdHJhbnNmZXInLCBwYXJhbXMpO1xuICAgIH1cbiAgICBnZXRJbnRlcm5hbFRyYW5zZmVycyhwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJpdmF0ZSgnL2Fzc2V0L3YzL3ByaXZhdGUvdHJhbnNmZXIvaW50ZXItdHJhbnNmZXIvbGlzdC9xdWVyeScsIHBhcmFtcyk7XG4gICAgfVxuICAgIGNyZWF0ZVN1YkFjY291bnRUcmFuc2ZlcihwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9zdFByaXZhdGUoJy9hc3NldC92My9wcml2YXRlL3RyYW5zZmVyL3N1Yi1tZW1iZXItdHJhbnNmZXInLCBwYXJhbXMpO1xuICAgIH1cbiAgICBnZXRTdWJBY2NvdW50VHJhbnNmZXJzKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRQcml2YXRlKCcvYXNzZXQvdjMvcHJpdmF0ZS90cmFuc2Zlci9zdWItbWVtYmVyLXRyYW5zZmVyL2xpc3QvcXVlcnknLCBwYXJhbXMpO1xuICAgIH1cbiAgICBnZXRTdWJBY2NvdW50cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJpdmF0ZSgnL2Fzc2V0L3YzL3ByaXZhdGUvdHJhbnNmZXIvc3ViLW1lbWJlci9saXN0L3F1ZXJ5Jyk7XG4gICAgfVxuICAgIGVuYWJsZVVuaXZlcnNhbFRyYW5zZmVyKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5wb3N0UHJpdmF0ZSgnL2Fzc2V0L3YzL3ByaXZhdGUvdHJhbnNmZXIvdHJhbnNmZXItc3ViLW1lbWJlci1zYXZlJywgcGFyYW1zKTtcbiAgICB9XG4gICAgY3JlYXRlVW5pdmVyc2FsVHJhbnNmZXIocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvc3RQcml2YXRlKCcvYXNzZXQvdjMvcHJpdmF0ZS90cmFuc2Zlci91bml2ZXJzYWwtdHJhbnNmZXInLCBwYXJhbXMpO1xuICAgIH1cbiAgICBnZXRVbml2ZXJzYWxUcmFuc2ZlcnMocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFByaXZhdGUoJy9hc3NldC92My9wcml2YXRlL3RyYW5zZmVyL3VuaXZlcnNhbC10cmFuc2Zlci9saXN0L3F1ZXJ5JywgcGFyYW1zKTtcbiAgICB9XG4gICAgZ2V0VHJhbnNmZXJhYmxlQ29pbkxpc3QocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFByaXZhdGUoJy9hc3NldC92My9wcml2YXRlL3RyYW5zZmVyL3RyYW5zZmVyLWNvaW4vbGlzdC9xdWVyeScsIHBhcmFtcyk7XG4gICAgfVxuICAgIGdldEFjY291bnRDb2luQmFsYW5jZShwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJpdmF0ZSgnL2Fzc2V0L3YzL3ByaXZhdGUvdHJhbnNmZXIvYWNjb3VudC1jb2luL2JhbGFuY2UvcXVlcnknLCBwYXJhbXMpO1xuICAgIH1cbiAgICBnZXRBY2NvdW50Q29pbkJhbGFuY2VzKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRQcml2YXRlKCcvYXNzZXQvdjMvcHJpdmF0ZS90cmFuc2Zlci9hY2NvdW50LWNvaW5zL2JhbGFuY2UvcXVlcnknLCBwYXJhbXMpO1xuICAgIH1cbiAgICBnZXRBc3NldEluZm8ocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFByaXZhdGUoJy9hc3NldC92My9wcml2YXRlL3RyYW5zZmVyL2Fzc2V0LWluZm8vcXVlcnknLCBwYXJhbXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKlxuICAgICAqIFdhbGxldCAmIERlcG9zaXQgRW5kcG9pbnRzXG4gICAgICpcbiAgICAgKi9cbiAgICAvKiogR2V0IERlcG9zaXQgU3BlYyAqL1xuICAgIGdldFN1cHBvcnRlZERlcG9zaXRMaXN0KHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXQoJy9hc3NldC92My9wdWJsaWMvZGVwb3NpdC9hbGxvd2VkLWRlcG9zaXQtbGlzdC9xdWVyeScsIHBhcmFtcyk7XG4gICAgfVxuICAgIGdldERlcG9zaXRSZWNvcmRzKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRQcml2YXRlKCcvYXNzZXQvdjMvcHJpdmF0ZS9kZXBvc2l0L3JlY29yZC9xdWVyeScsIHBhcmFtcyk7XG4gICAgfVxuICAgIGdldFN1YkRlcG9zaXRSZWNvcmRzKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRQcml2YXRlKCcvYXNzZXQvdjMvcHJpdmF0ZS9kZXBvc2l0L3N1Yi1tZW1iZXItcmVjb3JkL3F1ZXJ5JywgcGFyYW1zKTtcbiAgICB9XG4gICAgZ2V0V2l0aGRyYXdSZWNvcmRzKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRQcml2YXRlKCcvYXNzZXQvdjMvcHJpdmF0ZS93aXRoZHJhdy9yZWNvcmQvcXVlcnknLCBwYXJhbXMpO1xuICAgIH1cbiAgICBnZXRDb2luSW5mb3JtYXRpb24oY29pbikge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRQcml2YXRlKCcvYXNzZXQvdjMvcHJpdmF0ZS9jb2luLWluZm8vcXVlcnknLCB7IGNvaW4gfSk7XG4gICAgfVxuICAgIHN1Ym1pdFdpdGhkcmF3YWwocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvc3RQcml2YXRlKCcvYXNzZXQvdjMvcHJpdmF0ZS93aXRoZHJhdy9jcmVhdGUnLCBwYXJhbXMpO1xuICAgIH1cbiAgICBjYW5jZWxXaXRoZHJhd2FsKHdpdGhkcmF3YWxJZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wb3N0UHJpdmF0ZSgnL2Fzc2V0L3YzL3ByaXZhdGUvd2l0aGRyYXcvY3JlYXRlJywge1xuICAgICAgICAgICAgd2l0aGRyYXdhbElkLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0TWFzdGVyQWNjb3VudERlcG9zaXRBZGRyZXNzKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRQcml2YXRlKCcvYXNzZXQvdjMvcHJpdmF0ZS9kZXBvc2l0L2FkZHJlc3MvcXVlcnknLCBwYXJhbXMpO1xuICAgIH1cbiAgICBnZXRTdWJBY2NvdW50RGVwb3NpdEFkZHJlc3MocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFByaXZhdGUoJy9hc3NldC92My9wcml2YXRlL2RlcG9zaXQvc3ViLW1lbWJlci1hZGRyZXNzL3F1ZXJ5JywgcGFyYW1zKTtcbiAgICB9XG4gICAgY3JlYXRlU3ViTWVtYmVyKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5wb3N0UHJpdmF0ZSgnL3VzZXIvdjMvcHJpdmF0ZS9jcmVhdGUtc3ViLW1lbWJlcicsIHBhcmFtcyk7XG4gICAgfVxuICAgIGNyZWF0ZVN1YkFQSUtleShwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9zdFByaXZhdGUoJy91c2VyL3YzL3ByaXZhdGUvY3JlYXRlLXN1Yi1hcGknLCBwYXJhbXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgU3ViIFVJRCBMaXN0XG4gICAgICovXG4gICAgZ2V0U3ViTWVtYmVycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJpdmF0ZSgnL3VzZXIvdjMvcHJpdmF0ZS9xdWVyeS1zdWItbWVtYmVycycpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBGcm96ZSBTdWIgVUlEXG4gICAgICovXG4gICAgZnJlZXplU3ViTWVtYmVyKHN1YnVpZCwgZnJvemVuU3RhdHVzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvc3RQcml2YXRlKCcvdXNlci92My9wcml2YXRlL2Zyb3plbi1zdWItbWVtYmVyJywge1xuICAgICAgICAgICAgc3VidWlkLFxuICAgICAgICAgICAgZnJvemVuOiBmcm96ZW5TdGF0dXMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRBUElLZXlJbmZvcm1hdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJpdmF0ZSgnL3VzZXIvdjMvcHJpdmF0ZS9xdWVyeS1hcGknKTtcbiAgICB9XG4gICAgbW9kaWZ5TWFzdGVyQVBJS2V5KHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5wb3N0UHJpdmF0ZSgnL3VzZXIvdjMvcHJpdmF0ZS91cGRhdGUtYXBpJywgcGFyYW1zKTtcbiAgICB9XG4gICAgbW9kaWZ5U3ViQVBJS2V5KHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5wb3N0UHJpdmF0ZSgnL3VzZXIvdjMvcHJpdmF0ZS91cGRhdGUtc3ViLWFwaScsIHBhcmFtcyk7XG4gICAgfVxuICAgIC8qKiBXQVJOSU5HOiBCRSBDQVJFRlVMISBUaGUgQVBJIGtleSB1c2VkIHRvIGNhbGwgdGhpcyBpbnRlcmZhY2Ugd2lsbCBiZSBpbnZhbGlkIGltbWVkaWF0ZWx5LiAqL1xuICAgIGRlbGV0ZU1hc3RlckFQSUtleSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9zdFByaXZhdGUoJy91c2VyL3YzL3ByaXZhdGUvZGVsZXRlLWFwaScpO1xuICAgIH1cbiAgICAvKiogV0FSTklORzogQkUgQ0FSRUZVTCEgVGhlIEFQSSBrZXkgdXNlZCB0byBjYWxsIHRoaXMgaW50ZXJmYWNlIHdpbGwgYmUgaW52YWxpZCBpbW1lZGlhdGVseS4gKi9cbiAgICBkZWxldGVTdWJBUElLZXkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvc3RQcml2YXRlKCcvdXNlci92My9wcml2YXRlL2RlbGV0ZS1zdWItYXBpJyk7XG4gICAgfVxufVxuZXhwb3J0cy5BY2NvdW50QXNzZXRDbGllbnRWMyA9IEFjY291bnRBc3NldENsaWVudFYzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWNjb3VudC1hc3NldC1jbGllbnQtdjMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/account-asset-client-v3.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/account-asset-client.js":
/*!************************************************************!*\
  !*** ./node_modules/bybit-api/lib/account-asset-client.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AccountAssetClient = void 0;\nconst util_1 = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/bybit-api/lib/util/index.js\");\nconst BaseRestClient_1 = __importDefault(__webpack_require__(/*! ./util/BaseRestClient */ \"(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js\"));\n/**\n * REST API client for Account Asset APIs\n *\n * @deprecated WARNING: V1/V2 private endpoints (Rest API & Websocket Stream) for mainnet\n * will be switched off gradually from 30 Oct 2023 UTC, so they are not promised a stability.\n * Please note that you are at your own risk of using old endpoints going forward, and please move to V5 ASAP.\n */\nclass AccountAssetClient extends BaseRestClient_1.default {\n    getClientType() {\n        return util_1.REST_CLIENT_TYPE_ENUM.accountAsset;\n    }\n    fetchServerTime() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.getServerTime();\n            return Number(res.time_now);\n        });\n    }\n    /**\n     *\n     * Transfer Data Endpoints\n     *\n     */\n    createInternalTransfer(params) {\n        return this.postPrivate('/asset/v1/private/transfer', params);\n    }\n    createSubAccountTransfer(params) {\n        return this.postPrivate('/asset/v1/private/sub-member/transfer', params);\n    }\n    getInternalTransfers(params) {\n        return this.getPrivate('/asset/v1/private/transfer/list', params);\n    }\n    getSubAccountTransfers(params) {\n        return this.getPrivate('/asset/v1/private/sub-member/transfer/list', params);\n    }\n    getSubAccounts() {\n        return this.getPrivate('/asset/v1/private/sub-member/member-ids');\n    }\n    enableUniversalTransfer(params) {\n        return this.postPrivate('/asset/v1/private/transferable-subs/save', params);\n    }\n    createUniversalTransfer(params) {\n        return this.postPrivate('/asset/v1/private/universal/transfer', params);\n    }\n    getUniversalTransfers(params) {\n        return this.getPrivate('/asset/v1/private/universal/transfer/list', params);\n    }\n    /**\n     *\n     * Wallet & Deposit Endpoints\n     *\n     */\n    getSupportedDepositList(params) {\n        return this.get('/asset/v1/public/deposit/allowed-deposit-list', params);\n    }\n    getDepositRecords(params) {\n        return this.getPrivate('/asset/v1/private/deposit/record/query', params);\n    }\n    getWithdrawRecords(params) {\n        return this.getPrivate('/asset/v1/private/withdraw/record/query', params);\n    }\n    getCoinInformation(coin) {\n        return this.getPrivate('/asset/v1/private/coin-info/query', { coin });\n    }\n    getAssetInformation(params) {\n        return this.getPrivate('/asset/v1/private/asset-info/query', params);\n    }\n    submitWithdrawal(params) {\n        return this.postPrivate('/asset/v1/private/withdraw', params);\n    }\n    cancelWithdrawal(withdrawalId) {\n        return this.postPrivate('/asset/v1/private/withdraw/cancel', {\n            id: withdrawalId,\n        });\n    }\n    getDepositAddress(coin) {\n        return this.getPrivate('/asset/v1/private/deposit/address', { coin });\n    }\n    /**\n     *\n     * API Data Endpoints\n     *\n     */\n    getServerTime() {\n        return this.get('/v2/public/time');\n    }\n    getApiAnnouncements() {\n        return this.get('/v2/public/announcement');\n    }\n}\nexports.AccountAssetClient = AccountAssetClient;\n//# sourceMappingURL=account-asset-client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi9hY2NvdW50LWFzc2V0LWNsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEI7QUFDMUIsZUFBZSxtQkFBTyxDQUFDLGdFQUFRO0FBQy9CLHlDQUF5QyxtQkFBTyxDQUFDLHdGQUF1QjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0VBQXNFLE1BQU07QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHNFQUFzRSxNQUFNO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi9hY2NvdW50LWFzc2V0LWNsaWVudC5qcz8xNmFkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkFjY291bnRBc3NldENsaWVudCA9IHZvaWQgMDtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuL3V0aWxcIik7XG5jb25zdCBCYXNlUmVzdENsaWVudF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3V0aWwvQmFzZVJlc3RDbGllbnRcIikpO1xuLyoqXG4gKiBSRVNUIEFQSSBjbGllbnQgZm9yIEFjY291bnQgQXNzZXQgQVBJc1xuICpcbiAqIEBkZXByZWNhdGVkIFdBUk5JTkc6IFYxL1YyIHByaXZhdGUgZW5kcG9pbnRzIChSZXN0IEFQSSAmIFdlYnNvY2tldCBTdHJlYW0pIGZvciBtYWlubmV0XG4gKiB3aWxsIGJlIHN3aXRjaGVkIG9mZiBncmFkdWFsbHkgZnJvbSAzMCBPY3QgMjAyMyBVVEMsIHNvIHRoZXkgYXJlIG5vdCBwcm9taXNlZCBhIHN0YWJpbGl0eS5cbiAqIFBsZWFzZSBub3RlIHRoYXQgeW91IGFyZSBhdCB5b3VyIG93biByaXNrIG9mIHVzaW5nIG9sZCBlbmRwb2ludHMgZ29pbmcgZm9yd2FyZCwgYW5kIHBsZWFzZSBtb3ZlIHRvIFY1IEFTQVAuXG4gKi9cbmNsYXNzIEFjY291bnRBc3NldENsaWVudCBleHRlbmRzIEJhc2VSZXN0Q2xpZW50XzEuZGVmYXVsdCB7XG4gICAgZ2V0Q2xpZW50VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHV0aWxfMS5SRVNUX0NMSUVOVF9UWVBFX0VOVU0uYWNjb3VudEFzc2V0O1xuICAgIH1cbiAgICBmZXRjaFNlcnZlclRpbWUoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCByZXMgPSB5aWVsZCB0aGlzLmdldFNlcnZlclRpbWUoKTtcbiAgICAgICAgICAgIHJldHVybiBOdW1iZXIocmVzLnRpbWVfbm93KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqXG4gICAgICogVHJhbnNmZXIgRGF0YSBFbmRwb2ludHNcbiAgICAgKlxuICAgICAqL1xuICAgIGNyZWF0ZUludGVybmFsVHJhbnNmZXIocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvc3RQcml2YXRlKCcvYXNzZXQvdjEvcHJpdmF0ZS90cmFuc2ZlcicsIHBhcmFtcyk7XG4gICAgfVxuICAgIGNyZWF0ZVN1YkFjY291bnRUcmFuc2ZlcihwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9zdFByaXZhdGUoJy9hc3NldC92MS9wcml2YXRlL3N1Yi1tZW1iZXIvdHJhbnNmZXInLCBwYXJhbXMpO1xuICAgIH1cbiAgICBnZXRJbnRlcm5hbFRyYW5zZmVycyhwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJpdmF0ZSgnL2Fzc2V0L3YxL3ByaXZhdGUvdHJhbnNmZXIvbGlzdCcsIHBhcmFtcyk7XG4gICAgfVxuICAgIGdldFN1YkFjY291bnRUcmFuc2ZlcnMocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFByaXZhdGUoJy9hc3NldC92MS9wcml2YXRlL3N1Yi1tZW1iZXIvdHJhbnNmZXIvbGlzdCcsIHBhcmFtcyk7XG4gICAgfVxuICAgIGdldFN1YkFjY291bnRzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRQcml2YXRlKCcvYXNzZXQvdjEvcHJpdmF0ZS9zdWItbWVtYmVyL21lbWJlci1pZHMnKTtcbiAgICB9XG4gICAgZW5hYmxlVW5pdmVyc2FsVHJhbnNmZXIocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvc3RQcml2YXRlKCcvYXNzZXQvdjEvcHJpdmF0ZS90cmFuc2ZlcmFibGUtc3Vicy9zYXZlJywgcGFyYW1zKTtcbiAgICB9XG4gICAgY3JlYXRlVW5pdmVyc2FsVHJhbnNmZXIocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvc3RQcml2YXRlKCcvYXNzZXQvdjEvcHJpdmF0ZS91bml2ZXJzYWwvdHJhbnNmZXInLCBwYXJhbXMpO1xuICAgIH1cbiAgICBnZXRVbml2ZXJzYWxUcmFuc2ZlcnMocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFByaXZhdGUoJy9hc3NldC92MS9wcml2YXRlL3VuaXZlcnNhbC90cmFuc2Zlci9saXN0JywgcGFyYW1zKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBXYWxsZXQgJiBEZXBvc2l0IEVuZHBvaW50c1xuICAgICAqXG4gICAgICovXG4gICAgZ2V0U3VwcG9ydGVkRGVwb3NpdExpc3QocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldCgnL2Fzc2V0L3YxL3B1YmxpYy9kZXBvc2l0L2FsbG93ZWQtZGVwb3NpdC1saXN0JywgcGFyYW1zKTtcbiAgICB9XG4gICAgZ2V0RGVwb3NpdFJlY29yZHMocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFByaXZhdGUoJy9hc3NldC92MS9wcml2YXRlL2RlcG9zaXQvcmVjb3JkL3F1ZXJ5JywgcGFyYW1zKTtcbiAgICB9XG4gICAgZ2V0V2l0aGRyYXdSZWNvcmRzKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRQcml2YXRlKCcvYXNzZXQvdjEvcHJpdmF0ZS93aXRoZHJhdy9yZWNvcmQvcXVlcnknLCBwYXJhbXMpO1xuICAgIH1cbiAgICBnZXRDb2luSW5mb3JtYXRpb24oY29pbikge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRQcml2YXRlKCcvYXNzZXQvdjEvcHJpdmF0ZS9jb2luLWluZm8vcXVlcnknLCB7IGNvaW4gfSk7XG4gICAgfVxuICAgIGdldEFzc2V0SW5mb3JtYXRpb24ocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFByaXZhdGUoJy9hc3NldC92MS9wcml2YXRlL2Fzc2V0LWluZm8vcXVlcnknLCBwYXJhbXMpO1xuICAgIH1cbiAgICBzdWJtaXRXaXRoZHJhd2FsKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5wb3N0UHJpdmF0ZSgnL2Fzc2V0L3YxL3ByaXZhdGUvd2l0aGRyYXcnLCBwYXJhbXMpO1xuICAgIH1cbiAgICBjYW5jZWxXaXRoZHJhd2FsKHdpdGhkcmF3YWxJZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wb3N0UHJpdmF0ZSgnL2Fzc2V0L3YxL3ByaXZhdGUvd2l0aGRyYXcvY2FuY2VsJywge1xuICAgICAgICAgICAgaWQ6IHdpdGhkcmF3YWxJZCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldERlcG9zaXRBZGRyZXNzKGNvaW4pIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJpdmF0ZSgnL2Fzc2V0L3YxL3ByaXZhdGUvZGVwb3NpdC9hZGRyZXNzJywgeyBjb2luIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEFQSSBEYXRhIEVuZHBvaW50c1xuICAgICAqXG4gICAgICovXG4gICAgZ2V0U2VydmVyVGltZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KCcvdjIvcHVibGljL3RpbWUnKTtcbiAgICB9XG4gICAgZ2V0QXBpQW5ub3VuY2VtZW50cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KCcvdjIvcHVibGljL2Fubm91bmNlbWVudCcpO1xuICAgIH1cbn1cbmV4cG9ydHMuQWNjb3VudEFzc2V0Q2xpZW50ID0gQWNjb3VudEFzc2V0Q2xpZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWNjb3VudC1hc3NldC1jbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/account-asset-client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/constants/enum.js":
/*!******************************************************!*\
  !*** ./node_modules/bybit-api/lib/constants/enum.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LinearPositionIdx = exports.API_ERROR_CODE = exports.positionTpSlModeEnum = exports.linearPositionModeEnum = void 0;\nexports.linearPositionModeEnum = {\n    OneWayMode: 'MergedSingle',\n    HedgeMode: 'BothSide',\n};\nexports.positionTpSlModeEnum = {\n    /** Full take profit/stop loss mode (a single TP order and a single SL order can be placed, covering the entire position) */\n    Full: 'Full',\n    /** Partial take profit/stop loss mode (multiple TP and SL orders can be placed, covering portions of the position) */\n    Partial: 'Partial',\n};\nexports.API_ERROR_CODE = {\n    BALANCE_INSUFFICIENT_SPOT: -1131,\n    ORDER_NOT_FOUND_OR_TOO_LATE_SPOT: -2013,\n    SUCCESS: 0,\n    /** This could mean bad request, incorrect value types or even incorrect/missing values */\n    PARAMS_MISSING_OR_WRONG: 10001,\n    INVALID_API_KEY_OR_PERMISSIONS: 10003,\n    SIGNATURE_NOT_VALID: 10004,\n    INCORRECT_API_KEY_PERMISSIONS: 10005,\n    /** API key requires specific whitelisted IPs, and this IP was not in the list */\n    INCORRECT_API_REQUEST_IP: 10010,\n    DB_ERROR_WRONG_CURSOR: 10016,\n    /** Account not unified margin, update required */\n    ACCOUNT_NOT_UNIFIED: 10020,\n    UNKNOWN_ERROR: 12000,\n    BALANCE_INSUFFICIENT_SPOT_V3: 12131,\n    ORDER_NOT_FOUND_SPOT_V3: 12213,\n    ORDER_NOT_FOUND_LEVERAGED_TOKEN: 12407,\n    EXCEEDED_UPPER_LIMIT_LEVERAGED_TOKEN: 12409,\n    QUERY_ACCOUNT_INFO_ERROR: 12602,\n    CROSS_MARGIN_USER_NOT_FOUND: 12607,\n    CROSS_MARGIN_REPAYMENT_NOT_REQUIRED: 12616,\n    CROSS_MARGIN_NOT_ENABLED: 12640,\n    ORDER_NOT_FOUND_OR_TOO_LATE: 20001,\n    POSITION_STATUS_NOT_NORMAL: 30013,\n    CANNOT_SET_TRADING_STOP_FOR_ZERO_POS: 30024,\n    /** Seen when placing an order */\n    INSUFFICIENT_BALANCE_FOR_ORDER_COST: 30031,\n    POSITION_IDX_NOT_MATCH_POSITION_MODE: 30041,\n    /** Seen if a conditional order is too large */\n    INSUFFICIENT_BALANCE: 30042,\n    /** E.g. trying to change position margin while on cross */\n    POSITION_IS_CROSS_MARGIN: 30056,\n    POSITION_MODE_NOT_MODIFIED: 30083,\n    ISOLATED_NOT_MODIFIED: 30084,\n    RISK_LIMIT_NOT_EXISTS: 30090,\n    SUB_USER_ALREADY_EXISTS: 31005,\n    LEVERAGE_NOT_MODIFIED: 34036,\n    SAME_SLTP_MODE: 37002,\n    COPY_TRADE_NOT_OPEN_ORDER: 39426,\n    V5_ORDER_NOT_FOUND: 110001,\n    V5_INSUFFICIENT_BALANCE: 110007,\n    V5_API_KEY_PERMISSION_DENIED: 10005,\n    V5_CROSS_ISOLATED_MARGIN_NOT_CHANGED: 110026,\n    V5_LEVERAGE_NOT_CHANGED: 110043,\n    V5_MARGIN_MODE_NOT_CHANGED: 110073,\n    V5_TPSL_NOT_CHANGED: 10001,\n    V5_RISK_ID_NOT_CHANGED: 10001,\n    V5_AUTO_ADD_MARGIN_NOT_CHANGED: 10001,\n    V5_TPSL_ERROR_NO_POSITION: 10001,\n    V5_RISK_ID_NOT_MODIFIED: 110075,\n    QTY_EXCEEDS_MAX_LIMIT: 130006,\n    ORDER_NOT_FOUND_OR_TOO_LATE_LINEAR: 130010,\n    ORDER_COST_NOT_AVAILABLE: 130021,\n    CANNOT_SET_LINEAR_TRADING_STOP_FOR_ZERO_POS: 130024,\n    ISOLATED_NOT_MODIFIED_LINEAR: 130056,\n    POSITION_SIZE_IS_ZERO: 130057,\n    AUTO_ADD_MARGIN_NOT_MODIFIED: 130060,\n    INSUFFICIENT_BALANCE_FOR_ORDER_COST_LINEAR: 130080,\n    SAME_SLTP_MODE_LINEAR: 130150,\n    NOT_SUPPORTED_FOR_SUBACCOUNTS: 131003,\n    TRANSFER_ID_EXISTS: 131214,\n    RISK_ID_NOT_MODIFIED: 134026,\n    CONTRACT_ORDER_NOT_EXISTS: 140001,\n    CONTRACT_INSUFFICIENT_BALANCE: 140007,\n    CONTRACT_POSITION_MODE_NOT_MODIFIED: 140025,\n    CONTRACT_MARGIN_MODE_NOT_MODIFIED: 140026,\n    CONTRACT_RISK_LIMIT_INFO_NOT_EXISTS: 140031,\n    CONTRACT_SET_LEVERAGE_NOT_MODIFIED: 140043,\n    SUB_USER_NOT_FOUND: 141009,\n    SPOT_LEVERAGE_TOKEN_INSUFFICIENT_BALANCE: 175006,\n    SPOT_LEVERAGE_TOKEN_ORDER_NOT_FOUND: 175007,\n    SPOT_LEVERAGE_QUIZ_REQUIRED: 175010,\n    SPOT_MARGIN_NOT_ENABLED: 176008,\n    SPOT_MARGIN_QUESTIONNAIRE_NOT_SUBMIT: 176037,\n    /** E.g. USDC Options trading, trying to access a symbol that is no longer active */\n    CONTRACT_NAME_NOT_EXIST: 3100111,\n    ORDER_NOT_EXIST: 3100136,\n    NO_ACTIVE_ORDER: 3100205,\n    /** E.g. USDC Options trading when the account hasn't been opened for USDC Options yet */\n    ACCOUNT_NOT_EXIST: 3200200,\n    INCORRECT_PRIVATE_OPERATIONS: 3303001,\n    SET_MARGIN_MODE_FAILED_USDC: 3400045,\n    INCORRECT_MMP_PARAMETERS: 3500712,\n    INSTITION_MMP_PROFILE_NOT_FOUND: 3500713,\n};\n/**\n * Position idx, used to identify positions in different position modes.\n * Required if you are under One-Way Mode:\n */\nvar LinearPositionIdx;\n(function (LinearPositionIdx) {\n    LinearPositionIdx[LinearPositionIdx[\"OneWayMode\"] = 0] = \"OneWayMode\";\n    LinearPositionIdx[LinearPositionIdx[\"BuySide\"] = 1] = \"BuySide\";\n    LinearPositionIdx[LinearPositionIdx[\"SellSide\"] = 2] = \"SellSide\";\n})(LinearPositionIdx || (exports.LinearPositionIdx = LinearPositionIdx = {}));\n//# sourceMappingURL=enum.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi9jb25zdGFudHMvZW51bS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUIsR0FBRyxzQkFBc0IsR0FBRyw0QkFBNEIsR0FBRyw4QkFBOEI7QUFDbEgsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3QkFBd0IseUJBQXlCLHlCQUF5QjtBQUMzRSIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWRpbmctc3lzdGVtLy4vbm9kZV9tb2R1bGVzL2J5Yml0LWFwaS9saWIvY29uc3RhbnRzL2VudW0uanM/YmU3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTGluZWFyUG9zaXRpb25JZHggPSBleHBvcnRzLkFQSV9FUlJPUl9DT0RFID0gZXhwb3J0cy5wb3NpdGlvblRwU2xNb2RlRW51bSA9IGV4cG9ydHMubGluZWFyUG9zaXRpb25Nb2RlRW51bSA9IHZvaWQgMDtcbmV4cG9ydHMubGluZWFyUG9zaXRpb25Nb2RlRW51bSA9IHtcbiAgICBPbmVXYXlNb2RlOiAnTWVyZ2VkU2luZ2xlJyxcbiAgICBIZWRnZU1vZGU6ICdCb3RoU2lkZScsXG59O1xuZXhwb3J0cy5wb3NpdGlvblRwU2xNb2RlRW51bSA9IHtcbiAgICAvKiogRnVsbCB0YWtlIHByb2ZpdC9zdG9wIGxvc3MgbW9kZSAoYSBzaW5nbGUgVFAgb3JkZXIgYW5kIGEgc2luZ2xlIFNMIG9yZGVyIGNhbiBiZSBwbGFjZWQsIGNvdmVyaW5nIHRoZSBlbnRpcmUgcG9zaXRpb24pICovXG4gICAgRnVsbDogJ0Z1bGwnLFxuICAgIC8qKiBQYXJ0aWFsIHRha2UgcHJvZml0L3N0b3AgbG9zcyBtb2RlIChtdWx0aXBsZSBUUCBhbmQgU0wgb3JkZXJzIGNhbiBiZSBwbGFjZWQsIGNvdmVyaW5nIHBvcnRpb25zIG9mIHRoZSBwb3NpdGlvbikgKi9cbiAgICBQYXJ0aWFsOiAnUGFydGlhbCcsXG59O1xuZXhwb3J0cy5BUElfRVJST1JfQ09ERSA9IHtcbiAgICBCQUxBTkNFX0lOU1VGRklDSUVOVF9TUE9UOiAtMTEzMSxcbiAgICBPUkRFUl9OT1RfRk9VTkRfT1JfVE9PX0xBVEVfU1BPVDogLTIwMTMsXG4gICAgU1VDQ0VTUzogMCxcbiAgICAvKiogVGhpcyBjb3VsZCBtZWFuIGJhZCByZXF1ZXN0LCBpbmNvcnJlY3QgdmFsdWUgdHlwZXMgb3IgZXZlbiBpbmNvcnJlY3QvbWlzc2luZyB2YWx1ZXMgKi9cbiAgICBQQVJBTVNfTUlTU0lOR19PUl9XUk9ORzogMTAwMDEsXG4gICAgSU5WQUxJRF9BUElfS0VZX09SX1BFUk1JU1NJT05TOiAxMDAwMyxcbiAgICBTSUdOQVRVUkVfTk9UX1ZBTElEOiAxMDAwNCxcbiAgICBJTkNPUlJFQ1RfQVBJX0tFWV9QRVJNSVNTSU9OUzogMTAwMDUsXG4gICAgLyoqIEFQSSBrZXkgcmVxdWlyZXMgc3BlY2lmaWMgd2hpdGVsaXN0ZWQgSVBzLCBhbmQgdGhpcyBJUCB3YXMgbm90IGluIHRoZSBsaXN0ICovXG4gICAgSU5DT1JSRUNUX0FQSV9SRVFVRVNUX0lQOiAxMDAxMCxcbiAgICBEQl9FUlJPUl9XUk9OR19DVVJTT1I6IDEwMDE2LFxuICAgIC8qKiBBY2NvdW50IG5vdCB1bmlmaWVkIG1hcmdpbiwgdXBkYXRlIHJlcXVpcmVkICovXG4gICAgQUNDT1VOVF9OT1RfVU5JRklFRDogMTAwMjAsXG4gICAgVU5LTk9XTl9FUlJPUjogMTIwMDAsXG4gICAgQkFMQU5DRV9JTlNVRkZJQ0lFTlRfU1BPVF9WMzogMTIxMzEsXG4gICAgT1JERVJfTk9UX0ZPVU5EX1NQT1RfVjM6IDEyMjEzLFxuICAgIE9SREVSX05PVF9GT1VORF9MRVZFUkFHRURfVE9LRU46IDEyNDA3LFxuICAgIEVYQ0VFREVEX1VQUEVSX0xJTUlUX0xFVkVSQUdFRF9UT0tFTjogMTI0MDksXG4gICAgUVVFUllfQUNDT1VOVF9JTkZPX0VSUk9SOiAxMjYwMixcbiAgICBDUk9TU19NQVJHSU5fVVNFUl9OT1RfRk9VTkQ6IDEyNjA3LFxuICAgIENST1NTX01BUkdJTl9SRVBBWU1FTlRfTk9UX1JFUVVJUkVEOiAxMjYxNixcbiAgICBDUk9TU19NQVJHSU5fTk9UX0VOQUJMRUQ6IDEyNjQwLFxuICAgIE9SREVSX05PVF9GT1VORF9PUl9UT09fTEFURTogMjAwMDEsXG4gICAgUE9TSVRJT05fU1RBVFVTX05PVF9OT1JNQUw6IDMwMDEzLFxuICAgIENBTk5PVF9TRVRfVFJBRElOR19TVE9QX0ZPUl9aRVJPX1BPUzogMzAwMjQsXG4gICAgLyoqIFNlZW4gd2hlbiBwbGFjaW5nIGFuIG9yZGVyICovXG4gICAgSU5TVUZGSUNJRU5UX0JBTEFOQ0VfRk9SX09SREVSX0NPU1Q6IDMwMDMxLFxuICAgIFBPU0lUSU9OX0lEWF9OT1RfTUFUQ0hfUE9TSVRJT05fTU9ERTogMzAwNDEsXG4gICAgLyoqIFNlZW4gaWYgYSBjb25kaXRpb25hbCBvcmRlciBpcyB0b28gbGFyZ2UgKi9cbiAgICBJTlNVRkZJQ0lFTlRfQkFMQU5DRTogMzAwNDIsXG4gICAgLyoqIEUuZy4gdHJ5aW5nIHRvIGNoYW5nZSBwb3NpdGlvbiBtYXJnaW4gd2hpbGUgb24gY3Jvc3MgKi9cbiAgICBQT1NJVElPTl9JU19DUk9TU19NQVJHSU46IDMwMDU2LFxuICAgIFBPU0lUSU9OX01PREVfTk9UX01PRElGSUVEOiAzMDA4MyxcbiAgICBJU09MQVRFRF9OT1RfTU9ESUZJRUQ6IDMwMDg0LFxuICAgIFJJU0tfTElNSVRfTk9UX0VYSVNUUzogMzAwOTAsXG4gICAgU1VCX1VTRVJfQUxSRUFEWV9FWElTVFM6IDMxMDA1LFxuICAgIExFVkVSQUdFX05PVF9NT0RJRklFRDogMzQwMzYsXG4gICAgU0FNRV9TTFRQX01PREU6IDM3MDAyLFxuICAgIENPUFlfVFJBREVfTk9UX09QRU5fT1JERVI6IDM5NDI2LFxuICAgIFY1X09SREVSX05PVF9GT1VORDogMTEwMDAxLFxuICAgIFY1X0lOU1VGRklDSUVOVF9CQUxBTkNFOiAxMTAwMDcsXG4gICAgVjVfQVBJX0tFWV9QRVJNSVNTSU9OX0RFTklFRDogMTAwMDUsXG4gICAgVjVfQ1JPU1NfSVNPTEFURURfTUFSR0lOX05PVF9DSEFOR0VEOiAxMTAwMjYsXG4gICAgVjVfTEVWRVJBR0VfTk9UX0NIQU5HRUQ6IDExMDA0MyxcbiAgICBWNV9NQVJHSU5fTU9ERV9OT1RfQ0hBTkdFRDogMTEwMDczLFxuICAgIFY1X1RQU0xfTk9UX0NIQU5HRUQ6IDEwMDAxLFxuICAgIFY1X1JJU0tfSURfTk9UX0NIQU5HRUQ6IDEwMDAxLFxuICAgIFY1X0FVVE9fQUREX01BUkdJTl9OT1RfQ0hBTkdFRDogMTAwMDEsXG4gICAgVjVfVFBTTF9FUlJPUl9OT19QT1NJVElPTjogMTAwMDEsXG4gICAgVjVfUklTS19JRF9OT1RfTU9ESUZJRUQ6IDExMDA3NSxcbiAgICBRVFlfRVhDRUVEU19NQVhfTElNSVQ6IDEzMDAwNixcbiAgICBPUkRFUl9OT1RfRk9VTkRfT1JfVE9PX0xBVEVfTElORUFSOiAxMzAwMTAsXG4gICAgT1JERVJfQ09TVF9OT1RfQVZBSUxBQkxFOiAxMzAwMjEsXG4gICAgQ0FOTk9UX1NFVF9MSU5FQVJfVFJBRElOR19TVE9QX0ZPUl9aRVJPX1BPUzogMTMwMDI0LFxuICAgIElTT0xBVEVEX05PVF9NT0RJRklFRF9MSU5FQVI6IDEzMDA1NixcbiAgICBQT1NJVElPTl9TSVpFX0lTX1pFUk86IDEzMDA1NyxcbiAgICBBVVRPX0FERF9NQVJHSU5fTk9UX01PRElGSUVEOiAxMzAwNjAsXG4gICAgSU5TVUZGSUNJRU5UX0JBTEFOQ0VfRk9SX09SREVSX0NPU1RfTElORUFSOiAxMzAwODAsXG4gICAgU0FNRV9TTFRQX01PREVfTElORUFSOiAxMzAxNTAsXG4gICAgTk9UX1NVUFBPUlRFRF9GT1JfU1VCQUNDT1VOVFM6IDEzMTAwMyxcbiAgICBUUkFOU0ZFUl9JRF9FWElTVFM6IDEzMTIxNCxcbiAgICBSSVNLX0lEX05PVF9NT0RJRklFRDogMTM0MDI2LFxuICAgIENPTlRSQUNUX09SREVSX05PVF9FWElTVFM6IDE0MDAwMSxcbiAgICBDT05UUkFDVF9JTlNVRkZJQ0lFTlRfQkFMQU5DRTogMTQwMDA3LFxuICAgIENPTlRSQUNUX1BPU0lUSU9OX01PREVfTk9UX01PRElGSUVEOiAxNDAwMjUsXG4gICAgQ09OVFJBQ1RfTUFSR0lOX01PREVfTk9UX01PRElGSUVEOiAxNDAwMjYsXG4gICAgQ09OVFJBQ1RfUklTS19MSU1JVF9JTkZPX05PVF9FWElTVFM6IDE0MDAzMSxcbiAgICBDT05UUkFDVF9TRVRfTEVWRVJBR0VfTk9UX01PRElGSUVEOiAxNDAwNDMsXG4gICAgU1VCX1VTRVJfTk9UX0ZPVU5EOiAxNDEwMDksXG4gICAgU1BPVF9MRVZFUkFHRV9UT0tFTl9JTlNVRkZJQ0lFTlRfQkFMQU5DRTogMTc1MDA2LFxuICAgIFNQT1RfTEVWRVJBR0VfVE9LRU5fT1JERVJfTk9UX0ZPVU5EOiAxNzUwMDcsXG4gICAgU1BPVF9MRVZFUkFHRV9RVUlaX1JFUVVJUkVEOiAxNzUwMTAsXG4gICAgU1BPVF9NQVJHSU5fTk9UX0VOQUJMRUQ6IDE3NjAwOCxcbiAgICBTUE9UX01BUkdJTl9RVUVTVElPTk5BSVJFX05PVF9TVUJNSVQ6IDE3NjAzNyxcbiAgICAvKiogRS5nLiBVU0RDIE9wdGlvbnMgdHJhZGluZywgdHJ5aW5nIHRvIGFjY2VzcyBhIHN5bWJvbCB0aGF0IGlzIG5vIGxvbmdlciBhY3RpdmUgKi9cbiAgICBDT05UUkFDVF9OQU1FX05PVF9FWElTVDogMzEwMDExMSxcbiAgICBPUkRFUl9OT1RfRVhJU1Q6IDMxMDAxMzYsXG4gICAgTk9fQUNUSVZFX09SREVSOiAzMTAwMjA1LFxuICAgIC8qKiBFLmcuIFVTREMgT3B0aW9ucyB0cmFkaW5nIHdoZW4gdGhlIGFjY291bnQgaGFzbid0IGJlZW4gb3BlbmVkIGZvciBVU0RDIE9wdGlvbnMgeWV0ICovXG4gICAgQUNDT1VOVF9OT1RfRVhJU1Q6IDMyMDAyMDAsXG4gICAgSU5DT1JSRUNUX1BSSVZBVEVfT1BFUkFUSU9OUzogMzMwMzAwMSxcbiAgICBTRVRfTUFSR0lOX01PREVfRkFJTEVEX1VTREM6IDM0MDAwNDUsXG4gICAgSU5DT1JSRUNUX01NUF9QQVJBTUVURVJTOiAzNTAwNzEyLFxuICAgIElOU1RJVElPTl9NTVBfUFJPRklMRV9OT1RfRk9VTkQ6IDM1MDA3MTMsXG59O1xuLyoqXG4gKiBQb3NpdGlvbiBpZHgsIHVzZWQgdG8gaWRlbnRpZnkgcG9zaXRpb25zIGluIGRpZmZlcmVudCBwb3NpdGlvbiBtb2Rlcy5cbiAqIFJlcXVpcmVkIGlmIHlvdSBhcmUgdW5kZXIgT25lLVdheSBNb2RlOlxuICovXG52YXIgTGluZWFyUG9zaXRpb25JZHg7XG4oZnVuY3Rpb24gKExpbmVhclBvc2l0aW9uSWR4KSB7XG4gICAgTGluZWFyUG9zaXRpb25JZHhbTGluZWFyUG9zaXRpb25JZHhbXCJPbmVXYXlNb2RlXCJdID0gMF0gPSBcIk9uZVdheU1vZGVcIjtcbiAgICBMaW5lYXJQb3NpdGlvbklkeFtMaW5lYXJQb3NpdGlvbklkeFtcIkJ1eVNpZGVcIl0gPSAxXSA9IFwiQnV5U2lkZVwiO1xuICAgIExpbmVhclBvc2l0aW9uSWR4W0xpbmVhclBvc2l0aW9uSWR4W1wiU2VsbFNpZGVcIl0gPSAyXSA9IFwiU2VsbFNpZGVcIjtcbn0pKExpbmVhclBvc2l0aW9uSWR4IHx8IChleHBvcnRzLkxpbmVhclBvc2l0aW9uSWR4ID0gTGluZWFyUG9zaXRpb25JZHggPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW51bS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/constants/enum.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/contract-client.js":
/*!*******************************************************!*\
  !*** ./node_modules/bybit-api/lib/contract-client.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ContractClient = void 0;\nconst util_1 = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/bybit-api/lib/util/index.js\");\nconst BaseRestClient_1 = __importDefault(__webpack_require__(/*! ./util/BaseRestClient */ \"(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js\"));\n/**\n * REST API client for Derivatives V3 Contract APIs\n */\nclass ContractClient extends BaseRestClient_1.default {\n    getClientType() {\n        // Follows the same authentication mechanism as other v3 APIs (e.g. USDC)\n        return util_1.REST_CLIENT_TYPE_ENUM.v3;\n    }\n    fetchServerTime() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.getServerTime();\n            return Number(res.time_now);\n        });\n    }\n    /**\n     *\n     * Market Data Endpoints : these seem exactly the same as the unified margin market data endpoints\n     *\n     */\n    /** Query order book info. Each side has a depth of 25 orders. */\n    getOrderBook(symbol, category, limit) {\n        return this.get('/derivatives/v3/public/order-book/L2', {\n            category,\n            symbol,\n            limit,\n        });\n    }\n    /** Get candles/klines */\n    getCandles(params) {\n        return this.get('/derivatives/v3/public/kline', params);\n    }\n    /** Get a symbol price/statistics ticker */\n    getSymbolTicker(category, symbol) {\n        return this.get('/derivatives/v3/public/tickers', { category, symbol });\n    }\n    /** Get trading rules per symbol/contract, incl price/amount/value/leverage filters */\n    getInstrumentInfo(params) {\n        return this.get('/derivatives/v3/public/instruments-info', params);\n    }\n    /** Query mark price kline (like getCandles() but for mark price). */\n    getMarkPriceCandles(params) {\n        return this.get('/derivatives/v3/public/mark-price-kline', params);\n    }\n    /** Query Index Price Kline */\n    getIndexPriceCandles(params) {\n        return this.get('/derivatives/v3/public/index-price-kline', params);\n    }\n    /**\n     * The funding rate is generated every 8 hours at 00:00 UTC, 08:00 UTC and 16:00 UTC.\n     * For example, if a request is sent at 12:00 UTC, the funding rate generated earlier that day at 08:00 UTC will be sent.\n     */\n    getFundingRateHistory(params) {\n        return this.get('/derivatives/v3/public/funding/history-funding-rate', params);\n    }\n    /** Get Risk Limit */\n    getRiskLimit(category, symbol) {\n        return this.get('/derivatives/v3/public/risk-limit/list', {\n            category,\n            symbol,\n        });\n    }\n    /** Get option delivery price */\n    getOptionDeliveryPrice(params) {\n        return this.get('/derivatives/v3/public/delivery-price', params);\n    }\n    /** Get public trading history */\n    getTrades(params) {\n        return this.get('/derivatives/v3/public/recent-trade', params);\n    }\n    /**\n     * Gets the total amount of unsettled contracts.\n     * In other words, the total number of contracts held in open positions.\n     */\n    getOpenInterest(params) {\n        return this.get('/derivatives/v3/public/open-interest', params);\n    }\n    /**\n     *\n     * Contract Account Endpoints\n     *\n     */\n    /** -> Order API */\n    /** Place an order */\n    submitOrder(params) {\n        return this.postPrivate('/contract/v3/private/order/create', params);\n    }\n    /**\n     * Query order history.\n     *\n     * As order creation/cancellation is asynchronous, the data returned from the interface may be delayed.\n     * To access order information in real-time, call getActiveOrders().\n     */\n    getHistoricOrders(params) {\n        return this.getPrivate('/contract/v3/private/order/list', params);\n    }\n    /** Cancel order */\n    cancelOrder(params) {\n        return this.postPrivate('/contract/v3/private/order/cancel', params);\n    }\n    /** Cancel all orders */\n    cancelAllOrders(symbol) {\n        return this.postPrivate('/contract/v3/private/order/cancel-all', {\n            symbol,\n        });\n    }\n    /**\n     * Replace order\n     *\n     * Active order parameters (such as quantity, price) and stop order parameters\n     * cannot be modified in one request at the same time.\n     *\n     * Please request modification separately.\n     */\n    modifyOrder(params) {\n        return this.postPrivate('/contract/v3/private/order/replace', params);\n    }\n    /** Query Open Order(s) (real-time) */\n    getActiveOrders(params) {\n        return this.getPrivate('/contract/v3/private/order/unfilled-orders', params);\n    }\n    /** -> Positions API */\n    /**\n     * Query my positions real-time. Accessing personal list of positions.\n     * Either symbol or settleCoin is required.\n     * Users can access their position holding information through this interface, such as the number of position holdings and wallet balance.\n     */\n    getPositions(params) {\n        return this.getPrivate('/contract/v3/private/position/list', params);\n    }\n    /** Set auto add margin, or Auto-Margin Replenishment. */\n    setAutoAddMargin(params) {\n        return this.postPrivate('/contract/v3/private/position/set-auto-add-margin', params);\n    }\n    /** Switch cross margin mode/isolated margin mode */\n    setMarginSwitch(params) {\n        return this.postPrivate('/contract/v3/private/position/switch-isolated', params);\n    }\n    /** Supports switching between One-Way Mode and Hedge Mode at the coin level. */\n    setPositionMode(params) {\n        return this.postPrivate('/contract/v3/private/position/switch-mode', params);\n    }\n    /**\n     * Switch mode between Full or Partial\n     */\n    setTPSLMode(symbol, tpSlMode) {\n        return this.postPrivate('/contract/v3/private/position/switch-tpsl-mode', {\n            symbol,\n            tpSlMode,\n        });\n    }\n    /** Leverage setting. */\n    setLeverage(symbol, buyLeverage, sellLeverage) {\n        return this.postPrivate('/contract/v3/private/position/set-leverage', {\n            symbol,\n            buyLeverage,\n            sellLeverage,\n        });\n    }\n    /**\n     * Set take profit, stop loss, and trailing stop for your open position.\n     * If using partial mode, TP/SL/TS orders will not close your entire position.\n     */\n    setTPSL(params) {\n        return this.postPrivate('/contract/v3/private/position/trading-stop', params);\n    }\n    /** Set risk limit */\n    setRiskLimit(symbol, riskId, \n    /** 0-one-way, 1-buy side, 2-sell side */\n    positionIdx) {\n        return this.postPrivate('/contract/v3/private/position/set-risk-limit', {\n            symbol,\n            riskId,\n            positionIdx,\n        });\n    }\n    /**\n     * Get user's trading records.\n     * The results are ordered in descending order (the first item is the latest). Returns records up to 2 years old.\n     */\n    getUserExecutionHistory(params) {\n        return this.getPrivate('/contract/v3/private/execution/list', params);\n    }\n    /**\n     * Get user's closed profit and loss records.\n     * The results are ordered in descending order (the first item is the latest).\n     */\n    getClosedProfitAndLoss(params) {\n        return this.getPrivate('/contract/v3/private/position/closed-pnl', params);\n    }\n    /** Get the information of open interest limit. */\n    getOpenInterestLimitInfo(symbol) {\n        return this.getPrivate('/contract/v3/private/position/limit-info', {\n            symbol,\n        });\n    }\n    /** -> Account API */\n    /** Query wallet balance */\n    getBalances(coin) {\n        return this.getPrivate('/contract/v3/private/account/wallet/balance', {\n            coin,\n        });\n    }\n    /** Get user trading fee rate */\n    getTradingFeeRate(symbol) {\n        return this.getPrivate('/contract/v3/private/account/fee-rate', {\n            symbol,\n        });\n    }\n    /**\n     * Get wallet fund records.\n     * This endpoint also shows exchanges from the Asset Exchange,\n     * where the types for the exchange are ExchangeOrderWithdraw and ExchangeOrderDeposit.\n     *\n     * This endpoint returns incomplete information for transfers involving the derivatives wallet.\n     * Use the account asset API for creating and querying internal transfers.\n     */\n    getWalletFundRecords(params) {\n        return this.getPrivate('/contract/v3/private/account/wallet/fund-records', params);\n    }\n    /**\n     *\n     * API Data Endpoints\n     *\n     */\n    getServerTime() {\n        return this.get('/v2/public/time');\n    }\n}\nexports.ContractClient = ContractClient;\n//# sourceMappingURL=contract-client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/contract-client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/copy-trading-client.js":
/*!***********************************************************!*\
  !*** ./node_modules/bybit-api/lib/copy-trading-client.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.CopyTradingClient = void 0;\nconst util_1 = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/bybit-api/lib/util/index.js\");\nconst BaseRestClient_1 = __importDefault(__webpack_require__(/*! ./util/BaseRestClient */ \"(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js\"));\n/**\n * REST API client for USDC Perpetual APIs\n */\nclass CopyTradingClient extends BaseRestClient_1.default {\n    getClientType() {\n        // Follows the same authentication mechanism as USDC APIs\n        return util_1.REST_CLIENT_TYPE_ENUM.v3;\n    }\n    fetchServerTime() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.getServerTime();\n            return Number(res.time_now);\n        });\n    }\n    /**\n     *\n     * Market Data Endpoints\n     *\n     */\n    getSymbols() {\n        return this.get('/contract/v3/public/copytrading/symbol/list');\n    }\n    /**\n     *\n     * Account Data Endpoints\n     *\n     */\n    /** -> Order API */\n    /** Create order */\n    submitOrder(params) {\n        return this.postPrivate('/contract/v3/private/copytrading/order/create', params);\n    }\n    /** Set Trading Stop */\n    setTradingStop(params) {\n        return this.postPrivate('/contract/v3/private/copytrading/order/trading-stop', params);\n    }\n    /** Query Order List */\n    getActiveOrders(params) {\n        return this.getPrivate('/contract/v3/private/copytrading/order/list', params);\n    }\n    /** Cancel order */\n    cancelOrder(params) {\n        return this.postPrivate('/contract/v3/private/copytrading/order/cancel', params);\n    }\n    /** Close Order.  This endpoint's rate_limit will decrease by 10 per request; ie, one request to this endpoint consumes 10 from the limit allowed per minute. */\n    closeOrder(params) {\n        return this.postPrivate('/contract/v3/private/copytrading/order/close', params);\n    }\n    /** -> Positions API */\n    /** Position List */\n    getPositions(symbol) {\n        return this.getPrivate('/contract/v3/private/copytrading/position/list', {\n            symbol,\n        });\n    }\n    /** Close Position */\n    closePosition(symbol, positionIdx) {\n        return this.postPrivate('/contract/v3/private/copytrading/position/close', {\n            symbol,\n            positionIdx,\n        });\n    }\n    /** Only integers can be set to set the leverage */\n    setLeverage(symbol, buyLeverage, sellLeverage) {\n        return this.postPrivate('/contract/v3/private/copytrading/position/set-leverage', { symbol, buyLeverage, sellLeverage });\n    }\n    /**\n     *\n     * Wallet Data Endpoints\n     *\n     */\n    /** Get Wallet Balance */\n    getBalances() {\n        return this.getPrivate('/contract/v3/private/copytrading/wallet/balance');\n    }\n    /** Transfer */\n    transfer(params) {\n        return this.postPrivate('/contract/v3/private/copytrading/wallet/transfer', params);\n    }\n    /**\n     *\n     * API Data Endpoints\n     *\n     */\n    getServerTime() {\n        return this.get('/v2/public/time');\n    }\n    getAnnouncements() {\n        return this.get('/v2/public/announcement');\n    }\n}\nexports.CopyTradingClient = CopyTradingClient;\n//# sourceMappingURL=copy-trading-client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi9jb3B5LXRyYWRpbmctY2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QixlQUFlLG1CQUFPLENBQUMsZ0VBQVE7QUFDL0IseUNBQXlDLG1CQUFPLENBQUMsd0ZBQXVCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtGQUFrRjtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSw0RkFBNEYsbUNBQW1DO0FBQy9IO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFkaW5nLXN5c3RlbS8uL25vZGVfbW9kdWxlcy9ieWJpdC1hcGkvbGliL2NvcHktdHJhZGluZy1jbGllbnQuanM/NzYwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db3B5VHJhZGluZ0NsaWVudCA9IHZvaWQgMDtcbmNvbnN0IHV0aWxfMSA9IHJlcXVpcmUoXCIuL3V0aWxcIik7XG5jb25zdCBCYXNlUmVzdENsaWVudF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3V0aWwvQmFzZVJlc3RDbGllbnRcIikpO1xuLyoqXG4gKiBSRVNUIEFQSSBjbGllbnQgZm9yIFVTREMgUGVycGV0dWFsIEFQSXNcbiAqL1xuY2xhc3MgQ29weVRyYWRpbmdDbGllbnQgZXh0ZW5kcyBCYXNlUmVzdENsaWVudF8xLmRlZmF1bHQge1xuICAgIGdldENsaWVudFR5cGUoKSB7XG4gICAgICAgIC8vIEZvbGxvd3MgdGhlIHNhbWUgYXV0aGVudGljYXRpb24gbWVjaGFuaXNtIGFzIFVTREMgQVBJc1xuICAgICAgICByZXR1cm4gdXRpbF8xLlJFU1RfQ0xJRU5UX1RZUEVfRU5VTS52MztcbiAgICB9XG4gICAgZmV0Y2hTZXJ2ZXJUaW1lKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgcmVzID0geWllbGQgdGhpcy5nZXRTZXJ2ZXJUaW1lKCk7XG4gICAgICAgICAgICByZXR1cm4gTnVtYmVyKHJlcy50aW1lX25vdyk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKlxuICAgICAqIE1hcmtldCBEYXRhIEVuZHBvaW50c1xuICAgICAqXG4gICAgICovXG4gICAgZ2V0U3ltYm9scygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KCcvY29udHJhY3QvdjMvcHVibGljL2NvcHl0cmFkaW5nL3N5bWJvbC9saXN0Jyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqXG4gICAgICogQWNjb3VudCBEYXRhIEVuZHBvaW50c1xuICAgICAqXG4gICAgICovXG4gICAgLyoqIC0+IE9yZGVyIEFQSSAqL1xuICAgIC8qKiBDcmVhdGUgb3JkZXIgKi9cbiAgICBzdWJtaXRPcmRlcihwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9zdFByaXZhdGUoJy9jb250cmFjdC92My9wcml2YXRlL2NvcHl0cmFkaW5nL29yZGVyL2NyZWF0ZScsIHBhcmFtcyk7XG4gICAgfVxuICAgIC8qKiBTZXQgVHJhZGluZyBTdG9wICovXG4gICAgc2V0VHJhZGluZ1N0b3AocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvc3RQcml2YXRlKCcvY29udHJhY3QvdjMvcHJpdmF0ZS9jb3B5dHJhZGluZy9vcmRlci90cmFkaW5nLXN0b3AnLCBwYXJhbXMpO1xuICAgIH1cbiAgICAvKiogUXVlcnkgT3JkZXIgTGlzdCAqL1xuICAgIGdldEFjdGl2ZU9yZGVycyhwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJpdmF0ZSgnL2NvbnRyYWN0L3YzL3ByaXZhdGUvY29weXRyYWRpbmcvb3JkZXIvbGlzdCcsIHBhcmFtcyk7XG4gICAgfVxuICAgIC8qKiBDYW5jZWwgb3JkZXIgKi9cbiAgICBjYW5jZWxPcmRlcihwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucG9zdFByaXZhdGUoJy9jb250cmFjdC92My9wcml2YXRlL2NvcHl0cmFkaW5nL29yZGVyL2NhbmNlbCcsIHBhcmFtcyk7XG4gICAgfVxuICAgIC8qKiBDbG9zZSBPcmRlci4gIFRoaXMgZW5kcG9pbnQncyByYXRlX2xpbWl0IHdpbGwgZGVjcmVhc2UgYnkgMTAgcGVyIHJlcXVlc3Q7IGllLCBvbmUgcmVxdWVzdCB0byB0aGlzIGVuZHBvaW50IGNvbnN1bWVzIDEwIGZyb20gdGhlIGxpbWl0IGFsbG93ZWQgcGVyIG1pbnV0ZS4gKi9cbiAgICBjbG9zZU9yZGVyKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5wb3N0UHJpdmF0ZSgnL2NvbnRyYWN0L3YzL3ByaXZhdGUvY29weXRyYWRpbmcvb3JkZXIvY2xvc2UnLCBwYXJhbXMpO1xuICAgIH1cbiAgICAvKiogLT4gUG9zaXRpb25zIEFQSSAqL1xuICAgIC8qKiBQb3NpdGlvbiBMaXN0ICovXG4gICAgZ2V0UG9zaXRpb25zKHN5bWJvbCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRQcml2YXRlKCcvY29udHJhY3QvdjMvcHJpdmF0ZS9jb3B5dHJhZGluZy9wb3NpdGlvbi9saXN0Jywge1xuICAgICAgICAgICAgc3ltYm9sLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqIENsb3NlIFBvc2l0aW9uICovXG4gICAgY2xvc2VQb3NpdGlvbihzeW1ib2wsIHBvc2l0aW9uSWR4KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvc3RQcml2YXRlKCcvY29udHJhY3QvdjMvcHJpdmF0ZS9jb3B5dHJhZGluZy9wb3NpdGlvbi9jbG9zZScsIHtcbiAgICAgICAgICAgIHN5bWJvbCxcbiAgICAgICAgICAgIHBvc2l0aW9uSWR4LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqIE9ubHkgaW50ZWdlcnMgY2FuIGJlIHNldCB0byBzZXQgdGhlIGxldmVyYWdlICovXG4gICAgc2V0TGV2ZXJhZ2Uoc3ltYm9sLCBidXlMZXZlcmFnZSwgc2VsbExldmVyYWdlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvc3RQcml2YXRlKCcvY29udHJhY3QvdjMvcHJpdmF0ZS9jb3B5dHJhZGluZy9wb3NpdGlvbi9zZXQtbGV2ZXJhZ2UnLCB7IHN5bWJvbCwgYnV5TGV2ZXJhZ2UsIHNlbGxMZXZlcmFnZSB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBXYWxsZXQgRGF0YSBFbmRwb2ludHNcbiAgICAgKlxuICAgICAqL1xuICAgIC8qKiBHZXQgV2FsbGV0IEJhbGFuY2UgKi9cbiAgICBnZXRCYWxhbmNlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJpdmF0ZSgnL2NvbnRyYWN0L3YzL3ByaXZhdGUvY29weXRyYWRpbmcvd2FsbGV0L2JhbGFuY2UnKTtcbiAgICB9XG4gICAgLyoqIFRyYW5zZmVyICovXG4gICAgdHJhbnNmZXIocGFyYW1zKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBvc3RQcml2YXRlKCcvY29udHJhY3QvdjMvcHJpdmF0ZS9jb3B5dHJhZGluZy93YWxsZXQvdHJhbnNmZXInLCBwYXJhbXMpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEFQSSBEYXRhIEVuZHBvaW50c1xuICAgICAqXG4gICAgICovXG4gICAgZ2V0U2VydmVyVGltZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KCcvdjIvcHVibGljL3RpbWUnKTtcbiAgICB9XG4gICAgZ2V0QW5ub3VuY2VtZW50cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KCcvdjIvcHVibGljL2Fubm91bmNlbWVudCcpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29weVRyYWRpbmdDbGllbnQgPSBDb3B5VHJhZGluZ0NsaWVudDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvcHktdHJhZGluZy1jbGllbnQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/copy-trading-client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/index.js":
/*!*********************************************!*\
  !*** ./node_modules/bybit-api/lib/index.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./account-asset-client */ \"(rsc)/./node_modules/bybit-api/lib/account-asset-client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./account-asset-client-v3 */ \"(rsc)/./node_modules/bybit-api/lib/account-asset-client-v3.js\"), exports);\n__exportStar(__webpack_require__(/*! ./copy-trading-client */ \"(rsc)/./node_modules/bybit-api/lib/copy-trading-client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./inverse-client */ \"(rsc)/./node_modules/bybit-api/lib/inverse-client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./inverse-futures-client */ \"(rsc)/./node_modules/bybit-api/lib/inverse-futures-client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./linear-client */ \"(rsc)/./node_modules/bybit-api/lib/linear-client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./rest-client-v5 */ \"(rsc)/./node_modules/bybit-api/lib/rest-client-v5.js\"), exports);\n__exportStar(__webpack_require__(/*! ./spot-client */ \"(rsc)/./node_modules/bybit-api/lib/spot-client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./spot-client-v3 */ \"(rsc)/./node_modules/bybit-api/lib/spot-client-v3.js\"), exports);\n__exportStar(__webpack_require__(/*! ./usdc-option-client */ \"(rsc)/./node_modules/bybit-api/lib/usdc-option-client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./usdc-perpetual-client */ \"(rsc)/./node_modules/bybit-api/lib/usdc-perpetual-client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./unified-margin-client */ \"(rsc)/./node_modules/bybit-api/lib/unified-margin-client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./contract-client */ \"(rsc)/./node_modules/bybit-api/lib/contract-client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./websocket-client */ \"(rsc)/./node_modules/bybit-api/lib/websocket-client.js\"), exports);\n__exportStar(__webpack_require__(/*! ./util/logger */ \"(rsc)/./node_modules/bybit-api/lib/util/logger.js\"), exports);\n__exportStar(__webpack_require__(/*! ./util */ \"(rsc)/./node_modules/bybit-api/lib/util/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(rsc)/./node_modules/bybit-api/lib/types/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./constants/enum */ \"(rsc)/./node_modules/bybit-api/lib/constants/enum.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsMEZBQXdCO0FBQzdDLGFBQWEsbUJBQU8sQ0FBQyxnR0FBMkI7QUFDaEQsYUFBYSxtQkFBTyxDQUFDLHdGQUF1QjtBQUM1QyxhQUFhLG1CQUFPLENBQUMsOEVBQWtCO0FBQ3ZDLGFBQWEsbUJBQU8sQ0FBQyw4RkFBMEI7QUFDL0MsYUFBYSxtQkFBTyxDQUFDLDRFQUFpQjtBQUN0QyxhQUFhLG1CQUFPLENBQUMsOEVBQWtCO0FBQ3ZDLGFBQWEsbUJBQU8sQ0FBQyx3RUFBZTtBQUNwQyxhQUFhLG1CQUFPLENBQUMsOEVBQWtCO0FBQ3ZDLGFBQWEsbUJBQU8sQ0FBQyxzRkFBc0I7QUFDM0MsYUFBYSxtQkFBTyxDQUFDLDRGQUF5QjtBQUM5QyxhQUFhLG1CQUFPLENBQUMsNEZBQXlCO0FBQzlDLGFBQWEsbUJBQU8sQ0FBQyxnRkFBbUI7QUFDeEMsYUFBYSxtQkFBTyxDQUFDLGtGQUFvQjtBQUN6QyxhQUFhLG1CQUFPLENBQUMsd0VBQWU7QUFDcEMsYUFBYSxtQkFBTyxDQUFDLGdFQUFRO0FBQzdCLGFBQWEsbUJBQU8sQ0FBQyxrRUFBUztBQUM5QixhQUFhLG1CQUFPLENBQUMsOEVBQWtCO0FBQ3ZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi9pbmRleC5qcz9jY2E5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vYWNjb3VudC1hc3NldC1jbGllbnRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2FjY291bnQtYXNzZXQtY2xpZW50LXYzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb3B5LXRyYWRpbmctY2xpZW50XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9pbnZlcnNlLWNsaWVudFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaW52ZXJzZS1mdXR1cmVzLWNsaWVudFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbGluZWFyLWNsaWVudFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcmVzdC1jbGllbnQtdjVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Nwb3QtY2xpZW50XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zcG90LWNsaWVudC12M1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXNkYy1vcHRpb24tY2xpZW50XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91c2RjLXBlcnBldHVhbC1jbGllbnRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3VuaWZpZWQtbWFyZ2luLWNsaWVudFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vY29udHJhY3QtY2xpZW50XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi93ZWJzb2NrZXQtY2xpZW50XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91dGlsL2xvZ2dlclwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXRpbFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdHlwZXNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnN0YW50cy9lbnVtXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/inverse-client.js":
/*!******************************************************!*\
  !*** ./node_modules/bybit-api/lib/inverse-client.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InverseClient = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst util_1 = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/bybit-api/lib/util/index.js\");\nconst BaseRestClient_1 = __importDefault(__webpack_require__(/*! ./util/BaseRestClient */ \"(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js\"));\n/**\n * REST API client for Inverse Perpetual Futures APIs (v2)\n *\n * @deprecated WARNING: V1/V2 private endpoints (Rest API & Websocket Stream) for mainnet\n * will be switched off gradually from 30 Oct 2023 UTC, so they are not promised a stability.\n * Please note that you are at your own risk of using old endpoints going forward, and please move to V5 ASAP.\n */\nclass InverseClient extends BaseRestClient_1.default {\n    getClientType() {\n        return util_1.REST_CLIENT_TYPE_ENUM.inverse;\n    }\n    fetchServerTime() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.getServerTime();\n            return Number(res.time_now);\n        });\n    }\n    /**\n     *\n     * Market Data Endpoints\n     *\n     */\n    getOrderBook(params) {\n        return this.get('v2/public/orderBook/L2', params);\n    }\n    getKline(params) {\n        return this.get('v2/public/kline/list', params);\n    }\n    /**\n     * Get latest information for symbol\n     */\n    getTickers(params) {\n        return this.get('v2/public/tickers', params);\n    }\n    getTrades(params) {\n        return this.get('v2/public/trading-records', params);\n    }\n    getSymbols() {\n        return this.get('v2/public/symbols');\n    }\n    getMarkPriceKline(params) {\n        return this.get('v2/public/mark-price-kline', params);\n    }\n    getIndexPriceKline(params) {\n        return this.get('v2/public/index-price-kline', params);\n    }\n    getPremiumIndexKline(params) {\n        return this.get('v2/public/premium-index-kline', params);\n    }\n    /**\n     *\n     * Market Data : Advanced\n     *\n     */\n    getOpenInterest(params) {\n        return this.get('v2/public/open-interest', params);\n    }\n    getLatestBigDeal(params) {\n        return this.get('v2/public/big-deal', params);\n    }\n    getLongShortRatio(params) {\n        return this.get('v2/public/account-ratio', params);\n    }\n    /**\n     *\n     * Account Data Endpoints\n     *\n     */\n    getApiKeyInfo() {\n        return this.getPrivate('v2/private/account/api-key');\n    }\n    /**\n     *\n     * Wallet Data Endpoints\n     *\n     */\n    getWalletBalance(params) {\n        return this.getPrivate('v2/private/wallet/balance', params);\n    }\n    getWalletFundRecords(params) {\n        return this.getPrivate('v2/private/wallet/fund/records', params);\n    }\n    getWithdrawRecords(params) {\n        return this.getPrivate('v2/private/wallet/withdraw/list', params);\n    }\n    getAssetExchangeRecords(params) {\n        return this.getPrivate('v2/private/exchange-order/list', params);\n    }\n    /**\n     *\n     * API Data Endpoints\n     *\n     */\n    getServerTime() {\n        return this.get('v2/public/time');\n    }\n    getApiAnnouncements() {\n        return this.get('v2/public/announcement');\n    }\n    /**\n     *\n     * Account Data Endpoints\n     *\n     */\n    /**\n     * Active orders\n     */\n    placeActiveOrder(orderRequest) {\n        return this.postPrivate('v2/private/order/create', orderRequest);\n    }\n    getActiveOrderList(params) {\n        return this.getPrivate('v2/private/order/list', params);\n    }\n    cancelActiveOrder(params) {\n        return this.postPrivate('v2/private/order/cancel', params);\n    }\n    cancelAllActiveOrders(params) {\n        return this.postPrivate('v2/private/order/cancelAll', params);\n    }\n    replaceActiveOrder(params) {\n        return this.postPrivate('v2/private/order/replace', params);\n    }\n    queryActiveOrder(params) {\n        return this.getPrivate('v2/private/order', params);\n    }\n    /**\n     * Conditional orders\n     */\n    placeConditionalOrder(params) {\n        return this.postPrivate('v2/private/stop-order/create', params);\n    }\n    /** get conditional order list. This may see delays, use queryConditionalOrder() for real-time queries */\n    getConditionalOrder(params) {\n        return this.getPrivate('v2/private/stop-order/list', params);\n    }\n    cancelConditionalOrder(params) {\n        return this.postPrivate('v2/private/stop-order/cancel', params);\n    }\n    cancelAllConditionalOrders(params) {\n        return this.postPrivate('v2/private/stop-order/cancelAll', params);\n    }\n    replaceConditionalOrder(params) {\n        return this.postPrivate('v2/private/stop-order/replace', params);\n    }\n    queryConditionalOrder(params) {\n        return this.getPrivate('v2/private/stop-order', params);\n    }\n    /**\n     * Position\n     */\n    getPosition(params) {\n        return this.getPrivate('v2/private/position/list', params);\n    }\n    changePositionMargin(params) {\n        return this.postPrivate('position/change-position-margin', params);\n    }\n    setTradingStop(params) {\n        return this.postPrivate('v2/private/position/trading-stop', params);\n    }\n    setUserLeverage(params) {\n        return this.postPrivate('v2/private/position/leverage/save', params);\n    }\n    getTradeRecords(params) {\n        return this.getPrivate('v2/private/execution/list', params);\n    }\n    getClosedPnl(params) {\n        return this.getPrivate('v2/private/trade/closed-pnl/list', params);\n    }\n    setSlTpPositionMode(params) {\n        return this.postPrivate('v2/private/tpsl/switch-mode', params);\n    }\n    setMarginType(params) {\n        return this.postPrivate('v2/private/position/switch-isolated', params);\n    }\n    /**\n     * Funding\n     */\n    getLastFundingRate(params) {\n        return this.get('v2/public/funding/prev-funding-rate', params);\n    }\n    getMyLastFundingFee(params) {\n        return this.getPrivate('v2/private/funding/prev-funding', params);\n    }\n    getPredictedFunding(params) {\n        return this.getPrivate('v2/private/funding/predicted-funding', params);\n    }\n    /**\n     * LCP Info\n     */\n    getLcpInfo(params) {\n        return this.getPrivate('v2/private/account/lcp', params);\n    }\n}\nexports.InverseClient = InverseClient;\n//# sourceMappingURL=inverse-client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/inverse-client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/inverse-futures-client.js":
/*!**************************************************************!*\
  !*** ./node_modules/bybit-api/lib/inverse-futures-client.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InverseFuturesClient = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst requestUtils_1 = __webpack_require__(/*! ./util/requestUtils */ \"(rsc)/./node_modules/bybit-api/lib/util/requestUtils.js\");\nconst BaseRestClient_1 = __importDefault(__webpack_require__(/*! ./util/BaseRestClient */ \"(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js\"));\n/**\n * REST API client for Inverse Futures APIs (e.g. quarterly futures) (v2)\n *\n * @deprecated WARNING: V1/V2 private endpoints (Rest API & Websocket Stream) for mainnet\n * will be switched off gradually from 30 Oct 2023 UTC, so they are not promised a stability.\n * Please note that you are at your own risk of using old endpoints going forward, and please move to V5 ASAP.\n */\nclass InverseFuturesClient extends BaseRestClient_1.default {\n    getClientType() {\n        return requestUtils_1.REST_CLIENT_TYPE_ENUM.inverseFutures;\n    }\n    fetchServerTime() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.getServerTime();\n            return Number(res.time_now);\n        });\n    }\n    /**\n     *\n     * Market Data Endpoints\n     *\n     */\n    getOrderBook(params) {\n        return this.get('v2/public/orderBook/L2', params);\n    }\n    getKline(params) {\n        return this.get('v2/public/kline/list', params);\n    }\n    /**\n     * Get latest information for symbol\n     */\n    getTickers(params) {\n        return this.get('v2/public/tickers', params);\n    }\n    /**\n     * Public trading records\n     */\n    getTrades(params) {\n        return this.get('v2/public/trading-records', params);\n    }\n    getSymbols() {\n        return this.get('v2/public/symbols');\n    }\n    getMarkPriceKline(params) {\n        return this.get('v2/public/mark-price-kline', params);\n    }\n    getIndexPriceKline(params) {\n        return this.get('v2/public/index-price-kline', params);\n    }\n    getPremiumIndexKline(params) {\n        return this.get('v2/public/premium-index-kline', params);\n    }\n    /**\n     *\n     * Market Data : Advanced\n     *\n     */\n    getOpenInterest(params) {\n        return this.get('v2/public/open-interest', params);\n    }\n    getLatestBigDeal(params) {\n        return this.get('v2/public/big-deal', params);\n    }\n    getLongShortRatio(params) {\n        return this.get('v2/public/account-ratio', params);\n    }\n    /**\n     *\n     * Account Data Endpoints\n     *\n     */\n    getApiKeyInfo() {\n        return this.getPrivate('v2/private/account/api-key');\n    }\n    /**\n     *\n     * Wallet Data Endpoints\n     *\n     */\n    getWalletBalance(params) {\n        return this.getPrivate('v2/private/wallet/balance', params);\n    }\n    getWalletFundRecords(params) {\n        return this.getPrivate('v2/private/wallet/fund/records', params);\n    }\n    getWithdrawRecords(params) {\n        return this.getPrivate('v2/private/wallet/withdraw/list', params);\n    }\n    getAssetExchangeRecords(params) {\n        return this.getPrivate('v2/private/exchange-order/list', params);\n    }\n    /**\n     *\n     * API Data Endpoints\n     *\n     */\n    getServerTime() {\n        return this.get('v2/public/time');\n    }\n    getApiAnnouncements() {\n        return this.get('v2/public/announcement');\n    }\n    /**\n     *\n     * Account Data Endpoints\n     *\n     */\n    /**\n     * Active orders\n     */\n    placeActiveOrder(orderRequest) {\n        return this.postPrivate('futures/private/order/create', orderRequest);\n    }\n    getActiveOrderList(params) {\n        return this.getPrivate('futures/private/order/list', params);\n    }\n    cancelActiveOrder(params) {\n        return this.postPrivate('futures/private/order/cancel', params);\n    }\n    cancelAllActiveOrders(params) {\n        return this.postPrivate('futures/private/order/cancelAll', params);\n    }\n    replaceActiveOrder(params) {\n        return this.postPrivate('futures/private/order/replace', params);\n    }\n    queryActiveOrder(params) {\n        return this.getPrivate('futures/private/order', params);\n    }\n    /**\n     * Conditional orders\n     */\n    placeConditionalOrder(params) {\n        return this.postPrivate('futures/private/stop-order/create', params);\n    }\n    getConditionalOrder(params) {\n        return this.getPrivate('futures/private/stop-order/list', params);\n    }\n    cancelConditionalOrder(params) {\n        return this.postPrivate('futures/private/stop-order/cancel', params);\n    }\n    cancelAllConditionalOrders(params) {\n        return this.postPrivate('futures/private/stop-order/cancelAll', params);\n    }\n    replaceConditionalOrder(params) {\n        return this.postPrivate('futures/private/stop-order/replace', params);\n    }\n    queryConditionalOrder(params) {\n        return this.getPrivate('futures/private/stop-order', params);\n    }\n    /**\n     * Position\n     */\n    /**\n     * Get position list\n     */\n    getPosition(params) {\n        return this.getPrivate('futures/private/position/list', params);\n    }\n    changePositionMargin(params) {\n        return this.postPrivate('futures/private/position/change-position-margin', params);\n    }\n    setTradingStop(params) {\n        return this.postPrivate('futures/private/position/trading-stop', params);\n    }\n    setUserLeverage(params) {\n        return this.postPrivate('futures/private/position/leverage/save', params);\n    }\n    /**\n     * Position mode switch\n     */\n    setPositionMode(params) {\n        return this.postPrivate('futures/private/position/switch-mode', params);\n    }\n    /**\n     * Cross/Isolated margin switch. Must set leverage value when switching.\n     */\n    setMarginType(params) {\n        return this.postPrivate('futures/private/position/switch-isolated', params);\n    }\n    getTradeRecords(params) {\n        return this.getPrivate('futures/private/execution/list', params);\n    }\n    getClosedPnl(params) {\n        return this.getPrivate('futures/private/trade/closed-pnl/list', params);\n    }\n    /**\n     * Funding\n     */\n    getLastFundingRate(params) {\n        return this.get('v2/public/funding/prev-funding-rate', params);\n    }\n    getMyLastFundingFee(params) {\n        return this.getPrivate('v2/private/funding/prev-funding', params);\n    }\n    getPredictedFunding(params) {\n        return this.getPrivate('v2/private/funding/predicted-funding', params);\n    }\n    /**\n     * LCP Info\n     */\n    getLcpInfo(params) {\n        return this.getPrivate('v2/private/account/lcp', params);\n    }\n}\nexports.InverseFuturesClient = InverseFuturesClient;\n//# sourceMappingURL=inverse-futures-client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/inverse-futures-client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/linear-client.js":
/*!*****************************************************!*\
  !*** ./node_modules/bybit-api/lib/linear-client.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LinearClient = void 0;\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst requestUtils_1 = __webpack_require__(/*! ./util/requestUtils */ \"(rsc)/./node_modules/bybit-api/lib/util/requestUtils.js\");\nconst BaseRestClient_1 = __importDefault(__webpack_require__(/*! ./util/BaseRestClient */ \"(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js\"));\n/**\n * REST API client for linear/USD perpetual futures APIs (v2)\n *\n * @deprecated WARNING: V1/V2 private endpoints (Rest API & Websocket Stream) for mainnet\n * will be switched off gradually from 30 Oct 2023 UTC, so they are not promised a stability.\n * Please note that you are at your own risk of using old endpoints going forward, and please move to V5 ASAP.\n */\nclass LinearClient extends BaseRestClient_1.default {\n    getClientType() {\n        return requestUtils_1.REST_CLIENT_TYPE_ENUM.linear;\n    }\n    fetchServerTime() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const timeRes = yield this.getServerTime();\n            return Number(timeRes.time_now);\n        });\n    }\n    /**\n     *\n     * Market Data Endpoints\n     *\n     */\n    getOrderBook(params) {\n        return this.get('v2/public/orderBook/L2', params);\n    }\n    getKline(params) {\n        return this.get('public/linear/kline', params);\n    }\n    /**\n     * Get latest information for symbol\n     */\n    getTickers(params) {\n        return this.get('v2/public/tickers', params);\n    }\n    getTrades(params) {\n        return this.get('public/linear/recent-trading-records', params);\n    }\n    getSymbols() {\n        return this.get('v2/public/symbols');\n    }\n    getLastFundingRate(params) {\n        return this.get('public/linear/funding/prev-funding-rate', params);\n    }\n    getMarkPriceKline(params) {\n        return this.get('public/linear/mark-price-kline', params);\n    }\n    getIndexPriceKline(params) {\n        return this.get('public/linear/index-price-kline', params);\n    }\n    getPremiumIndexKline(params) {\n        return this.get('public/linear/premium-index-kline', params);\n    }\n    /**\n     *\n     * Market Data : Advanced\n     *\n     */\n    getOpenInterest(params) {\n        return this.get('v2/public/open-interest', params);\n    }\n    getLatestBigDeal(params) {\n        return this.get('v2/public/big-deal', params);\n    }\n    getLongShortRatio(params) {\n        return this.get('v2/public/account-ratio', params);\n    }\n    /**\n     *\n     * Account Data Endpoints\n     *\n     */\n    getApiKeyInfo() {\n        return this.getPrivate('v2/private/account/api-key');\n    }\n    /**\n     *\n     * Wallet Data Endpoints\n     *\n     */\n    getWalletBalance(params) {\n        return this.getPrivate('v2/private/wallet/balance', params);\n    }\n    getWalletFundRecords(params) {\n        return this.getPrivate('v2/private/wallet/fund/records', params);\n    }\n    getWithdrawRecords(params) {\n        return this.getPrivate('v2/private/wallet/withdraw/list', params);\n    }\n    getAssetExchangeRecords(params) {\n        return this.getPrivate('v2/private/exchange-order/list', params);\n    }\n    /**\n     *\n     * API Data Endpoints\n     *\n     */\n    getServerTime() {\n        return this.get('v2/public/time');\n    }\n    getApiAnnouncements() {\n        return this.get('v2/public/announcement');\n    }\n    /**\n     *\n     * Account Data Endpoints\n     *\n     */\n    placeActiveOrder(params) {\n        return this.postPrivate('private/linear/order/create', params);\n    }\n    getActiveOrderList(params) {\n        return this.getPrivate('private/linear/order/list', params);\n    }\n    cancelActiveOrder(params) {\n        return this.postPrivate('private/linear/order/cancel', params);\n    }\n    cancelAllActiveOrders(params) {\n        return this.postPrivate('private/linear/order/cancel-all', params);\n    }\n    replaceActiveOrder(params) {\n        return this.postPrivate('private/linear/order/replace', params);\n    }\n    queryActiveOrder(params) {\n        return this.getPrivate('private/linear/order/search', params);\n    }\n    /**\n     * Conditional orders\n     */\n    placeConditionalOrder(params) {\n        return this.postPrivate('private/linear/stop-order/create', params);\n    }\n    getConditionalOrder(params) {\n        return this.getPrivate('private/linear/stop-order/list', params);\n    }\n    cancelConditionalOrder(params) {\n        return this.postPrivate('private/linear/stop-order/cancel', params);\n    }\n    cancelAllConditionalOrders(params) {\n        return this.postPrivate('private/linear/stop-order/cancel-all', params);\n    }\n    replaceConditionalOrder(params) {\n        return this.postPrivate('private/linear/stop-order/replace', params);\n    }\n    queryConditionalOrder(params) {\n        return this.getPrivate('private/linear/stop-order/search', params);\n    }\n    getPosition(params) {\n        return this.getPrivate('private/linear/position/list', params);\n    }\n    setAutoAddMargin(params) {\n        return this.postPrivate('private/linear/position/set-auto-add-margin', params);\n    }\n    setMarginSwitch(params) {\n        return this.postPrivate('private/linear/position/switch-isolated', params);\n    }\n    /**\n     * Switch between one-way vs hedge mode. Use `linearPositionModeEnum` for the mode parameter.\n     */\n    setPositionMode(params) {\n        return this.postPrivate('private/linear/position/switch-mode', params);\n    }\n    /**\n     * Switch TP/SL mode between full or partial. When set to Partial, TP/SL orders may have a quantity less than the position size.\n     * This is set with the setTradingStop() method. Use `positionTpSlModeEnum` for the tp_sl_mode parameter.\n     */\n    setPositionTpSlMode(params) {\n        return this.postPrivate('private/linear/tpsl/switch-mode', params);\n    }\n    setAddReduceMargin(params) {\n        return this.postPrivate('private/linear/position/add-margin', params);\n    }\n    setUserLeverage(params) {\n        return this.postPrivate('private/linear/position/set-leverage', params);\n    }\n    setTradingStop(params) {\n        return this.postPrivate('private/linear/position/trading-stop', params);\n    }\n    getTradeRecords(params) {\n        return this.getPrivate('private/linear/trade/execution/list', params);\n    }\n    getHistoryTradeRecords(params) {\n        return this.getPrivate('/private/linear/trade/execution/history-list', params);\n    }\n    getClosedPnl(params) {\n        return this.getPrivate('private/linear/trade/closed-pnl/list', params);\n    }\n    /**\n     * Risk Limit\n     */\n    getRiskLimitList(params) {\n        return this.getPrivate('public/linear/risk-limit', params);\n    }\n    setRiskLimit(params) {\n        return this.postPrivate('private/linear/position/set-risk', params);\n    }\n    /**\n     * Funding\n     */\n    getPredictedFundingFee(params) {\n        return this.getPrivate('private/linear/funding/predicted-funding', params);\n    }\n    getLastFundingFee(params) {\n        return this.getPrivate('private/linear/funding/prev-funding', params);\n    }\n}\nexports.LinearClient = LinearClient;\n//# sourceMappingURL=linear-client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/linear-client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/rest-client-v5.js":
/*!******************************************************!*\
  !*** ./node_modules/bybit-api/lib/rest-client-v5.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RestClientV5 = void 0;\nconst util_1 = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/bybit-api/lib/util/index.js\");\nconst BaseRestClient_1 = __importDefault(__webpack_require__(/*! ./util/BaseRestClient */ \"(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js\"));\n/**\n * REST API client for V5 REST APIs\n *\n * https://bybit-exchange.github.io/docs/v5/intro\n */\nclass RestClientV5 extends BaseRestClient_1.default {\n    getClientType() {\n        return util_1.REST_CLIENT_TYPE_ENUM.v3;\n    }\n    fetchServerTime() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.getServerTime();\n            return Number(res.time) / 1000;\n        });\n    }\n    getServerTime() {\n        return this.get('/v5/market/time');\n    }\n    requestDemoTradingFunds() {\n        return this.postPrivate('/v5/account/demo-apply-money');\n    }\n    /**\n     *\n     ****** Market APIs\n     *\n     */\n    /**\n     * Query the kline data. Charts are returned in groups based on the requested interval.\n     *\n     * Covers: Spot / Linear contract / Inverse contract\n     */\n    getKline(params) {\n        return this.get('/v5/market/kline', params);\n    }\n    /**\n     * Query the mark price kline data. Charts are returned in groups based on the requested interval.\n     *\n     * Covers: Linear contract / Inverse contract\n     */\n    getMarkPriceKline(params) {\n        return this.get('/v5/market/mark-price-kline', params);\n    }\n    /**\n     * Query the index price kline data. Charts are returned in groups based on the requested interval.\n     *\n     * Covers: Linear contract / Inverse contract\n     */\n    getIndexPriceKline(params) {\n        return this.get('/v5/market/index-price-kline', params);\n    }\n    /**\n     * Retrieve the premium index price kline data. Charts are returned in groups based on the requested interval.\n     *\n     * Covers: Linear contract\n     */\n    getPremiumIndexPriceKline(params) {\n        return this.get('/v5/market/premium-index-price-kline', params);\n    }\n    /**\n     * Query a list of instruments of online trading pair.\n     *\n     * Covers: Spot / Linear contract / Inverse contract / Option\n     *\n     * Note: Spot does not support pagination, so limit & cursor are invalid.\n     */\n    getInstrumentsInfo(params) {\n        return this.get('/v5/market/instruments-info', params);\n    }\n    /**\n     * Query orderbook data\n     *\n     * Covers: Spot / Linear contract / Inverse contract / Option\n     */\n    getOrderbook(params) {\n        return this.get('/v5/market/orderbook', params);\n    }\n    /**\n     * Query the latest price snapshot, best bid/ask price, and trading volume in the last 24 hours.\n     *\n     * Covers: Spot / Linear contract / Inverse contract / Option\n     */\n    getTickers(params) {\n        return this.get('/v5/market/tickers', params);\n    }\n    /**\n     * Query historical funding rate. Each symbol has a different funding interval.\n     *\n     * Covers: Linear contract / Inverse perpetual\n     */\n    getFundingRateHistory(params) {\n        return this.get('/v5/market/funding/history', params);\n    }\n    /**\n     * Query recent public trading data in Bybit.\n     *\n     * Covers: Spot / Linear contract / Inverse contract / Option\n     */\n    getPublicTradingHistory(params) {\n        return this.get('/v5/market/recent-trade', params);\n    }\n    /**\n     * Get open interest of each symbol.\n     *\n     * Covers: Linear contract / Inverse contract\n     */\n    getOpenInterest(params) {\n        return this.get('/v5/market/open-interest', params);\n    }\n    /**\n     * Query option historical volatility\n     * Covers: Option\n     */\n    getHistoricalVolatility(params) {\n        return this.get('/v5/market/historical-volatility', params);\n    }\n    /**\n     * Query Bybit insurance pool data (BTC/USDT/USDC etc). The data is updated every 24 hours.\n     */\n    getInsurance(params) {\n        return this.get('/v5/market/insurance', params);\n    }\n    /**\n     * Query risk limit of futures\n     *\n     * Covers: Linear contract / Inverse contract\n     */\n    getRiskLimit(params) {\n        return this.get('/v5/market/risk-limit', params);\n    }\n    /**\n     * Get the delivery price for option\n     *\n     * Covers: Option\n     *\n     * @deprecated use getDeliveryPrice() instead\n     */\n    getOptionDeliveryPrice(params) {\n        return this.get('/v5/market/delivery-price', params);\n    }\n    /**\n     * Get the delivery price of Inverse futures, USDC futures and Options\n     *\n     * Covers: USDC futures / Inverse futures / Option\n     */\n    getDeliveryPrice(params) {\n        return this.get('/v5/market/delivery-price', params);\n    }\n    getLongShortRatio(params) {\n        return this.get('/v5/market/account-ratio', params);\n    }\n    /**\n     *\n     ****** Trade APIs\n     *\n     */\n    submitOrder(params) {\n        return this.postPrivate('/v5/order/create', params);\n    }\n    amendOrder(params) {\n        return this.postPrivate('/v5/order/amend', params);\n    }\n    cancelOrder(params) {\n        return this.postPrivate('/v5/order/cancel', params);\n    }\n    /**\n     * Query unfilled or partially filled orders in real-time. To query older order records, please use the order history interface.\n     */\n    getActiveOrders(params) {\n        return this.getPrivate('/v5/order/realtime', params);\n    }\n    cancelAllOrders(params) {\n        return this.postPrivate('/v5/order/cancel-all', params);\n    }\n    /**\n     * Query order history. As order creation/cancellation is asynchronous, the data returned from this endpoint may delay.\n     *\n     * If you want to get real-time order information, you could query this endpoint or rely on the websocket stream (recommended).\n     */\n    getHistoricOrders(params) {\n        return this.getPrivate('/v5/order/history', params);\n    }\n    /**\n     * This endpoint allows you to place more than one order in a single request.\n     * Covers: Option (UTA, UTA Pro) / USDT Perpetual, UDSC Perpetual, USDC Futures (UTA Pro)\n     *\n     * Make sure you have sufficient funds in your account when placing an order.\n     * Once an order is placed, according to the funds required by the order,\n     * the funds in your account will be frozen by the corresponding amount during the life cycle of the order.\n     *\n     * A maximum of 20 orders can be placed per request. The returned data list is divided into two lists.\n     * The first list indicates whether or not the order creation was successful and the second list details the created order information.\n     * The structure of the two lists are completely consistent.\n     */\n    batchSubmitOrders(category, orders) {\n        return this.postPrivate('/v5/order/create-batch', {\n            category,\n            request: orders,\n        });\n    }\n    /**\n     * This endpoint allows you to amend more than one open order in a single request.\n     * Covers: Option (UTA, UTA Pro) / USDT Perpetual, UDSC Perpetual, USDC Futures (UTA Pro)\n     *\n     * You can modify unfilled or partially filled orders. Conditional orders are not supported.\n     *\n     * A maximum of 20 orders can be amended per request.\n     */\n    batchAmendOrders(category, orders) {\n        return this.postPrivate('/v5/order/amend-batch', {\n            category,\n            request: orders,\n        });\n    }\n    /**\n     * This endpoint allows you to cancel more than one open order in a single request.\n     * Covers: Option (UTA, UTA Pro) / USDT Perpetual, UDSC Perpetual, USDC Futures (UTA Pro)\n     *\n     * You must specify orderId or orderLinkId. If orderId and orderLinkId is not matched, the system will process orderId first.\n     *\n     * You can cancel unfilled or partially filled orders. A maximum of 20 orders can be cancelled per request.\n     */\n    batchCancelOrders(category, orders) {\n        return this.postPrivate('/v5/order/cancel-batch', {\n            category,\n            request: orders,\n        });\n    }\n    /**\n     * Query the qty and amount of borrowable coins in spot account.\n     *\n     * Covers: Spot (Unified Account)\n     */\n    getSpotBorrowCheck(symbol, side) {\n        return this.getPrivate('/v5/order/spot-borrow-check', {\n            category: 'spot',\n            symbol,\n            side,\n        });\n    }\n    /**\n     * This endpoint allows you to set the disconnection protect time window. Covers: option (unified account).\n     *\n     * If you need to turn it on/off, you can contact your client manager for consultation and application.\n     * The default time window is 10 seconds.\n     */\n    setDisconnectCancelAllWindow(category, timeWindow) {\n        return this.postPrivate('/v5/order/disconnected-cancel-all', {\n            category,\n            timeWindow,\n        });\n    }\n    /**\n     *\n     ****** Position APIs\n     *\n     */\n    /**\n     * Query real-time position data, such as position size, cumulative realizedPNL.\n     *\n     * 0: cross margin. 1: isolated margin\n     *\n     * Unified account covers: Linear contract / Options\n     *\n     * Normal account covers: USDT perpetual / Inverse perpetual / Inverse futures\n     *\n     * Note: this will give a 404 error if you query the `option` category if your account is not unified\n     */\n    getPositionInfo(params) {\n        return this.getPrivate('/v5/position/list', params);\n    }\n    /**\n     * Set the leverage\n     *\n     * Unified account covers: Linear contract\n     *\n     * Normal account covers: USDT perpetual / Inverse perpetual / Inverse futures\n     *\n     * Note: Under one-way mode, buyLeverage must be the same as sellLeverage\n     */\n    setLeverage(params) {\n        return this.postPrivate('/v5/position/set-leverage', params);\n    }\n    /**\n     * Select cross margin mode or isolated margin mode.\n     * 0: cross margin. 1: isolated margin\n     *\n     * Covers: USDT perpetual (Normal account) / Inverse contract (Normal account).\n     *\n     * Switching margin modes will cause orders in progress to be cancelled.\n     * Please make sure that there are no open orders before you switch margin modes.\n     */\n    switchIsolatedMargin(params) {\n        return this.postPrivate('/v5/position/switch-isolated', params);\n    }\n    /**\n     * This endpoint sets the take profit/stop loss (TP/SL) mode to full or partial.\n     *\n     * Unified account covers: Linear contract; normal account covers: USDT perpetual, inverse perpetual, inverse futures.\n     *\n     * For partial TP/SL mode, you can set the TP/SL size smaller than position size.\n     */\n    setTPSLMode(params) {\n        return this.postPrivate('/v5/position/set-tpsl-mode', params);\n    }\n    /**\n     * Switches the position mode for USDT perpetual and Inverse futures.\n     *\n     * If you are in one-way Mode, you can only open one position on Buy or Sell side.\n     *\n     * If you are in hedge mode, you can open both Buy and Sell side positions simultaneously.\n     *\n     * Position mode. 0: Merged Single. 3: Both Sides.\n     */\n    switchPositionMode(params) {\n        return this.postPrivate('/v5/position/switch-mode', params);\n    }\n    /**\n     * The risk limit will limit the maximum position value you can hold under different margin requirements.\n     * If you want to hold a bigger position size, you need more margin.\n     *\n     * This interface can set the risk limit of a single position.\n     * If the order exceeds the current risk limit when placing an order, it will be rejected.\n     */\n    setRiskLimit(params) {\n        return this.postPrivate('/v5/position/set-risk-limit', params);\n    }\n    /**\n     * This endpoint allows you to set the take profit, stop loss or trailing stop for a position.\n     * Passing these parameters will create conditional orders by the system internally.\n     *\n     * The system will cancel these orders if the position is closed, and adjust the qty according to the size of the open position.\n     *\n     * Unified account covers: Linear contract.\n     * Normal account covers: USDT perpetual / Inverse perpetual / Inverse futures.\n     */\n    setTradingStop(params) {\n        return this.postPrivate('/v5/position/trading-stop', params);\n    }\n    /**\n     * This endpoint allows you to turn on/off auto-add-margin for an isolated margin position.\n     *\n     * Covers: USDT perpetual (Normal Account).\n     */\n    setAutoAddMargin(params) {\n        return this.postPrivate('/v5/position/set-auto-add-margin', params);\n    }\n    /**\n     * Manually add or reduce margin for isolated margin position\n     *\n     * Unified account covers: USDT perpetual / USDC perpetual / USDC futures / Inverse contract\n     * Normal account covers: USDT perpetual / Inverse contract\n     */\n    addOrReduceMargin(params) {\n        return this.postPrivate('/v5/position/add-margin', params);\n    }\n    /**\n     * Query users' execution records, sorted by execTime in descending order\n     *\n     * Unified account covers: Spot / Linear contract / Options\n     * Normal account covers: USDT perpetual / Inverse perpetual / Inverse futures\n     */\n    getExecutionList(params) {\n        return this.getPrivate('/v5/execution/list', params);\n    }\n    /**\n     * Query user's closed profit and loss records. The results are sorted by createdTime in descending order.\n     *\n     * Unified account covers: Linear contract\n     * Normal account covers: USDT perpetual / Inverse perpetual / Inverse futures\n     */\n    getClosedPnL(params) {\n        return this.getPrivate('/v5/position/closed-pnl', params);\n    }\n    /**\n     *\n     ****** Pre-upgrade APIs\n     *\n     */\n    /**\n     * Get those orders which occurred before you upgrade the account to Unified account.\n     *\n     * For now, it only supports to query USDT perpetual, USDC perpetual, Inverse perpetual and futures.\n     *\n     *   - can get all status in 7 days\n     *   - can only get filled orders beyond 7 days\n     */\n    getPreUpgradeOrderHistory(params) {\n        return this.getPrivate('/v5/pre-upgrade/order/history', params);\n    }\n    /**\n     * Get users' execution records which occurred before you upgrade the account to Unified account, sorted by execTime in descending order\n     *\n     * For now, it only supports to query USDT perpetual, Inverse perpetual and futures.\n     *\n     *   - You may have multiple executions in a single order.\n     *   - You can query by symbol, baseCoin, orderId and orderLinkId, and if you pass multiple params,\n     *      the system will process them according to this priority: orderId > orderLinkId > symbol > baseCoin.\n     */\n    getPreUpgradeTradeHistory(params) {\n        return this.getPrivate('/v5/pre-upgrade/execution/list', params);\n    }\n    /**\n     * Query user's closed profit and loss records. The results are sorted by createdTime in descending order.\n     *\n     * For now, it only supports to query USDT perpetual, Inverse perpetual and futures.\n     */\n    getPreUpgradeClosedPnl(params) {\n        return this.getPrivate('/v5/pre-upgrade/position/closed-pnl', params);\n    }\n    /**\n     *\n     ****** Account APIs\n     *\n     */\n    /**\n     * Obtain wallet balance, query asset information of each currency, and account risk rate information under unified margin mode.\n     *\n     * By default, currency information with assets or liabilities of 0 is not returned.\n     */\n    getWalletBalance(params) {\n        return this.getPrivate('/v5/account/wallet-balance', params);\n    }\n    /**\n     * Upgrade to unified account.\n     *\n     * Banned/OTC loan/Net asset unsatisfying/Express path users cannot upgrade the account to Unified Account for now.\n     */\n    upgradeToUnifiedAccount() {\n        return this.postPrivate('/v5/account/upgrade-to-uta');\n    }\n    /**\n     * Get interest records, sorted in reverse order of creation time.\n     *\n     * Unified account\n     */\n    getBorrowHistory(params) {\n        return this.getPrivate('/v5/account/borrow-history', params);\n    }\n    /**\n     * You can manually repay the liabilities of Unified account\n     * Applicable: Unified Account\n     * Permission: USDC Contracts\n     *\n     * - Input the specific coin: repay the liability of this coin in particular\n     * - No coin specified: repay the liability of all coins\n     */\n    repayLiability(params) {\n        return this.postPrivate('/v5/account/quick-repayment', params);\n    }\n    /**\n     * You can decide whether the assets in the Unified account needs to be collateral coins.\n     */\n    setCollateralCoin(params) {\n        return this.postPrivate('/v5/account/set-collateral-switch', params);\n    }\n    batchSetCollateralCoin(params) {\n        return this.postPrivate('/v5/account/set-collateral-switch-batch', params);\n    }\n    /**\n     * Get the collateral information of the current unified margin account, including loan interest rate,\n     * loanable amount, collateral conversion rate, whether it can be mortgaged as margin, etc.\n     */\n    getCollateralInfo(currency) {\n        return this.getPrivate('/v5/account/collateral-info', { currency });\n    }\n    /**\n     * Get current account Greeks information\n     */\n    getCoinGreeks(baseCoin) {\n        return this.getPrivate('/v5/asset/coin-greeks', baseCoin ? { baseCoin } : undefined);\n    }\n    /**\n     * Get the trading fee rate.\n     * Covers: Spot / USDT perpetual / Inverse perpetual / Inverse futures / Options\n     */\n    getFeeRate(params) {\n        return this.getPrivate('/v5/account/fee-rate', params);\n    }\n    /**\n     * Query the margin mode and the upgraded status of account\n     */\n    getAccountInfo() {\n        return this.getPrivate('/v5/account/info');\n    }\n    /**\n     * Query transaction logs in Unified account.\n     */\n    getTransactionLog(params) {\n        return this.getPrivate('/v5/account/transaction-log', params);\n    }\n    /**\n     * Default is regular margin mode.\n     *\n     * This mode is valid for USDT Perp, USDC Perp and USDC Option.\n     */\n    setMarginMode(marginMode) {\n        return this.postPrivate('/v5/account/set-margin-mode', {\n            setMarginMode: marginMode,\n        });\n    }\n    /**\n     * Configure Market Maker Protection (MMP)\n     */\n    setMMP(params) {\n        return this.postPrivate('/v5/account/mmp-modify', params);\n    }\n    /**\n     * Once the mmp triggered, you can unfreeze the account via this endpoint\n     */\n    resetMMP(baseCoin) {\n        return this.postPrivate('/v5/account/mmp-reset', { baseCoin });\n    }\n    /**\n     * Get MMP State\n     */\n    getMMPState(baseCoin) {\n        return this.getPrivate('/v5/account/mmp-state', { baseCoin });\n    }\n    /**\n     *\n     ****** Asset APIs\n     *\n     */\n    /**\n     * Query the coin exchange records.\n     *\n     * CAUTION: You may experience long delays with this endpoint.\n     */\n    getCoinExchangeRecords(params) {\n        return this.getPrivate('/v5/asset/exchange/order-record', params);\n    }\n    /**\n     * Query option delivery records, sorted by deliveryTime in descending order.\n     *\n     * Covers: Option\n     */\n    getDeliveryRecord(params) {\n        return this.getPrivate('/v5/asset/delivery-record', params);\n    }\n    /**\n     * Query session settlement records of USDC perpetual\n     *\n     * Covers: Linear contract (USDC Perpetual only, Unified Account)\n     */\n    getSettlementRecords(params) {\n        return this.getPrivate('/v5/asset/settlement-record', params);\n    }\n    /**\n     * Query asset information.\n     *\n     * INFO\n     * For now, it can query SPOT only.\n     */\n    getAssetInfo(params) {\n        return this.getPrivate('/v5/asset/transfer/query-asset-info', params);\n    }\n    /**\n     * Query all coin balances of all account types under the master account and sub accounts.\n     *\n     * It is not allowed to get the master account coin balance via sub account API key.\n     */\n    getAllCoinsBalance(params) {\n        return this.getPrivate('/v5/asset/transfer/query-account-coins-balance', params);\n    }\n    /**\n     * Query the balance of a specific coin in a specific account type. Supports querying sub UID's balance.\n     *\n     * CAUTION: Can query by the master UID's api key only.\n     */\n    getCoinBalance(params) {\n        return this.getPrivate('/v5/asset/transfer/query-account-coin-balance', params);\n    }\n    /**\n     * Query the transferable coin list between each account type.\n     */\n    getTransferableCoinList(fromAccountType, toAccountType) {\n        return this.getPrivate('/v5/asset/transfer/query-transfer-coin-list', {\n            fromAccountType,\n            toAccountType,\n        });\n    }\n    /**\n     * Create the internal transfer between different account types under the same UID.\n     * Each account type has its own acceptable coins, e.g, you cannot transfer USDC from SPOT to CONTRACT.\n     *\n     * Please refer to the getTransferableCoinList() API to find out more.\n     */\n    createInternalTransfer(transferId, coin, amount, fromAccountType, toAccountType) {\n        return this.postPrivate('/v5/asset/transfer/inter-transfer', {\n            transferId,\n            coin,\n            amount,\n            fromAccountType,\n            toAccountType,\n        });\n    }\n    /**\n     * Query the internal transfer records between different account types under the same UID.\n     */\n    getInternalTransferRecords(params) {\n        return this.getPrivate('/v5/asset/transfer/query-inter-transfer-list', params);\n    }\n    /**\n     * Query the sub UIDs under a main UID\n     *\n     * CAUTION: Can query by the master UID's api key only\n     */\n    getSubUID() {\n        return this.getPrivate('/v5/asset/transfer/query-sub-member-list');\n    }\n    /**\n     * Enable Universal Transfer for Sub UID\n     *\n     * Use this endpoint to enable a subaccount to take part in a universal transfer.\n     * It is a one-time switch which, once thrown, enables a subaccount permanently.\n     * If not set, your subaccount cannot use universal transfers.\n     */\n    enableUniversalTransferForSubUIDs(subMemberIds) {\n        return this.postPrivate('/v5/asset/transfer/save-transfer-sub-member', {\n            subMemberIds,\n        });\n    }\n    /**\n     * Transfer between sub-sub or main-sub. Please make sure you have enabled universal transfer on your sub UID in advance.\n     */\n    createUniversalTransfer(params) {\n        return this.postPrivate('/v5/asset/transfer/universal-transfer', params);\n    }\n    /**\n     * Query universal transfer records\n     *\n     * CAUTION\n     * Can query by the master UID's API key only\n     */\n    getUniversalTransferRecords(params) {\n        return this.getPrivate('/v5/asset/transfer/query-universal-transfer-list', params);\n    }\n    /**\n     * Query allowed deposit coin information.\n     * To find out paired chain of coin, please refer to the coin info api.\n     */\n    getAllowedDepositCoinInfo(params) {\n        return this.get('/v5/asset/deposit/query-allowed-list', params);\n    }\n    /**\n     * Set auto transfer account after deposit. The same function as the setting for Deposit on web GUI\n     */\n    setDepositAccount(params) {\n        return this.postPrivate('/v5/asset/deposit/deposit-to-account', params);\n    }\n    /**\n     * Query deposit records.\n     *\n     * TIP\n     * endTime - startTime should be less than 30 days. Query last 30 days records by default.\n     *\n     * Can use main or sub UID api key to query deposit records respectively.\n     */\n    getDepositRecords(params) {\n        return this.getPrivate('/v5/asset/deposit/query-record', params);\n    }\n    /**\n     * Query subaccount's deposit records by MAIN UID's API key.\n     *\n     * TIP: Query deposit records of SPOT only\n     *      endTime - startTime should be less than 30 days.\n     *      Queries for the last 30 days worth of records by default.\n     */\n    getSubAccountDepositRecords(params) {\n        return this.getPrivate('/v5/asset/deposit/query-sub-member-record', params);\n    }\n    /**\n     * Get Internal Deposit Records (across Bybit)\n     * Query deposit records through Bybit platform\n     *\n     * RULES\n     * The maximum difference between the start time and the end time is 30 days.\n     * Support to get deposit records by Master or Sub Member Api Key\n     */\n    getInternalDepositRecords(params) {\n        return this.getPrivate('/v5/asset/deposit/query-internal-record', params);\n    }\n    /**\n     * Query the deposit address information of MASTER account.\n     */\n    getMasterDepositAddress(coin, chainType) {\n        return this.getPrivate('/v5/asset/deposit/query-address', {\n            coin,\n            chainType,\n        });\n    }\n    /**\n     * Query the deposit address information of SUB account.\n     */\n    getSubDepositAddress(coin, chainType, subMemberId) {\n        return this.getPrivate('/v5/asset/deposit/query-sub-member-address', {\n            coin,\n            chainType,\n            subMemberId,\n        });\n    }\n    /**\n     * Query the deposit address information of SUB account.\n     *\n     * CAUTION\n     * Can use master UID's api key only\n     */\n    querySubMemberAddress(coin, chainType, subMemberId) {\n        return this.getPrivate('/v5/asset/deposit/query-sub-member-address', {\n            coin,\n            chainType,\n            subMemberId,\n        });\n    }\n    /**\n     * Query coin information, including chain information, withdraw and deposit status.\n     */\n    getCoinInfo(coin) {\n        return this.getPrivate('/v5/asset/coin/query-info', coin ? { coin } : undefined);\n    }\n    /**\n     * Query withdrawal records.\n     */\n    getWithdrawalRecords(params) {\n        return this.getPrivate('/v5/asset/withdraw/query-record', params);\n    }\n    /**\n     * Query withdrawable amount.\n     */\n    getWithdrawableAmount(params) {\n        return this.getPrivate('/v5/asset/withdraw/withdrawable-amount', params);\n    }\n    /**\n     * Withdraw assets from the SPOT account.\n     *\n     * CAUTION: Make sure you have whitelisted your wallet address before calling this endpoint.\n     *\n     * You can make an off-chain transfer if the target wallet address is from Bybit. This means that no blockchain fee will be charged.\n     */\n    submitWithdrawal(params) {\n        return this.postPrivate('/v5/asset/withdraw/create', params);\n    }\n    /**\n     * Cancel the withdrawal\n     *\n     * CAUTION: Can query by the master UID's api key only\n     */\n    cancelWithdrawal(id) {\n        return this.postPrivate('/v5/asset/withdraw/cancel', { id });\n    }\n    /**\n     *\n     ****** User APIs\n     *\n     */\n    /**\n     * Create a new sub user id. Use master user's api key only.\n     *\n     * The API key must have one of the permissions to be allowed to call the following API endpoint.\n     * - master API key: \"Account Transfer\", \"Subaccount Transfer\", \"Withdrawal\"\n     */\n    createSubMember(params) {\n        return this.postPrivate('/v5/user/create-sub-member', params);\n    }\n    /**\n     * To create new API key for those newly created sub UID. Use master user's api key only.\n     *\n     * TIP: The API key must have one of the permissions to be allowed to call the following API endpoint.\n     * - master API key: \"Account Transfer\", \"Subaccount Transfer\", \"Withdrawal\"\n     */\n    createSubUIDAPIKey(params) {\n        return this.postPrivate('/v5/user/create-sub-api', params);\n    }\n    /**\n     * This endpoint allows you to get a list of all sub UID of master account.\n     */\n    getSubUIDList() {\n        return this.getPrivate('/v5/user/query-sub-members');\n    }\n    /**\n     * Froze sub uid. Use master user's api key only.\n     *\n     * TIP: The API key must have one of the permissions to be allowed to call the following API endpoint.\n     * - master API key: \"Account Transfer\", \"Subaccount Transfer\", \"Withdrawal\"\n     */\n    setSubUIDFrozenState(subuid, frozen) {\n        return this.postPrivate('/v5/user/frozen-sub-member', { subuid, frozen });\n    }\n    /**\n     * Get the information of the api key. Use the api key pending to be checked to call the endpoint.\n     * Both master and sub user's api key are applicable.\n     *\n     * TIP: Any permission can access this endpoint.\n     */\n    getQueryApiKey() {\n        return this.getPrivate('/v5/user/query-api');\n    }\n    /**\n     * Modify the settings of a master API key. Use the API key pending to be modified to call the endpoint. Use master user's API key only.\n     *\n     * TIP: The API key must have one of the permissions to be allowed to call the following API endpoint.\n     * - master API key: \"Account Transfer\", \"Subaccount Transfer\", \"Withdrawal\"\n     */\n    updateMasterApiKey(params) {\n        return this.postPrivate('/v5/user/update-api', params);\n    }\n    /**\n     * This endpoint modifies the settings of a sub API key.\n     * Use the API key pending to be modified to call the endpoint.\n     * Only the API key that calls this interface can be modified.\n     *\n     * The API key must own \"Account Transfer\" permission to be allowed to call this API endpoint.\n     */\n    updateSubApiKey(params) {\n        return this.postPrivate('/v5/user/update-sub-api', params);\n    }\n    /**\n     * Delete the api key of master account. Use the api key pending to be delete to call the endpoint. Use master user's api key only.\n     *\n     * TIP:\n     * The API key must have one of the permissions to be allowed to call the following API endpoint.\n     * - master API key: \"Account Transfer\", \"Subaccount Transfer\", \"Withdrawal\"\n     *\n     * DANGER: BE CAREFUL! The API key used to call this interface will be invalid immediately.\n     */\n    deleteMasterApiKey() {\n        return this.postPrivate('/v5/user/delete-api');\n    }\n    /**\n     * Delete the api key of sub account. Use the api key pending to be delete to call the endpoint. Use sub user's api key only.\n     *\n     * TIP:\n     * The API key must have one of the permissions to be allowed to call the following API endpoint.\n     * - sub API key: \"Account Transfer\"\n     *\n     * DANGER: BE CAREFUL! The API key used to call this interface will be invalid immediately.\n     */\n    deleteSubApiKey() {\n        return this.postPrivate('/v5/user/delete-sub-api');\n    }\n    /**\n     * Delete a sub UID. Before deleting the UID, please make sure there are no assets.\n     *\n     * TIP:\n     * The API key must have one of the permissions to be allowed to call the following API endpoint.\n     * - master API key: \"Account Transfer\", \"Subaccount Transfer\", \"Withdrawal\"\n     */\n    deleteSubMember(params) {\n        return this.postPrivate('/v5/user/del-submember', params);\n    }\n    /**\n     *\n     ****** Spot Leverage Token APIs\n     *\n     */\n    /**\n     * Query leverage token information\n     */\n    getLeveragedTokenInfo(ltCoin) {\n        return this.get('/v5/spot-lever-token/info', { ltCoin });\n    }\n    /**\n     * Get leverage token market information.\n     */\n    getLeveragedTokenMarket(ltCoin) {\n        return this.get('/v5/spot-lever-token/reference', { ltCoin });\n    }\n    /**\n     * This endpoint allows you to purchase a leveraged token with a specified amount.\n     */\n    purchaseSpotLeveragedToken(params) {\n        return this.postPrivate('/v5/spot-lever-token/purchase', params);\n    }\n    /**\n     * Redeem leveraged token.\n     */\n    redeemSpotLeveragedToken(params) {\n        return this.postPrivate('/v5/spot-lever-token/redeem', params);\n    }\n    /**\n     * Get purchase or redemption history\n     */\n    getSpotLeveragedTokenOrderHistory(params) {\n        return this.getPrivate('/v5/spot-lever-token/order-record', params);\n    }\n    /**\n     *\n     ****** Spot Margin Trade APIs (UTA)\n     *\n     */\n    /**\n     * Turn spot margin trade on / off in your UTA account.\n     *\n     * CAUTION\n     * Your account needs to turn on spot margin first.\n     */\n    toggleSpotMarginTrade(spotMarginMode) {\n        return this.postPrivate('/v5/spot-margin-trade/switch-mode', {\n            spotMarginMode,\n        });\n    }\n    /**\n     * Set the user's maximum leverage in spot cross margin.\n     * CAUTION: Your account needs to enable spot margin first; i.e., you must have finished the quiz on web / app.\n     */\n    setSpotMarginLeverage(leverage) {\n        return this.postPrivate('/v5/spot-margin-trade/set-leverage', { leverage });\n    }\n    /**\n     *\n     ****** Spot Margin Trade APIs (Normal)\n     *\n     */\n    /**\n     * Get Margin Coin Info\n     */\n    getSpotMarginCoinInfo(coin) {\n        return this.getPrivate('/v5/spot-cross-margin-trade/pledge-token', {\n            coin,\n        });\n    }\n    /**\n     * Get Borrowable Coin Info\n     */\n    getSpotMarginBorrowableCoinInfo(coin) {\n        return this.getPrivate('/v5/spot-cross-margin-trade/borrow-token', {\n            coin,\n        });\n    }\n    /**\n     * Get Interest & Quota\n     */\n    getSpotMarginInterestAndQuota(coin) {\n        return this.getPrivate('/v5/spot-cross-margin-trade/loan-info', {\n            coin,\n        });\n    }\n    /**\n     * Get Loan Account Info\n     */\n    getSpotMarginLoanAccountInfo() {\n        return this.getPrivate('/v5/spot-cross-margin-trade/account');\n    }\n    /**\n     * Borrow\n     */\n    spotMarginBorrow(params) {\n        return this.postPrivate('/v5/spot-cross-margin-trade/loan', params);\n    }\n    /**\n     * Repay\n     */\n    spotMarginRepay(params) {\n        return this.postPrivate('/v5/spot-cross-margin-trade/repay', params);\n    }\n    /**\n     * Get Borrow Order Detail\n     */\n    getSpotMarginBorrowOrderDetail(params) {\n        return this.getPrivate('/v5/spot-cross-margin-trade/orders', params);\n    }\n    /**\n     * Get Repayment Order Detail\n     */\n    getSpotMarginRepaymentOrderDetail(params) {\n        return this.getPrivate('/v5/spot-cross-margin-trade/repay-history', params);\n    }\n    /**\n     * Turn spot margin trade on / off in your NORMAL account.\n     */\n    toggleSpotCrossMarginTrade(params) {\n        return this.postPrivate('/v5/spot-cross-margin-trade/switch', params);\n    }\n    /**\n     *\n     ****** Institutional Lending\n     *\n     */\n    /**\n     * Get Product Info\n     */\n    getInstitutionalLendingProductInfo(productId) {\n        return this.get('/v5/ins-loan/product-infos', { productId });\n    }\n    /**\n     * Get Margin Coin Info\n     */\n    getInstitutionalLendingMarginCoinInfo(productId) {\n        return this.get('/v5/ins-loan/ensure-tokens', { productId });\n    }\n    /**\n     * Get Margin Coin Info With Conversion Rate\n     */\n    getInstitutionalLendingMarginCoinInfoWithConversionRate(productId) {\n        return this.get('/v5/ins-loan/ensure-tokens-convert', { productId });\n    }\n    /**\n     * Get Loan Orders\n     */\n    getInstitutionalLendingLoanOrders(params) {\n        return this.getPrivate('/v5/ins-loan/loan-order', params);\n    }\n    /**\n     * Get Repay Orders\n     */\n    getInstitutionalLendingRepayOrders(params) {\n        return this.getPrivate('/v5/ins-loan/repaid-history', params);\n    }\n    /**\n     * Get LTV\n     */\n    getInstitutionalLendingLTV() {\n        return this.getPrivate('/v5/ins-loan/ltv');\n    }\n    /**\n     * Get LTV with Ladder Conversion Rate\n     */\n    getInstitutionalLendingLTVWithLadderConversionRate() {\n        return this.getPrivate('/v5/ins-loan/ltv-convert');\n    }\n}\nexports.RestClientV5 = RestClientV5;\n//# sourceMappingURL=rest-client-v5.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/rest-client-v5.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/spot-client-v3.js":
/*!******************************************************!*\
  !*** ./node_modules/bybit-api/lib/spot-client-v3.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpotClientV3 = void 0;\nconst util_1 = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/bybit-api/lib/util/index.js\");\nconst BaseRestClient_1 = __importDefault(__webpack_require__(/*! ./util/BaseRestClient */ \"(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js\"));\n/**\n * REST API client for newer Spot V3 APIs.\n */\nclass SpotClientV3 extends BaseRestClient_1.default {\n    getClientType() {\n        // Follows the same authentication mechanism as other v3 APIs (e.g. USDC)\n        return util_1.REST_CLIENT_TYPE_ENUM.v3;\n    }\n    fetchServerTime() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.getServerTime();\n            return Number(res.time_now);\n        });\n    }\n    /**\n     *\n     * Market Data Endpoints\n     *\n     */\n    /** Get all symbols */\n    getSymbols() {\n        return this.get('/spot/v3/public/symbols');\n    }\n    /** Get orderbook for symbol */\n    getOrderBook(symbol, limit) {\n        return this.get('/spot/v3/public/quote/depth', { symbol, limit });\n    }\n    /** Get merged orderbook for symbol */\n    getMergedOrderBook(symbol, scale, limit) {\n        return this.get('/spot/v3/public/quote/depth/merged', {\n            symbol,\n            scale,\n            limit,\n        });\n    }\n    /** Get public trading records (raw trades) */\n    getTrades(symbol, limit) {\n        return this.get('/spot/v3/public/quote/trades', { symbol, limit });\n    }\n    /** Get candles/klines */\n    getCandles(symbol, interval, limit, startTime, endTime) {\n        return this.get('/spot/v3/public/quote/kline', {\n            symbol,\n            interval,\n            limit,\n            startTime,\n            endTime,\n        });\n    }\n    /** Get latest information for symbol (24hr ticker) */\n    get24hrTicker(symbol) {\n        return this.get('/spot/v3/public/quote/ticker/24hr', { symbol });\n    }\n    /** Get last traded price */\n    getLastTradedPrice(symbol) {\n        return this.get('/spot/v3/public/quote/ticker/price', { symbol });\n    }\n    /** Get best bid/ask price */\n    getBestBidAskPrice(symbol) {\n        return this.get('/spot/v3/public/quote/ticker/bookTicker', { symbol });\n    }\n    /**\n     *\n     * Account Data Endpoints\n     *\n     */\n    /** -> Order API */\n    /** Create order */\n    submitOrder(params) {\n        return this.postPrivate('/spot/v3/private/order', params);\n    }\n    /** Get active order state */\n    getOrder(params) {\n        return this.getPrivate('/spot/v3/private/order', params);\n    }\n    /** Cancel order */\n    cancelOrder(params) {\n        return this.postPrivate('/spot/v3/private/cancel-order', params);\n    }\n    /** Batch cancel orders */\n    cancelOrderBatch(params) {\n        const orderTypes = params.orderTypes\n            ? params.orderTypes.join(',')\n            : undefined;\n        return this.postPrivate('/spot/v3/private/cancel-orders', Object.assign(Object.assign({}, params), { orderTypes }));\n    }\n    /** Batch cancel up to 100 orders by ID */\n    cancelOrderBatchIDs(orderIds) {\n        const orderIdsCsv = orderIds.join(',');\n        return this.postPrivate('/spot/v3/private/cancel-orders-by-ids', {\n            orderIds: orderIdsCsv,\n        });\n    }\n    /** Get open orders */\n    getOpenOrders(symbol, orderId, limit, orderCategory) {\n        return this.getPrivate('/spot/v3/private/open-orders', {\n            symbol,\n            orderId,\n            limit,\n            orderCategory,\n        });\n    }\n    /** Get order history */\n    getPastOrders(symbol, orderId, limit, orderCategory) {\n        return this.getPrivate('/spot/v3/private/history-orders', {\n            symbol,\n            orderId,\n            limit,\n            orderCategory,\n        });\n    }\n    /**\n     * Get your trade history.\n     * If startTime is not specified, you can only query for records in the last 7 days.\n     * If you want to query for records older than 7 days, startTime is required.\n     */\n    getMyTrades(params) {\n        return this.getPrivate('/spot/v3/private/my-trades', params);\n    }\n    /**\n     *\n     * Wallet Data Endpoints\n     *\n     */\n    /** Get Wallet Balance */\n    getBalances() {\n        return this.getPrivate('/spot/v3/private/account');\n    }\n    /**\n     *\n     * API Data Endpoints\n     *\n     */\n    getServerTime() {\n        return this.get('/v2/public/time');\n    }\n    /**\n     *\n     * Leveraged Token Endpoints\n     *\n     */\n    /** Get all asset infos */\n    getLeveragedTokenAssetInfos(ltCode) {\n        return this.get('/spot/v3/public/infos', { ltCode });\n    }\n    /** Get leveraged token market info */\n    getLeveragedTokenMarketInfo(ltCode) {\n        return this.getPrivate('/spot/v3/private/reference', { ltCode });\n    }\n    /** Purchase leveraged token */\n    purchaseLeveragedToken(ltCode, ltAmount, serialNo) {\n        return this.postPrivate('/spot/v3/private/purchase', {\n            ltCode,\n            ltAmount,\n            serialNo,\n        });\n    }\n    /** Redeem leveraged token */\n    redeemLeveragedToken(ltCode, ltAmount, serialNo) {\n        return this.postPrivate('/spot/v3/private/redeem', {\n            ltCode,\n            ltAmount,\n            serialNo,\n        });\n    }\n    /** Get leveraged token purchase/redemption history */\n    getLeveragedTokenPRHistory(params) {\n        return this.getPrivate('/spot/v3/private/record', params);\n    }\n    /**\n     *\n     * Cross Margin Trading Endpoints\n     *\n     */\n    /** Borrow margin loan */\n    borrowCrossMarginLoan(coin, qty) {\n        return this.postPrivate('/spot/v3/private/cross-margin-loan', {\n            coin,\n            qty,\n        });\n    }\n    /** Repay margin loan */\n    repayCrossMarginLoan(coin, qty) {\n        return this.postPrivate('/spot/v3/private/cross-margin-repay', {\n            coin,\n            qty,\n        });\n    }\n    /** Query borrowing info */\n    getCrossMarginBorrowingInfo(params) {\n        return this.getPrivate('/spot/v3/private/cross-margin-orders', params);\n    }\n    /** Query account info */\n    getCrossMarginAccountInfo() {\n        return this.getPrivate('/spot/v3/private/cross-margin-account');\n    }\n    /** Query interest & quota */\n    getCrossMarginInterestQuota(coin) {\n        return this.getPrivate('/spot/v3/private/cross-margin-loan-info', { coin });\n    }\n    /** Query repayment history */\n    getCrossMarginRepaymentHistory(params) {\n        return this.getPrivate('/spot/v3/private/cross-margin-repay-history', params);\n    }\n}\nexports.SpotClientV3 = SpotClientV3;\n//# sourceMappingURL=spot-client-v3.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/spot-client-v3.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/spot-client.js":
/*!***************************************************!*\
  !*** ./node_modules/bybit-api/lib/spot-client.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SpotClient = void 0;\nconst BaseRestClient_1 = __importDefault(__webpack_require__(/*! ./util/BaseRestClient */ \"(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js\"));\nconst requestUtils_1 = __webpack_require__(/*! ./util/requestUtils */ \"(rsc)/./node_modules/bybit-api/lib/util/requestUtils.js\");\n/**\n * REST API client for Spot APIs (v1)\n *\n * @deprecated WARNING: V1/V2 private endpoints (Rest API & Websocket Stream) for mainnet\n * will be switched off gradually from 30 Oct 2023 UTC, so they are not promised a stability.\n * Please note that you are at your own risk of using old endpoints going forward, and please move to V5 ASAP.\n */\nclass SpotClient extends BaseRestClient_1.default {\n    getClientType() {\n        return requestUtils_1.REST_CLIENT_TYPE_ENUM.spot;\n    }\n    fetchServerTime() {\n        return this.getServerTime();\n    }\n    getServerTime() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.get('/spot/v1/time');\n            return res.result.serverTime;\n        });\n    }\n    /**\n     *\n     * Market Data Endpoints\n     *\n     **/\n    getSymbols() {\n        return this.get('/spot/v1/symbols');\n    }\n    getOrderBook(symbol, limit) {\n        return this.get('/spot/quote/v1/depth', {\n            symbol,\n            limit,\n        });\n    }\n    getMergedOrderBook(symbol, scale, limit) {\n        return this.get('/spot/quote/v1/depth/merged', {\n            symbol,\n            scale,\n            limit,\n        });\n    }\n    getTrades(symbol, limit) {\n        return this.get('/spot/quote/v1/trades', {\n            symbol,\n            limit,\n        });\n    }\n    getCandles(symbol, interval, limit, startTime, endTime) {\n        return this.get('/spot/quote/v1/kline', {\n            symbol,\n            interval,\n            limit,\n            startTime,\n            endTime,\n        });\n    }\n    get24hrTicker(symbol) {\n        return this.get('/spot/quote/v1/ticker/24hr', { symbol });\n    }\n    getLastTradedPrice(symbol) {\n        return this.get('/spot/quote/v1/ticker/price', { symbol });\n    }\n    getBestBidAskPrice(symbol) {\n        return this.get('/spot/quote/v1/ticker/book_ticker', { symbol });\n    }\n    /**\n     * Account Data Endpoints\n     */\n    submitOrder(params) {\n        return this.postPrivate('/spot/v1/order', params);\n    }\n    getOrder(params) {\n        return this.getPrivate('/spot/v1/order', params);\n    }\n    cancelOrder(params) {\n        return this.deletePrivate('/spot/v1/order', params);\n    }\n    cancelOrderBatch(params) {\n        const orderTypes = params.orderTypes\n            ? params.orderTypes.join(',')\n            : undefined;\n        return this.deletePrivate('/spot/order/batch-cancel', Object.assign(Object.assign({}, params), { orderTypes }));\n    }\n    getOpenOrders(symbol, orderId, limit) {\n        return this.getPrivate('/spot/v1/open-orders', {\n            symbol,\n            orderId,\n            limit,\n        });\n    }\n    getPastOrders(symbol, orderId, limit) {\n        return this.getPrivate('/spot/v1/history-orders', {\n            symbol,\n            orderId,\n            limit,\n        });\n    }\n    getMyTrades(symbol, limit, fromId, toId) {\n        return this.getPrivate('/spot/v1/myTrades', {\n            symbol,\n            limit,\n            fromId,\n            toId,\n        });\n    }\n    /**\n     * Wallet Data Endpoints\n     */\n    getBalances() {\n        return this.getPrivate('/spot/v1/account');\n    }\n}\nexports.SpotClient = SpotClient;\n//# sourceMappingURL=spot-client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi9zcG90LWNsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0I7QUFDbEIseUNBQXlDLG1CQUFPLENBQUMsd0ZBQXVCO0FBQ3hFLHVCQUF1QixtQkFBTyxDQUFDLG9GQUFxQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esd0RBQXdELFFBQVE7QUFDaEU7QUFDQTtBQUNBLHlEQUF5RCxRQUFRO0FBQ2pFO0FBQ0E7QUFDQSwrREFBK0QsUUFBUTtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEZBQTRGLGFBQWEsWUFBWTtBQUNySDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFkaW5nLXN5c3RlbS8uL25vZGVfbW9kdWxlcy9ieWJpdC1hcGkvbGliL3Nwb3QtY2xpZW50LmpzP2I1ZmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3BvdENsaWVudCA9IHZvaWQgMDtcbmNvbnN0IEJhc2VSZXN0Q2xpZW50XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vdXRpbC9CYXNlUmVzdENsaWVudFwiKSk7XG5jb25zdCByZXF1ZXN0VXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWwvcmVxdWVzdFV0aWxzXCIpO1xuLyoqXG4gKiBSRVNUIEFQSSBjbGllbnQgZm9yIFNwb3QgQVBJcyAodjEpXG4gKlxuICogQGRlcHJlY2F0ZWQgV0FSTklORzogVjEvVjIgcHJpdmF0ZSBlbmRwb2ludHMgKFJlc3QgQVBJICYgV2Vic29ja2V0IFN0cmVhbSkgZm9yIG1haW5uZXRcbiAqIHdpbGwgYmUgc3dpdGNoZWQgb2ZmIGdyYWR1YWxseSBmcm9tIDMwIE9jdCAyMDIzIFVUQywgc28gdGhleSBhcmUgbm90IHByb21pc2VkIGEgc3RhYmlsaXR5LlxuICogUGxlYXNlIG5vdGUgdGhhdCB5b3UgYXJlIGF0IHlvdXIgb3duIHJpc2sgb2YgdXNpbmcgb2xkIGVuZHBvaW50cyBnb2luZyBmb3J3YXJkLCBhbmQgcGxlYXNlIG1vdmUgdG8gVjUgQVNBUC5cbiAqL1xuY2xhc3MgU3BvdENsaWVudCBleHRlbmRzIEJhc2VSZXN0Q2xpZW50XzEuZGVmYXVsdCB7XG4gICAgZ2V0Q2xpZW50VHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIHJlcXVlc3RVdGlsc18xLlJFU1RfQ0xJRU5UX1RZUEVfRU5VTS5zcG90O1xuICAgIH1cbiAgICBmZXRjaFNlcnZlclRpbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFNlcnZlclRpbWUoKTtcbiAgICB9XG4gICAgZ2V0U2VydmVyVGltZSgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlcyA9IHlpZWxkIHRoaXMuZ2V0KCcvc3BvdC92MS90aW1lJyk7XG4gICAgICAgICAgICByZXR1cm4gcmVzLnJlc3VsdC5zZXJ2ZXJUaW1lO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBNYXJrZXQgRGF0YSBFbmRwb2ludHNcbiAgICAgKlxuICAgICAqKi9cbiAgICBnZXRTeW1ib2xzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXQoJy9zcG90L3YxL3N5bWJvbHMnKTtcbiAgICB9XG4gICAgZ2V0T3JkZXJCb29rKHN5bWJvbCwgbGltaXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KCcvc3BvdC9xdW90ZS92MS9kZXB0aCcsIHtcbiAgICAgICAgICAgIHN5bWJvbCxcbiAgICAgICAgICAgIGxpbWl0LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0TWVyZ2VkT3JkZXJCb29rKHN5bWJvbCwgc2NhbGUsIGxpbWl0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldCgnL3Nwb3QvcXVvdGUvdjEvZGVwdGgvbWVyZ2VkJywge1xuICAgICAgICAgICAgc3ltYm9sLFxuICAgICAgICAgICAgc2NhbGUsXG4gICAgICAgICAgICBsaW1pdCxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldFRyYWRlcyhzeW1ib2wsIGxpbWl0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldCgnL3Nwb3QvcXVvdGUvdjEvdHJhZGVzJywge1xuICAgICAgICAgICAgc3ltYm9sLFxuICAgICAgICAgICAgbGltaXQsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRDYW5kbGVzKHN5bWJvbCwgaW50ZXJ2YWwsIGxpbWl0LCBzdGFydFRpbWUsIGVuZFRpbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KCcvc3BvdC9xdW90ZS92MS9rbGluZScsIHtcbiAgICAgICAgICAgIHN5bWJvbCxcbiAgICAgICAgICAgIGludGVydmFsLFxuICAgICAgICAgICAgbGltaXQsXG4gICAgICAgICAgICBzdGFydFRpbWUsXG4gICAgICAgICAgICBlbmRUaW1lLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0MjRoclRpY2tlcihzeW1ib2wpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KCcvc3BvdC9xdW90ZS92MS90aWNrZXIvMjRocicsIHsgc3ltYm9sIH0pO1xuICAgIH1cbiAgICBnZXRMYXN0VHJhZGVkUHJpY2Uoc3ltYm9sKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldCgnL3Nwb3QvcXVvdGUvdjEvdGlja2VyL3ByaWNlJywgeyBzeW1ib2wgfSk7XG4gICAgfVxuICAgIGdldEJlc3RCaWRBc2tQcmljZShzeW1ib2wpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KCcvc3BvdC9xdW90ZS92MS90aWNrZXIvYm9va190aWNrZXInLCB7IHN5bWJvbCB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWNjb3VudCBEYXRhIEVuZHBvaW50c1xuICAgICAqL1xuICAgIHN1Ym1pdE9yZGVyKHBhcmFtcykge1xuICAgICAgICByZXR1cm4gdGhpcy5wb3N0UHJpdmF0ZSgnL3Nwb3QvdjEvb3JkZXInLCBwYXJhbXMpO1xuICAgIH1cbiAgICBnZXRPcmRlcihwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJpdmF0ZSgnL3Nwb3QvdjEvb3JkZXInLCBwYXJhbXMpO1xuICAgIH1cbiAgICBjYW5jZWxPcmRlcihwYXJhbXMpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGVsZXRlUHJpdmF0ZSgnL3Nwb3QvdjEvb3JkZXInLCBwYXJhbXMpO1xuICAgIH1cbiAgICBjYW5jZWxPcmRlckJhdGNoKHBhcmFtcykge1xuICAgICAgICBjb25zdCBvcmRlclR5cGVzID0gcGFyYW1zLm9yZGVyVHlwZXNcbiAgICAgICAgICAgID8gcGFyYW1zLm9yZGVyVHlwZXMuam9pbignLCcpXG4gICAgICAgICAgICA6IHVuZGVmaW5lZDtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGVsZXRlUHJpdmF0ZSgnL3Nwb3Qvb3JkZXIvYmF0Y2gtY2FuY2VsJywgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBwYXJhbXMpLCB7IG9yZGVyVHlwZXMgfSkpO1xuICAgIH1cbiAgICBnZXRPcGVuT3JkZXJzKHN5bWJvbCwgb3JkZXJJZCwgbGltaXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJpdmF0ZSgnL3Nwb3QvdjEvb3Blbi1vcmRlcnMnLCB7XG4gICAgICAgICAgICBzeW1ib2wsXG4gICAgICAgICAgICBvcmRlcklkLFxuICAgICAgICAgICAgbGltaXQsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRQYXN0T3JkZXJzKHN5bWJvbCwgb3JkZXJJZCwgbGltaXQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJpdmF0ZSgnL3Nwb3QvdjEvaGlzdG9yeS1vcmRlcnMnLCB7XG4gICAgICAgICAgICBzeW1ib2wsXG4gICAgICAgICAgICBvcmRlcklkLFxuICAgICAgICAgICAgbGltaXQsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRNeVRyYWRlcyhzeW1ib2wsIGxpbWl0LCBmcm9tSWQsIHRvSWQpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJpdmF0ZSgnL3Nwb3QvdjEvbXlUcmFkZXMnLCB7XG4gICAgICAgICAgICBzeW1ib2wsXG4gICAgICAgICAgICBsaW1pdCxcbiAgICAgICAgICAgIGZyb21JZCxcbiAgICAgICAgICAgIHRvSWQsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBXYWxsZXQgRGF0YSBFbmRwb2ludHNcbiAgICAgKi9cbiAgICBnZXRCYWxhbmNlcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UHJpdmF0ZSgnL3Nwb3QvdjEvYWNjb3VudCcpO1xuICAgIH1cbn1cbmV4cG9ydHMuU3BvdENsaWVudCA9IFNwb3RDbGllbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zcG90LWNsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/spot-client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/index.js":
/*!***************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/index.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./response */ \"(rsc)/./node_modules/bybit-api/lib/types/response/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./request */ \"(rsc)/./node_modules/bybit-api/lib/types/request/index.js\"), exports);\n__exportStar(__webpack_require__(/*! ./shared */ \"(rsc)/./node_modules/bybit-api/lib/types/shared.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-shared */ \"(rsc)/./node_modules/bybit-api/lib/types/v5-shared.js\"), exports);\n__exportStar(__webpack_require__(/*! ./websockets */ \"(rsc)/./node_modules/bybit-api/lib/types/websockets.js\"), exports);\n__exportStar(__webpack_require__(/*! ./websocket.events */ \"(rsc)/./node_modules/bybit-api/lib/types/websocket.events.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsOEVBQVk7QUFDakMsYUFBYSxtQkFBTyxDQUFDLDRFQUFXO0FBQ2hDLGFBQWEsbUJBQU8sQ0FBQyxvRUFBVTtBQUMvQixhQUFhLG1CQUFPLENBQUMsMEVBQWE7QUFDbEMsYUFBYSxtQkFBTyxDQUFDLDRFQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQyx3RkFBb0I7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFkaW5nLXN5c3RlbS8uL25vZGVfbW9kdWxlcy9ieWJpdC1hcGkvbGliL3R5cGVzL2luZGV4LmpzPzQ3M2QiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9yZXNwb25zZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcmVxdWVzdFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2hhcmVkXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi92NS1zaGFyZWRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3dlYnNvY2tldHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3dlYnNvY2tldC5ldmVudHNcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/account-asset.js":
/*!*******************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/account-asset.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=account-asset.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L2FjY291bnQtYXNzZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFkaW5nLXN5c3RlbS8uL25vZGVfbW9kdWxlcy9ieWJpdC1hcGkvbGliL3R5cGVzL3JlcXVlc3QvYWNjb3VudC1hc3NldC5qcz84NTZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWNjb3VudC1hc3NldC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/account-asset.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/contract.js":
/*!**************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/contract.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=contract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L2NvbnRyYWN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L2NvbnRyYWN0LmpzPzI0YzkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb250cmFjdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/contract.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/copy-trading.js":
/*!******************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/copy-trading.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=copy-trading.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L2NvcHktdHJhZGluZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWRpbmctc3lzdGVtLy4vbm9kZV9tb2R1bGVzL2J5Yml0LWFwaS9saWIvdHlwZXMvcmVxdWVzdC9jb3B5LXRyYWRpbmcuanM/NmIxMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvcHktdHJhZGluZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/copy-trading.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/index.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./account-asset */ \"(rsc)/./node_modules/bybit-api/lib/types/request/account-asset.js\"), exports);\n__exportStar(__webpack_require__(/*! ./copy-trading */ \"(rsc)/./node_modules/bybit-api/lib/types/request/copy-trading.js\"), exports);\n__exportStar(__webpack_require__(/*! ./contract */ \"(rsc)/./node_modules/bybit-api/lib/types/request/contract.js\"), exports);\n__exportStar(__webpack_require__(/*! ./linear */ \"(rsc)/./node_modules/bybit-api/lib/types/request/linear.js\"), exports);\n__exportStar(__webpack_require__(/*! ./inverse */ \"(rsc)/./node_modules/bybit-api/lib/types/request/inverse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./spot */ \"(rsc)/./node_modules/bybit-api/lib/types/request/spot.js\"), exports);\n__exportStar(__webpack_require__(/*! ./usdc-perp */ \"(rsc)/./node_modules/bybit-api/lib/types/request/usdc-perp.js\"), exports);\n__exportStar(__webpack_require__(/*! ./usdc-options */ \"(rsc)/./node_modules/bybit-api/lib/types/request/usdc-options.js\"), exports);\n__exportStar(__webpack_require__(/*! ./usdc-shared */ \"(rsc)/./node_modules/bybit-api/lib/types/request/usdc-shared.js\"), exports);\n__exportStar(__webpack_require__(/*! ./unified-margin */ \"(rsc)/./node_modules/bybit-api/lib/types/request/unified-margin.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-account */ \"(rsc)/./node_modules/bybit-api/lib/types/request/v5-account.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-asset */ \"(rsc)/./node_modules/bybit-api/lib/types/request/v5-asset.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-market */ \"(rsc)/./node_modules/bybit-api/lib/types/request/v5-market.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-position */ \"(rsc)/./node_modules/bybit-api/lib/types/request/v5-position.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-pre-upgrade */ \"(rsc)/./node_modules/bybit-api/lib/types/request/v5-pre-upgrade.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-trade */ \"(rsc)/./node_modules/bybit-api/lib/types/request/v5-trade.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-user */ \"(rsc)/./node_modules/bybit-api/lib/types/request/v5-user.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-spot-leverage-token */ \"(rsc)/./node_modules/bybit-api/lib/types/request/v5-spot-leverage-token.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQywwRkFBaUI7QUFDdEMsYUFBYSxtQkFBTyxDQUFDLHdGQUFnQjtBQUNyQyxhQUFhLG1CQUFPLENBQUMsZ0ZBQVk7QUFDakMsYUFBYSxtQkFBTyxDQUFDLDRFQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQyw4RUFBVztBQUNoQyxhQUFhLG1CQUFPLENBQUMsd0VBQVE7QUFDN0IsYUFBYSxtQkFBTyxDQUFDLGtGQUFhO0FBQ2xDLGFBQWEsbUJBQU8sQ0FBQyx3RkFBZ0I7QUFDckMsYUFBYSxtQkFBTyxDQUFDLHNGQUFlO0FBQ3BDLGFBQWEsbUJBQU8sQ0FBQyw0RkFBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLG9GQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQyxnRkFBWTtBQUNqQyxhQUFhLG1CQUFPLENBQUMsa0ZBQWE7QUFDbEMsYUFBYSxtQkFBTyxDQUFDLHNGQUFlO0FBQ3BDLGFBQWEsbUJBQU8sQ0FBQyw0RkFBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLGdGQUFZO0FBQ2pDLGFBQWEsbUJBQU8sQ0FBQyw4RUFBVztBQUNoQyxhQUFhLG1CQUFPLENBQUMsNEdBQTBCO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L2luZGV4LmpzPzc1NWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hY2NvdW50LWFzc2V0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb3B5LXRyYWRpbmdcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2NvbnRyYWN0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9saW5lYXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2ludmVyc2VcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Nwb3RcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3VzZGMtcGVycFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdXNkYy1vcHRpb25zXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91c2RjLXNoYXJlZFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdW5pZmllZC1tYXJnaW5cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Y1LWFjY291bnRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Y1LWFzc2V0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi92NS1tYXJrZXRcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Y1LXBvc2l0aW9uXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi92NS1wcmUtdXBncmFkZVwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdjUtdHJhZGVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Y1LXVzZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Y1LXNwb3QtbGV2ZXJhZ2UtdG9rZW5cIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/inverse.js":
/*!*************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/inverse.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=inverse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L2ludmVyc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFkaW5nLXN5c3RlbS8uL25vZGVfbW9kdWxlcy9ieWJpdC1hcGkvbGliL3R5cGVzL3JlcXVlc3QvaW52ZXJzZS5qcz9hMjE4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW52ZXJzZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/inverse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/linear.js":
/*!************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/linear.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=linear.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L2xpbmVhci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWRpbmctc3lzdGVtLy4vbm9kZV9tb2R1bGVzL2J5Yml0LWFwaS9saWIvdHlwZXMvcmVxdWVzdC9saW5lYXIuanM/NTU1NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpbmVhci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/linear.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/spot.js":
/*!**********************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/spot.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=spot.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3Nwb3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFkaW5nLXN5c3RlbS8uL25vZGVfbW9kdWxlcy9ieWJpdC1hcGkvbGliL3R5cGVzL3JlcXVlc3Qvc3BvdC5qcz9jYzg4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3BvdC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/spot.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/unified-margin.js":
/*!********************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/unified-margin.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=unified-margin.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3VuaWZpZWQtbWFyZ2luLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3VuaWZpZWQtbWFyZ2luLmpzPzc2YzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11bmlmaWVkLW1hcmdpbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/unified-margin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/usdc-options.js":
/*!******************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/usdc-options.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=usdc-options.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3VzZGMtb3B0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWRpbmctc3lzdGVtLy4vbm9kZV9tb2R1bGVzL2J5Yml0LWFwaS9saWIvdHlwZXMvcmVxdWVzdC91c2RjLW9wdGlvbnMuanM/ZjY0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZGMtb3B0aW9ucy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/usdc-options.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/usdc-perp.js":
/*!***************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/usdc-perp.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=usdc-perp.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3VzZGMtcGVycC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWRpbmctc3lzdGVtLy4vbm9kZV9tb2R1bGVzL2J5Yml0LWFwaS9saWIvdHlwZXMvcmVxdWVzdC91c2RjLXBlcnAuanM/MDdhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZGMtcGVycC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/usdc-perp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/usdc-shared.js":
/*!*****************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/usdc-shared.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=usdc-shared.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3VzZGMtc2hhcmVkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3VzZGMtc2hhcmVkLmpzP2ZkYTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2RjLXNoYXJlZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/usdc-shared.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/v5-account.js":
/*!****************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/v5-account.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-account.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3Y1LWFjY291bnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFkaW5nLXN5c3RlbS8uL25vZGVfbW9kdWxlcy9ieWJpdC1hcGkvbGliL3R5cGVzL3JlcXVlc3QvdjUtYWNjb3VudC5qcz8zZTBiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9djUtYWNjb3VudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/v5-account.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/v5-asset.js":
/*!**************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/v5-asset.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-asset.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3Y1LWFzc2V0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3Y1LWFzc2V0LmpzPzk0YTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12NS1hc3NldC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/v5-asset.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/v5-market.js":
/*!***************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/v5-market.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-market.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3Y1LW1hcmtldC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWRpbmctc3lzdGVtLy4vbm9kZV9tb2R1bGVzL2J5Yml0LWFwaS9saWIvdHlwZXMvcmVxdWVzdC92NS1tYXJrZXQuanM/ODllZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXY1LW1hcmtldC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/v5-market.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/v5-position.js":
/*!*****************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/v5-position.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-position.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3Y1LXBvc2l0aW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3Y1LXBvc2l0aW9uLmpzP2YwMDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12NS1wb3NpdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/v5-position.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/v5-pre-upgrade.js":
/*!********************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/v5-pre-upgrade.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-pre-upgrade.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3Y1LXByZS11cGdyYWRlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3Y1LXByZS11cGdyYWRlLmpzP2E5ZGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12NS1wcmUtdXBncmFkZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/v5-pre-upgrade.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/v5-spot-leverage-token.js":
/*!****************************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/v5-spot-leverage-token.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-spot-leverage-token.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3Y1LXNwb3QtbGV2ZXJhZ2UtdG9rZW4uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFkaW5nLXN5c3RlbS8uL25vZGVfbW9kdWxlcy9ieWJpdC1hcGkvbGliL3R5cGVzL3JlcXVlc3QvdjUtc3BvdC1sZXZlcmFnZS10b2tlbi5qcz9lOWI5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9djUtc3BvdC1sZXZlcmFnZS10b2tlbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/v5-spot-leverage-token.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/v5-trade.js":
/*!**************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/v5-trade.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-trade.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3Y1LXRyYWRlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3Y1LXRyYWRlLmpzPzMyYmEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12NS10cmFkZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/v5-trade.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/request/v5-user.js":
/*!*************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/request/v5-user.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-user.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXF1ZXN0L3Y1LXVzZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFkaW5nLXN5c3RlbS8uL25vZGVfbW9kdWxlcy9ieWJpdC1hcGkvbGliL3R5cGVzL3JlcXVlc3QvdjUtdXNlci5qcz84MGRmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9djUtdXNlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/request/v5-user.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/response/account-asset.js":
/*!********************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/response/account-asset.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=account-asset.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS9hY2NvdW50LWFzc2V0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS9hY2NvdW50LWFzc2V0LmpzPzY2NDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hY2NvdW50LWFzc2V0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/response/account-asset.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/response/contract.js":
/*!***************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/response/contract.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=contract.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS9jb250cmFjdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWRpbmctc3lzdGVtLy4vbm9kZV9tb2R1bGVzL2J5Yml0LWFwaS9saWIvdHlwZXMvcmVzcG9uc2UvY29udHJhY3QuanM/MzZjNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnRyYWN0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/response/contract.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/response/index.js":
/*!************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/response/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./account-asset */ \"(rsc)/./node_modules/bybit-api/lib/types/response/account-asset.js\"), exports);\n__exportStar(__webpack_require__(/*! ./contract */ \"(rsc)/./node_modules/bybit-api/lib/types/response/contract.js\"), exports);\n__exportStar(__webpack_require__(/*! ./shared */ \"(rsc)/./node_modules/bybit-api/lib/types/response/shared.js\"), exports);\n__exportStar(__webpack_require__(/*! ./spot */ \"(rsc)/./node_modules/bybit-api/lib/types/response/spot.js\"), exports);\n__exportStar(__webpack_require__(/*! ./usdt-perp */ \"(rsc)/./node_modules/bybit-api/lib/types/response/usdt-perp.js\"), exports);\n__exportStar(__webpack_require__(/*! ./unified-margin */ \"(rsc)/./node_modules/bybit-api/lib/types/response/unified-margin.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-account */ \"(rsc)/./node_modules/bybit-api/lib/types/response/v5-account.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-asset */ \"(rsc)/./node_modules/bybit-api/lib/types/response/v5-asset.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-market */ \"(rsc)/./node_modules/bybit-api/lib/types/response/v5-market.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-position */ \"(rsc)/./node_modules/bybit-api/lib/types/response/v5-position.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-trade */ \"(rsc)/./node_modules/bybit-api/lib/types/response/v5-trade.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-user */ \"(rsc)/./node_modules/bybit-api/lib/types/response/v5-user.js\"), exports);\n__exportStar(__webpack_require__(/*! ./v5-spot-leverage-token */ \"(rsc)/./node_modules/bybit-api/lib/types/response/v5-spot-leverage-token.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsMkZBQWlCO0FBQ3RDLGFBQWEsbUJBQU8sQ0FBQyxpRkFBWTtBQUNqQyxhQUFhLG1CQUFPLENBQUMsNkVBQVU7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLHlFQUFRO0FBQzdCLGFBQWEsbUJBQU8sQ0FBQyxtRkFBYTtBQUNsQyxhQUFhLG1CQUFPLENBQUMsNkZBQWtCO0FBQ3ZDLGFBQWEsbUJBQU8sQ0FBQyxxRkFBYztBQUNuQyxhQUFhLG1CQUFPLENBQUMsaUZBQVk7QUFDakMsYUFBYSxtQkFBTyxDQUFDLG1GQUFhO0FBQ2xDLGFBQWEsbUJBQU8sQ0FBQyx1RkFBZTtBQUNwQyxhQUFhLG1CQUFPLENBQUMsaUZBQVk7QUFDakMsYUFBYSxtQkFBTyxDQUFDLCtFQUFXO0FBQ2hDLGFBQWEsbUJBQU8sQ0FBQyw2R0FBMEI7QUFDL0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFkaW5nLXN5c3RlbS8uL25vZGVfbW9kdWxlcy9ieWJpdC1hcGkvbGliL3R5cGVzL3Jlc3BvbnNlL2luZGV4LmpzPzQzNjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9hY2NvdW50LWFzc2V0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9jb250cmFjdFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc2hhcmVkXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zcG90XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi91c2R0LXBlcnBcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3VuaWZpZWQtbWFyZ2luXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi92NS1hY2NvdW50XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi92NS1hc3NldFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdjUtbWFya2V0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi92NS1wb3NpdGlvblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vdjUtdHJhZGVcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Y1LXVzZXJcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3Y1LXNwb3QtbGV2ZXJhZ2UtdG9rZW5cIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/response/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/response/shared.js":
/*!*************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/response/shared.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=shared.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS9zaGFyZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFkaW5nLXN5c3RlbS8uL25vZGVfbW9kdWxlcy9ieWJpdC1hcGkvbGliL3R5cGVzL3Jlc3BvbnNlL3NoYXJlZC5qcz82MTFhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhcmVkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/response/shared.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/response/spot.js":
/*!***********************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/response/spot.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=spot.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS9zcG90LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS9zcG90LmpzPzY1OWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zcG90LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/response/spot.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/response/unified-margin.js":
/*!*********************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/response/unified-margin.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=unified-margin.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS91bmlmaWVkLW1hcmdpbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWRpbmctc3lzdGVtLy4vbm9kZV9tb2R1bGVzL2J5Yml0LWFwaS9saWIvdHlwZXMvcmVzcG9uc2UvdW5pZmllZC1tYXJnaW4uanM/ZDE1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVuaWZpZWQtbWFyZ2luLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/response/unified-margin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/response/usdt-perp.js":
/*!****************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/response/usdt-perp.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=usdt-perp.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS91c2R0LXBlcnAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFkaW5nLXN5c3RlbS8uL25vZGVfbW9kdWxlcy9ieWJpdC1hcGkvbGliL3R5cGVzL3Jlc3BvbnNlL3VzZHQtcGVycC5qcz9jYmMzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNkdC1wZXJwLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/response/usdt-perp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/response/v5-account.js":
/*!*****************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/response/v5-account.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-account.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS92NS1hY2NvdW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS92NS1hY2NvdW50LmpzP2Y0YmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12NS1hY2NvdW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/response/v5-account.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/response/v5-asset.js":
/*!***************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/response/v5-asset.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-asset.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS92NS1hc3NldC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWRpbmctc3lzdGVtLy4vbm9kZV9tb2R1bGVzL2J5Yml0LWFwaS9saWIvdHlwZXMvcmVzcG9uc2UvdjUtYXNzZXQuanM/Y2Y4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXY1LWFzc2V0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/response/v5-asset.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/response/v5-market.js":
/*!****************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/response/v5-market.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-market.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS92NS1tYXJrZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFkaW5nLXN5c3RlbS8uL25vZGVfbW9kdWxlcy9ieWJpdC1hcGkvbGliL3R5cGVzL3Jlc3BvbnNlL3Y1LW1hcmtldC5qcz84NDBmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9djUtbWFya2V0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/response/v5-market.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/response/v5-position.js":
/*!******************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/response/v5-position.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-position.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS92NS1wb3NpdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWRpbmctc3lzdGVtLy4vbm9kZV9tb2R1bGVzL2J5Yml0LWFwaS9saWIvdHlwZXMvcmVzcG9uc2UvdjUtcG9zaXRpb24uanM/NjdmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXY1LXBvc2l0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/response/v5-position.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/response/v5-spot-leverage-token.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/response/v5-spot-leverage-token.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-spot-leverage-token.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS92NS1zcG90LWxldmVyYWdlLXRva2VuLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS92NS1zcG90LWxldmVyYWdlLXRva2VuLmpzP2MwOWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12NS1zcG90LWxldmVyYWdlLXRva2VuLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/response/v5-spot-leverage-token.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/response/v5-trade.js":
/*!***************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/response/v5-trade.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-trade.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS92NS10cmFkZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWRpbmctc3lzdGVtLy4vbm9kZV9tb2R1bGVzL2J5Yml0LWFwaS9saWIvdHlwZXMvcmVzcG9uc2UvdjUtdHJhZGUuanM/MTBiNSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXY1LXRyYWRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/response/v5-trade.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/response/v5-user.js":
/*!**************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/response/v5-user.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-user.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS92NS11c2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9yZXNwb25zZS92NS11c2VyLmpzPzE3NWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12NS11c2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/response/v5-user.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/shared.js":
/*!****************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/shared.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=shared.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy9zaGFyZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFkaW5nLXN5c3RlbS8uL25vZGVfbW9kdWxlcy9ieWJpdC1hcGkvbGliL3R5cGVzL3NoYXJlZC5qcz8yZDRiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhcmVkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/shared.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/v5-shared.js":
/*!*******************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/v5-shared.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=v5-shared.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy92NS1zaGFyZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90cmFkaW5nLXN5c3RlbS8uL25vZGVfbW9kdWxlcy9ieWJpdC1hcGkvbGliL3R5cGVzL3Y1LXNoYXJlZC5qcz80MGIyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9djUtc2hhcmVkLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/v5-shared.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/websocket.events.js":
/*!**************************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/websocket.events.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=websocket.events.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy93ZWJzb2NrZXQuZXZlbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy93ZWJzb2NrZXQuZXZlbnRzLmpzP2M0YjgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD13ZWJzb2NrZXQuZXZlbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/websocket.events.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/types/websockets.js":
/*!********************************************************!*\
  !*** ./node_modules/bybit-api/lib/types/websockets.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=websockets.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy93ZWJzb2NrZXRzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi90eXBlcy93ZWJzb2NrZXRzLmpzPzA3MDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD13ZWJzb2NrZXRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/types/websockets.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/unified-margin-client.js":
/*!*************************************************************!*\
  !*** ./node_modules/bybit-api/lib/unified-margin-client.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.UnifiedMarginClient = void 0;\nconst util_1 = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/bybit-api/lib/util/index.js\");\nconst BaseRestClient_1 = __importDefault(__webpack_require__(/*! ./util/BaseRestClient */ \"(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js\"));\n/**\n * REST API client for Derivatives V3 unified margin APIs\n */\nclass UnifiedMarginClient extends BaseRestClient_1.default {\n    getClientType() {\n        return util_1.REST_CLIENT_TYPE_ENUM.v3;\n    }\n    fetchServerTime() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.getServerTime();\n            return Number(res.time_now);\n        });\n    }\n    /**\n     *\n     * Market Data Endpoints\n     *\n     */\n    /** Query order book info. Each side has a depth of 25 orders. */\n    getOrderBook(symbol, category, limit) {\n        return this.get('/derivatives/v3/public/order-book/L2', {\n            category,\n            symbol,\n            limit,\n        });\n    }\n    /** Get candles/klines */\n    getCandles(params) {\n        return this.get('/derivatives/v3/public/kline', params);\n    }\n    /** Get a symbol price/statistics ticker */\n    getSymbolTicker(category, symbol) {\n        return this.get('/derivatives/v3/public/tickers', { category, symbol });\n    }\n    /** Get trading rules per symbol/contract, incl price/amount/value/leverage filters */\n    getInstrumentInfo(params) {\n        return this.get('/derivatives/v3/public/instruments-info', params);\n    }\n    /** Query mark price kline (like getCandles() but for mark price). */\n    getMarkPriceCandles(params) {\n        return this.get('/derivatives/v3/public/mark-price-kline', params);\n    }\n    /** Query Index Price Kline */\n    getIndexPriceCandles(params) {\n        return this.get('/derivatives/v3/public/index-price-kline', params);\n    }\n    /**\n     * The funding rate is generated every 8 hours at 00:00 UTC, 08:00 UTC and 16:00 UTC.\n     * For example, if a request is sent at 12:00 UTC, the funding rate generated earlier that day at 08:00 UTC will be sent.\n     */\n    getFundingRateHistory(params) {\n        return this.get('/derivatives/v3/public/funding/history-funding-rate', params);\n    }\n    /** Get Risk Limit */\n    getRiskLimit(category, symbol) {\n        return this.get('/derivatives/v3/public/risk-limit/list', {\n            category,\n            symbol,\n        });\n    }\n    /** Get option delivery price */\n    getOptionDeliveryPrice(params) {\n        return this.get('/derivatives/v3/public/delivery-price', params);\n    }\n    /** Get recent trades */\n    getTrades(params) {\n        return this.get('/derivatives/v3/public/recent-trade', params);\n    }\n    /**\n     * Gets the total amount of unsettled contracts.\n     * In other words, the total number of contracts held in open positions.\n     */\n    getOpenInterest(params) {\n        return this.get('/derivatives/v3/public/open-interest', params);\n    }\n    /**\n     *\n     * Unified Margin Account Endpoints\n     *\n     */\n    /** -> Order API */\n    /** Place an order */\n    submitOrder(params) {\n        return this.postPrivate('/unified/v3/private/order/create', params);\n    }\n    /** Active order parameters (such as quantity, price) and stop order parameters cannot be modified in one request at the same time. Please request modification separately. */\n    modifyOrder(params) {\n        return this.postPrivate('/unified/v3/private/order/replace', params);\n    }\n    /** Cancel order */\n    cancelOrder(params) {\n        return this.postPrivate('/unified/v3/private/order/cancel', params);\n    }\n    /** Query Open Orders */\n    getActiveOrders(params) {\n        return this.getPrivate('/unified/v3/private/order/unfilled-orders', params);\n    }\n    /** Query order history. As order creation/cancellation is asynchronous, the data returned from the interface may be delayed. To access order information in real-time, call getActiveOrders() */\n    getHistoricOrders(params) {\n        return this.getPrivate('/unified/v3/private/order/list', params);\n    }\n    /**\n     * This API provides the batch order mode under the unified margin account.\n     * Max 10 per request\n     */\n    batchSubmitOrders(category, orders) {\n        return this.postPrivate('/unified/v3/private/order/create-batch', {\n            category,\n            request: orders,\n        });\n    }\n    /**\n     * This interface can modify the open order information in batches.\n     * Currently, it is not supported to modify the conditional order information.\n     * Please note that only unfilled or partial filled orders can be modified.\n     * If both futures and options orders are in one request, only the orders matching the category will be operated according to the category type\n     */\n    batchReplaceOrders(category, orders) {\n        return this.postPrivate('/unified/v3/private/order/replace-batch', {\n            category,\n            request: orders,\n        });\n    }\n    /**\n     * This API provides batch cancellation under the unified margin account.\n     * Order cancellation of futures and options cannot be canceled in one request at the same time.\n     * If both futures and options orders are in one request, only the orders matching the category will be operated according to the category type.\n     */\n    batchCancelOrders(category, orders) {\n        return this.postPrivate('/unified/v3/private/order/cancel-batch', {\n            category,\n            request: orders,\n        });\n    }\n    /**\n     * This API provides the cancellation of all open orders under the unified margin account.\n     * Order cancellation of futures and options cannot be canceled in one request at the same time.\n     * If both futures and options orders are in one request, only the orders matching the category will be operated according to the category type.\n     */\n    cancelAllOrders(params) {\n        return this.postPrivate('/unified/v3/private/order/cancel-all', params);\n    }\n    /** -> Positions API */\n    /**\n     * Query my positions real-time. Accessing personal list of positions.\n     * Users can access their position holding information through this interface, such as the number of position holdings and wallet balance.\n     */\n    getPositions(params) {\n        return this.getPrivate('/unified/v3/private/position/list', params);\n    }\n    /** Leverage setting. */\n    setLeverage(category, symbol, buyLeverage, sellLeverage) {\n        return this.postPrivate('/unified/v3/private/position/set-leverage', {\n            category,\n            symbol,\n            buyLeverage,\n            sellLeverage,\n        });\n    }\n    /**\n     * Switching the TP/SL mode to the cross margin mode or selected positions.\n     * When you set the TP/SL mode on the selected positions, the quantity of take-profit or stop-loss orders can be smaller than the position size. Please use Trading-Stop endpoint.\n     */\n    setTPSLMode(category, symbol, tpSlMode) {\n        return this.postPrivate('/unified/v3/private/position/tpsl/switch-mode', {\n            category,\n            symbol,\n            tpSlMode,\n        });\n    }\n    /** Set risk limit */\n    setRiskLimit(category, symbol, riskId, positionIdx) {\n        return this.postPrivate('/unified/v3/private/position/set-risk-limit', {\n            category,\n            symbol,\n            riskId,\n            positionIdx,\n        });\n    }\n    /**\n     * Set position TP/SL and trailing stop.\n     * Pass the following parameters, then the system will create conditional orders.\n     * If the position is closed, the system will cancel these orders, and adjust the position size.\n     */\n    setTPSL(params) {\n        return this.postPrivate('/unified/v3/private/position/trading-stop', params);\n    }\n    /**\n     * Access the user's filled history, ranked by time in descending order.\n     * There might be multiple filled histories for an order.\n     */\n    get7DayTradingHistory(params) {\n        return this.getPrivate('/unified/v3/private/execution/list', params);\n    }\n    /** Query the settlement history, ranked by time in descending order. */\n    getOptionsSettlementHistory(params) {\n        return this.getPrivate('/unified/v3/private/delivery-record', params);\n    }\n    /** Query session settlement records, only for USDC perpetual */\n    getUSDCPerpetualSettlementHistory(params) {\n        return this.getPrivate('/unified/v3/private/settlement-record', params);\n    }\n    /** -> Account API */\n    /** Query wallet balance */\n    getBalances(coin) {\n        return this.getPrivate('/unified/v3/private/account/wallet/balance', {\n            coin,\n        });\n    }\n    /**\n     * Upgrade to unified margin account.\n     * WARNING: This is currently not reversable!\n     */\n    upgradeToUnifiedMargin() {\n        return this.postPrivate('/unified/v3/private/account/upgrade-unified-account');\n    }\n    /** Query trading history */\n    getTransactionLog(params) {\n        return this.getPrivate('/unified/v3/private/account/transaction-log', params);\n    }\n    /** Fund transfer between accounts (v2) */\n    transferFunds(params) {\n        return this.postPrivate('/asset/v1/private/transfer', params);\n    }\n    /** Exchange Coins */\n    getCoinExchangeHistory(params) {\n        return this.getPrivate('/asset/v2/private/exchange/exchange-order-all', params);\n    }\n    /** Get Borrow History */\n    getBorrowHistory(params) {\n        return this.getPrivate('/unified/v3/private/account/borrow-history', params);\n    }\n    /** Get Borrow Rate */\n    getBorrowRate(currency) {\n        return this.getPrivate('/unified/v3/private/account/borrow-rate', {\n            currency,\n        });\n    }\n    /**\n     *\n     * API Data Endpoints\n     *\n     */\n    getServerTime() {\n        return this.get('/v2/public/time');\n    }\n    getAnnouncements() {\n        return this.get('/v2/public/announcement');\n    }\n}\nexports.UnifiedMarginClient = UnifiedMarginClient;\n//# sourceMappingURL=unified-margin-client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/unified-margin-client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/usdc-option-client.js":
/*!**********************************************************!*\
  !*** ./node_modules/bybit-api/lib/usdc-option-client.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.USDCOptionClient = void 0;\nconst util_1 = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/bybit-api/lib/util/index.js\");\nconst BaseRestClient_1 = __importDefault(__webpack_require__(/*! ./util/BaseRestClient */ \"(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js\"));\n/**\n * REST API client for USDC Option APIs\n *\n * @deprecated WARNING: V1/V2 private endpoints (Rest API & Websocket Stream) for mainnet\n * will be switched off gradually from 30 Oct 2023 UTC, so they are not promised a stability.\n * Please note that you are at your own risk of using old endpoints going forward, and please move to V5 ASAP.\n */\nclass USDCOptionClient extends BaseRestClient_1.default {\n    getClientType() {\n        return util_1.REST_CLIENT_TYPE_ENUM.v3;\n    }\n    fetchServerTime() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.getServerTime();\n            return Number(res.time_now);\n        });\n    }\n    /**\n     *\n     * Market Data Endpoints\n     *\n     */\n    /** Query order book info. Each side has a depth of 25 orders. */\n    getOrderBook(symbol) {\n        return this.get('/option/usdc/openapi/public/v1/order-book', { symbol });\n    }\n    /** Fetch trading rules (such as min/max qty). Query for all if blank. */\n    getContractInfo(params) {\n        return this.get('/option/usdc/openapi/public/v1/symbols', params);\n    }\n    /** Get a symbol price/statistics ticker */\n    getSymbolTicker(symbol) {\n        return this.get('/option/usdc/openapi/public/v1/tick', { symbol });\n    }\n    /** Get delivery information */\n    getDeliveryPrice(params) {\n        return this.get('/option/usdc/openapi/public/v1/delivery-price', params);\n    }\n    /** Returned records are Taker Buy in default. */\n    getLast500Trades(params) {\n        return this.get('/option/usdc/openapi/public/v1/query-trade-latest', params);\n    }\n    /**\n     * The data is in hourly.\n     * If time field is not passed, it returns the recent 1 hour data by default.\n     * It could be any timeframe by inputting startTime & endTime, but it must satisfy [endTime - startTime] <= 30 days.\n     * It returns all data in 2 years when startTime & endTime are not passed.\n     * Both startTime & endTime entered together or both are left blank\n     */\n    getHistoricalVolatility(params) {\n        return this.get('/option/usdc/openapi/public/v1/query-historical-volatility', params);\n    }\n    /**\n     *\n     * Account Data Endpoints\n     *\n     */\n    /** -> Order API */\n    /**\n     * Place an order using the USDC Derivatives Account.\n     * The request status can be queried in real-time.\n     * The response parameters must be queried through a query or a WebSocket response.\n     */\n    submitOrder(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/place-order', params);\n    }\n    /**\n     * Each request supports a max. of four orders. The reduceOnly parameter should be separate and unique for each order in the request.\n     */\n    batchSubmitOrders(orderRequest) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/batch-place-orders', { orderRequest });\n    }\n    /** For Options, at least one of the three parameters — price, quantity or implied volatility — must be input. */\n    modifyOrder(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/replace-order', params);\n    }\n    /** Each request supports a max. of four orders. The reduceOnly parameter should be separate and unique for each order in the request. */\n    batchModifyOrders(replaceOrderRequest) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/batch-replace-orders', { replaceOrderRequest });\n    }\n    /** Cancel order */\n    cancelOrder(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/cancel-order', params);\n    }\n    /** Batch cancel orders */\n    batchCancelOrders(cancelRequest) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/batch-cancel-orders', { cancelRequest });\n    }\n    /** This is used to cancel all active orders. The real-time response indicates whether the request is successful, depending on retCode. */\n    cancelActiveOrders(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/cancel-all', params);\n    }\n    /** Query Unfilled/Partially Filled Orders(real-time), up to last 7 days of partially filled/unfilled orders */\n    getActiveRealtimeOrders(params) {\n        return this.getPrivate('/option/usdc/openapi/private/v1/trade/query-active-orders', params);\n    }\n    /** Query Unfilled/Partially Filled Orders */\n    getActiveOrders(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-active-orders', params);\n    }\n    /** Query order history. The endpoint only supports up to 30 days of queried records */\n    getHistoricOrders(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-order-history', params);\n    }\n    /**\n     * Query trade history.\n     * The endpoint only supports up to 30 days of queried records.\n     * An error will be returned if startTime is more than 30 days.\n     */\n    getOrderExecutionHistory(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/execution-list', params);\n    }\n    /** -> Account API */\n    /** The endpoint only supports up to 30 days of queried records. An error will be returned if startTime is more than 30 days. */\n    getTransactionLog(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-transaction-log', params);\n    }\n    /** Wallet info for USDC account. */\n    getBalances() {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-wallet-balance');\n    }\n    /** Asset Info */\n    getAssetInfo(baseCoin) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-asset-info', { baseCoin });\n    }\n    /**\n     * If USDC derivatives account balance is greater than X, you can open PORTFOLIO_MARGIN,\n     * and if it is less than Y, it will automatically close PORTFOLIO_MARGIN and change back to REGULAR_MARGIN.\n     * X and Y will be adjusted according to operational requirements.\n     * Rest API returns the result of checking prerequisites. You could get the real status of margin mode change by subscribing margin mode.\n     */\n    setMarginMode(newMarginMode) {\n        return this.postPrivate('/option/usdc/private/asset/account/setMarginMode', { setMarginMode: newMarginMode });\n    }\n    /** Query margin mode for USDC account. */\n    getMarginMode() {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-margin-info');\n    }\n    /** -> Positions API */\n    /** Query my positions */\n    getPositions(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-position', params);\n    }\n    /** Query Delivery History */\n    getDeliveryHistory(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-delivery-list', params);\n    }\n    /** Query Positions Info Upon Expiry */\n    getPositionsInfoUponExpiry(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-position-exp-date', params);\n    }\n    /** -> Market Maker Protection */\n    /** modifyMMP */\n    modifyMMP(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/mmp-modify', params);\n    }\n    /** resetMMP */\n    resetMMP(currency) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/mmp-reset', {\n            currency,\n        });\n    }\n    /** queryMMPState */\n    queryMMPState(baseCoin) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/get-mmp-state', {\n            baseCoin,\n        });\n    }\n    /**\n     *\n     * API Data Endpoints\n     *\n     */\n    getServerTime() {\n        return this.get('/v2/public/time');\n    }\n}\nexports.USDCOptionClient = USDCOptionClient;\n//# sourceMappingURL=usdc-option-client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/usdc-option-client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/usdc-perpetual-client.js":
/*!*************************************************************!*\
  !*** ./node_modules/bybit-api/lib/usdc-perpetual-client.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.USDCPerpetualClient = void 0;\nconst util_1 = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/bybit-api/lib/util/index.js\");\nconst BaseRestClient_1 = __importDefault(__webpack_require__(/*! ./util/BaseRestClient */ \"(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js\"));\n/**\n * REST API client for USDC Perpetual APIs\n *\n * @deprecated WARNING: V1/V2 private endpoints (Rest API & Websocket Stream) for mainnet\n * will be switched off gradually from 30 Oct 2023 UTC, so they are not promised a stability.\n * Please note that you are at your own risk of using old endpoints going forward, and please move to V5 ASAP.\n */\nclass USDCPerpetualClient extends BaseRestClient_1.default {\n    getClientType() {\n        // Follows the same authentication mechanism as other v3 APIs (e.g. USDC)\n        return util_1.REST_CLIENT_TYPE_ENUM.v3;\n    }\n    fetchServerTime() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.getServerTime();\n            return Number(res.time_now);\n        });\n    }\n    /**\n     *\n     * Market Data Endpoints\n     *\n     */\n    getOrderBook(symbol) {\n        return this.get('/perpetual/usdc/openapi/public/v1/order-book', { symbol });\n    }\n    /** Fetch trading rules (such as min/max qty). Query for all if blank. */\n    getContractInfo(params) {\n        return this.get('/perpetual/usdc/openapi/public/v1/symbols', params);\n    }\n    /** Get a symbol price/statistics ticker */\n    getSymbolTicker(symbol) {\n        return this.get('/perpetual/usdc/openapi/public/v1/tick', { symbol });\n    }\n    getCandles(params) {\n        return this.get('/perpetual/usdc/openapi/public/v1/kline/list', params);\n    }\n    getMarkPrice(params) {\n        return this.get('/perpetual/usdc/openapi/public/v1/mark-price-kline', params);\n    }\n    getIndexPrice(params) {\n        return this.get('/perpetual/usdc/openapi/public/v1/index-price-kline', params);\n    }\n    getIndexPremium(params) {\n        return this.get('/perpetual/usdc/openapi/public/v1/premium-index-kline', params);\n    }\n    getOpenInterest(params) {\n        return this.get('/perpetual/usdc/openapi/public/v1/open-interest', params);\n    }\n    getLargeOrders(params) {\n        return this.get('/perpetual/usdc/openapi/public/v1/big-deal', params);\n    }\n    getLongShortRatio(params) {\n        return this.get('/perpetual/usdc/openapi/public/v1/account-ratio', params);\n    }\n    getLast500Trades(params) {\n        return this.get('/option/usdc/openapi/public/v1/query-trade-latest', params);\n    }\n    /**\n     *\n     * Account Data Endpoints\n     *\n     */\n    /** -> Order API */\n    /**\n     * Place an order using the USDC Derivatives Account.\n     * The request status can be queried in real-time.\n     * The response parameters must be queried through a query or a WebSocket response.\n     */\n    submitOrder(params) {\n        return this.postPrivate('/perpetual/usdc/openapi/private/v1/place-order', params);\n    }\n    /** Active order parameters (such as quantity, price) and stop order parameters cannot be modified in one request at the same time. Please request modification separately. */\n    modifyOrder(params) {\n        return this.postPrivate('/perpetual/usdc/openapi/private/v1/replace-order', params);\n    }\n    /** Cancel order */\n    cancelOrder(params) {\n        return this.postPrivate('/perpetual/usdc/openapi/private/v1/cancel-order', params);\n    }\n    /** Cancel all active orders. The real-time response indicates whether the request is successful, depending on retCode. */\n    cancelActiveOrders(symbol, orderFilter) {\n        return this.postPrivate('/perpetual/usdc/openapi/private/v1/cancel-all', {\n            symbol,\n            orderFilter,\n        });\n    }\n    /** Query Unfilled/Partially Filled Orders */\n    getActiveOrders(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-active-orders', params);\n    }\n    /** Query order history. The endpoint only supports up to 30 days of queried records */\n    getHistoricOrders(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-order-history', params);\n    }\n    /** Query trade history. The endpoint only supports up to 30 days of queried records. An error will be returned if startTime is more than 30 days. */\n    getOrderExecutionHistory(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/execution-list', params);\n    }\n    /** -> Account API */\n    /** The endpoint only supports up to 30 days of queried records. An error will be returned if startTime is more than 30 days. */\n    getTransactionLog(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-transaction-log', params);\n    }\n    /** Wallet info for USDC account. */\n    getBalances() {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-wallet-balance');\n    }\n    /** Asset Info */\n    getAssetInfo(baseCoin) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-asset-info', { baseCoin });\n    }\n    /**\n     * If USDC derivatives account balance is greater than X, you can open PORTFOLIO_MARGIN,\n     * and if it is less than Y, it will automatically close PORTFOLIO_MARGIN and change back to REGULAR_MARGIN.\n     * X and Y will be adjusted according to operational requirements.\n     * Rest API returns the result of checking prerequisites. You could get the real status of margin mode change by subscribing margin mode.\n     */\n    setMarginMode(newMarginMode) {\n        return this.postPrivate('/option/usdc/private/asset/account/setMarginMode', { setMarginMode: newMarginMode });\n    }\n    /** Query margin mode for USDC account. */\n    getMarginMode() {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-margin-info');\n    }\n    /** -> Positions API */\n    /** Query my positions */\n    getPositions(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/query-position', params);\n    }\n    /** Only for REGULAR_MARGIN */\n    setLeverage(symbol, leverage) {\n        return this.postPrivate('/perpetual/usdc/openapi/private/v1/position/leverage/save', { symbol, leverage });\n    }\n    /** Query Settlement History */\n    getSettlementHistory(params) {\n        return this.postPrivate('/option/usdc/openapi/private/v1/session-settlement', params);\n    }\n    /** -> Risk Limit API */\n    /** Query risk limit */\n    getRiskLimit(symbol) {\n        return this.getPrivate('/perpetual/usdc/openapi/public/v1/risk-limit/list', {\n            symbol,\n        });\n    }\n    /** Set risk limit */\n    setRiskLimit(symbol, riskId) {\n        return this.postPrivate('/perpetual/usdc/openapi/private/v1/position/set-risk-limit', { symbol, riskId });\n    }\n    /** -> Funding API */\n    /** Funding settlement occurs every 8 hours at 00:00 UTC, 08:00 UTC and 16:00 UTC. The current interval's fund fee settlement is based on the previous interval's fund rate. For example, at 16:00, the settlement is based on the fund rate generated at 8:00. The fund rate generated at 16:00 will be used at 0:00 the next day. */\n    getLastFundingRate(symbol) {\n        return this.get('/perpetual/usdc/openapi/public/v1/prev-funding-rate', {\n            symbol,\n        });\n    }\n    /** Get predicted funding rate and my predicted funding fee */\n    getPredictedFundingRate(symbol) {\n        return this.postPrivate('/perpetual/usdc/openapi/private/v1/predicted-funding', { symbol });\n    }\n    /**\n     *\n     * API Data Endpoints\n     *\n     */\n    getServerTime() {\n        return this.get('/v2/public/time');\n    }\n}\nexports.USDCPerpetualClient = USDCPerpetualClient;\n//# sourceMappingURL=usdc-perpetual-client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/usdc-perpetual-client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js":
/*!***********************************************************!*\
  !*** ./node_modules/bybit-api/lib/util/BaseRestClient.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst axios_1 = __importDefault(__webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/dist/node/axios.cjs\"));\nconst requestUtils_1 = __webpack_require__(/*! ./requestUtils */ \"(rsc)/./node_modules/bybit-api/lib/util/requestUtils.js\");\nconst node_support_1 = __webpack_require__(/*! ./node-support */ \"(rsc)/./node_modules/bybit-api/lib/util/node-support.js\");\nconst ENABLE_HTTP_TRACE = typeof process === 'object' &&\n    typeof process.env === 'object' &&\n    process.env.BYBITTRACE;\nif (ENABLE_HTTP_TRACE) {\n    // axios.interceptors.request.use((request) => {\n    //   console.log(\n    //     new Date(),\n    //     'Starting Request',\n    //     JSON.stringify(request, null, 2)\n    //   );\n    //   return request;\n    // });\n    axios_1.default.interceptors.response.use((response) => {\n        console.log(new Date(), 'Response:', {\n            request: {\n                url: response.config.url,\n                method: response.config.method,\n                data: response.config.data,\n                headers: response.config.headers,\n                params: response.config.params,\n            },\n            response: {\n                status: response.status,\n                statusText: response.statusText,\n                headers: response.headers,\n                data: response.data,\n            },\n        });\n        return response;\n    });\n}\nclass BaseRestClient {\n    /**\n     * Create an instance of the REST client. Pass API credentials in the object in the first parameter.\n     * @param {RestClientOptions} [restOptions={}] options to configure REST API connectivity\n     * @param {AxiosRequestConfig} [networkOptions={}] HTTP networking options for axios\n     */\n    constructor(restOptions = {}, networkOptions = {}) {\n        this.timeOffset = null;\n        this.syncTimePromise = null;\n        this.clientType = this.getClientType();\n        this.options = Object.assign({ recv_window: 5000, \n            /** Throw errors if any request params are empty */\n            strict_param_validation: false, \n            /** Disable time sync by default */\n            enable_time_sync: false, \n            /** How often to sync time drift with bybit servers (if time sync is enabled) */\n            sync_interval_ms: 3600000, \n            /** Determines whether to perform time synchronization before sending private requests */\n            syncTimeBeforePrivateRequests: false, \n            /** Request parameter values are now URI encoded by default during signing. Set to false to override this behaviour. */\n            encodeSerialisedValues: true }, restOptions);\n        this.globalRequestOptions = Object.assign(Object.assign({ \n            // in ms == 5 minutes by default\n            timeout: 1000 * 60 * 5 }, networkOptions), { headers: Object.assign(Object.assign({}, networkOptions.headers), { 'x-referer': requestUtils_1.APIID }) });\n        this.baseUrl = (0, requestUtils_1.getRestBaseUrl)(!!this.options.testnet, restOptions);\n        this.key = this.options.key;\n        this.secret = this.options.secret;\n        if (this.key && !this.secret) {\n            throw new Error('API Key & Secret are both required for private endpoints');\n        }\n        if (this.options.enable_time_sync) {\n            this.syncTime();\n            setInterval(this.syncTime.bind(this), +this.options.sync_interval_ms);\n        }\n    }\n    isSpotV1Client() {\n        return this.clientType === requestUtils_1.REST_CLIENT_TYPE_ENUM.spot;\n    }\n    get(endpoint, params) {\n        return this._call('GET', endpoint, params, true);\n    }\n    getPrivate(endpoint, params) {\n        return this._call('GET', endpoint, params, false);\n    }\n    post(endpoint, params) {\n        return this._call('POST', endpoint, params, true);\n    }\n    postPrivate(endpoint, params) {\n        return this._call('POST', endpoint, params, false);\n    }\n    deletePrivate(endpoint, params) {\n        return this._call('DELETE', endpoint, params, false);\n    }\n    prepareSignParams(method, signMethod, params, isPublicApi) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isPublicApi) {\n                return {\n                    originalParams: params,\n                    paramsWithSign: params,\n                };\n            }\n            if (!this.key || !this.secret) {\n                throw new Error('Private endpoints require api and private keys set');\n            }\n            if (this.timeOffset === null) {\n                yield this.syncTime();\n            }\n            if (this.options.syncTimeBeforePrivateRequests) {\n                this.timeOffset = yield this.fetchTimeOffset();\n            }\n            return this.signRequest(params || {}, method, signMethod);\n        });\n    }\n    /** Returns an axios request object. Handles signing process automatically if this is a private API call */\n    buildRequest(method, url, params, isPublicApi) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = Object.assign(Object.assign({}, this.globalRequestOptions), { url: url, method: method });\n            for (const key in params) {\n                if (typeof params[key] === 'undefined') {\n                    delete params[key];\n                }\n            }\n            if (isPublicApi) {\n                return Object.assign(Object.assign({}, options), { params: params });\n            }\n            // USDC endpoints, unified margin and a few others use a different way of authenticating requests (headers instead of params)\n            if (this.clientType === requestUtils_1.REST_CLIENT_TYPE_ENUM.v3) {\n                const signResult = yield this.prepareSignParams(method, 'v5auth', params, isPublicApi);\n                const headers = Object.assign({ 'X-BAPI-SIGN-TYPE': 2, 'X-BAPI-API-KEY': this.key, 'X-BAPI-TIMESTAMP': signResult.timestamp, 'X-BAPI-SIGN': signResult.sign, 'X-BAPI-RECV-WINDOW': signResult.recvWindow }, options.headers);\n                if (method === 'GET') {\n                    return Object.assign(Object.assign({}, options), { headers, params: signResult.originalParams });\n                }\n                return Object.assign(Object.assign({}, options), { headers, data: signResult.originalParams });\n            }\n            const signResult = yield this.prepareSignParams(method, 'v2auth', params, isPublicApi);\n            if (method === 'GET' || this.isSpotV1Client()) {\n                return Object.assign(Object.assign({}, options), { params: signResult.paramsWithSign });\n            }\n            return Object.assign(Object.assign({}, options), { data: signResult.paramsWithSign });\n        });\n    }\n    /**\n     * @private Make a HTTP request to a specific endpoint. Private endpoints are automatically signed.\n     */\n    _call(method, endpoint, params, isPublicApi) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Sanity check to make sure it's only ever prefixed by one forward slash\n            const requestUrl = [this.baseUrl, endpoint].join(endpoint.startsWith('/') ? '' : '/');\n            // Build a request and handle signature process\n            const options = yield this.buildRequest(method, requestUrl, params, isPublicApi);\n            if (ENABLE_HTTP_TRACE) {\n                console.log('full request: ', options);\n            }\n            // Dispatch request\n            return (0, axios_1.default)(options)\n                .then((response) => {\n                if (response.status == 200) {\n                    const perAPIRateLimits = this.options.parseAPIRateLimits\n                        ? (0, requestUtils_1.parseRateLimitHeaders)(response.headers, this.options.throwOnFailedRateLimitParse === true)\n                        : undefined;\n                    return Object.assign({ rateLimitApi: perAPIRateLimits }, response.data);\n                }\n                throw response;\n            })\n                .catch((e) => this.parseException(e));\n        });\n    }\n    /**\n     * @private generic handler to parse request exceptions\n     */\n    parseException(e) {\n        if (this.options.parse_exceptions === false) {\n            throw e;\n        }\n        // Something happened in setting up the request that triggered an Error\n        if (!e.response) {\n            if (!e.request) {\n                throw e.message;\n            }\n            // request made but no response received\n            throw e;\n        }\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        const response = e.response;\n        throw {\n            code: response.status,\n            message: response.statusText,\n            body: response.data,\n            headers: response.headers,\n            requestOptions: this.options,\n        };\n    }\n    /**\n     * @private sign request and set recv window\n     */\n    signRequest(data, method, signMethod) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const timestamp = Date.now() + (this.timeOffset || 0);\n            const res = {\n                originalParams: Object.assign({}, data),\n                sign: '',\n                timestamp,\n                recvWindow: 0,\n                serializedParams: '',\n            };\n            if (!this.key || !this.secret) {\n                return res;\n            }\n            const key = this.key;\n            const recvWindow = res.originalParams.recv_window || this.options.recv_window || 5000;\n            const strictParamValidation = this.options.strict_param_validation;\n            const encodeSerialisedValues = this.options.encodeSerialisedValues;\n            // In case the parent function needs it (e.g. USDC uses a header)\n            res.recvWindow = recvWindow;\n            // usdc is different for some reason\n            if (signMethod === 'v5auth') {\n                const sortProperties = false;\n                const signRequestParams = method === 'GET'\n                    ? (0, requestUtils_1.serializeParams)(res.originalParams, strictParamValidation, sortProperties, encodeSerialisedValues)\n                    : JSON.stringify(res.originalParams);\n                const paramsStr = timestamp + key + recvWindow + signRequestParams;\n                res.sign = yield (0, node_support_1.signMessage)(paramsStr, this.secret);\n                res.serializedParams = signRequestParams;\n                // console.log('sign req: ', {\n                //   req: paramsStr,\n                //   sign: res.sign,\n                // });\n                return res;\n            }\n            // spot/v2 derivatives\n            if (signMethod === 'v2auth') {\n                res.originalParams.api_key = key;\n                res.originalParams.timestamp = timestamp;\n                // Optional, set to 5000 by default. Increase if timestamp/recv_window errors are seen.\n                if (recvWindow) {\n                    if (this.isSpotV1Client()) {\n                        res.originalParams.recvWindow = recvWindow;\n                    }\n                    else {\n                        res.originalParams.recv_window = recvWindow;\n                    }\n                }\n                const sortProperties = true;\n                const encodeValues = false;\n                res.serializedParams = (0, requestUtils_1.serializeParams)(res.originalParams, strictParamValidation, sortProperties, encodeValues);\n                res.sign = yield (0, node_support_1.signMessage)(res.serializedParams, this.secret);\n                // @ts-ignore\n                res.paramsWithSign = Object.assign(Object.assign({}, res.originalParams), { sign: res.sign });\n                return res;\n            }\n            return res;\n        });\n    }\n    /**\n     * Trigger time sync and store promise. Use force: true, if automatic time sync is disabled\n     */\n    syncTime(force) {\n        if (!force && !this.options.enable_time_sync) {\n            this.timeOffset = 0;\n            return Promise.resolve(false);\n        }\n        if (this.syncTimePromise !== null) {\n            return this.syncTimePromise;\n        }\n        this.syncTimePromise = this.fetchTimeOffset().then((offset) => {\n            this.timeOffset = offset;\n            this.syncTimePromise = null;\n        });\n        return this.syncTimePromise;\n    }\n    /**\n     * Estimate drift based on client<->server latency\n     */\n    fetchTimeOffset() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const start = Date.now();\n                const serverTime = yield this.fetchServerTime();\n                if (!serverTime || isNaN(serverTime)) {\n                    throw new Error(`fetchServerTime() returned non-number: \"${serverTime}\" typeof(${typeof serverTime})`);\n                }\n                const end = Date.now();\n                const severTimeMs = serverTime * 1000;\n                const avgDrift = (end - start) / 2;\n                return Math.ceil(severTimeMs - end + avgDrift);\n            }\n            catch (e) {\n                console.error('Failed to fetch get time offset: ', e);\n                return 0;\n            }\n        });\n    }\n}\nexports[\"default\"] = BaseRestClient;\n//# sourceMappingURL=BaseRestClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/util/WsStore.js":
/*!****************************************************!*\
  !*** ./node_modules/bybit-api/lib/util/WsStore.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WsConnectionStateEnum = void 0;\nconst logger_1 = __webpack_require__(/*! ./logger */ \"(rsc)/./node_modules/bybit-api/lib/util/logger.js\");\nvar WsConnectionStateEnum;\n(function (WsConnectionStateEnum) {\n    WsConnectionStateEnum[WsConnectionStateEnum[\"INITIAL\"] = 0] = \"INITIAL\";\n    WsConnectionStateEnum[WsConnectionStateEnum[\"CONNECTING\"] = 1] = \"CONNECTING\";\n    WsConnectionStateEnum[WsConnectionStateEnum[\"CONNECTED\"] = 2] = \"CONNECTED\";\n    WsConnectionStateEnum[WsConnectionStateEnum[\"CLOSING\"] = 3] = \"CLOSING\";\n    WsConnectionStateEnum[WsConnectionStateEnum[\"RECONNECTING\"] = 4] = \"RECONNECTING\";\n    // ERROR = 5,\n})(WsConnectionStateEnum || (exports.WsConnectionStateEnum = WsConnectionStateEnum = {}));\nclass WsStore {\n    constructor(logger) {\n        this.logger = logger || logger_1.DefaultLogger;\n        this.wsState = {};\n    }\n    get(key, createIfMissing) {\n        if (this.wsState[key]) {\n            return this.wsState[key];\n        }\n        if (createIfMissing) {\n            return this.create(key);\n        }\n    }\n    getKeys() {\n        return Object.keys(this.wsState);\n    }\n    create(key) {\n        if (this.hasExistingActiveConnection(key)) {\n            this.logger.warning('WsStore setConnection() overwriting existing open connection: ', this.getWs(key));\n        }\n        this.wsState[key] = {\n            subscribedTopics: new Set(),\n            connectionState: WsConnectionStateEnum.INITIAL,\n        };\n        return this.get(key);\n    }\n    delete(key) {\n        if (this.hasExistingActiveConnection(key)) {\n            const ws = this.getWs(key);\n            this.logger.warning('WsStore deleting state for connection still open: ', ws);\n            ws === null || ws === void 0 ? void 0 : ws.close();\n        }\n        delete this.wsState[key];\n    }\n    /* connection websocket */\n    hasExistingActiveConnection(key) {\n        return this.get(key) && this.isWsOpen(key);\n    }\n    getWs(key) {\n        var _a;\n        return (_a = this.get(key)) === null || _a === void 0 ? void 0 : _a.ws;\n    }\n    setWs(key, wsConnection) {\n        if (this.isWsOpen(key)) {\n            this.logger.warning('WsStore setConnection() overwriting existing open connection: ', this.getWs(key));\n        }\n        this.get(key, true).ws = wsConnection;\n        return wsConnection;\n    }\n    /* connection state */\n    isWsOpen(key) {\n        const existingConnection = this.getWs(key);\n        return (!!existingConnection &&\n            existingConnection.readyState === existingConnection.OPEN);\n    }\n    getConnectionState(key) {\n        return this.get(key, true).connectionState;\n    }\n    setConnectionState(key, state) {\n        this.get(key, true).connectionState = state;\n    }\n    isConnectionState(key, state) {\n        return this.getConnectionState(key) === state;\n    }\n    /* subscribed topics */\n    getTopics(key) {\n        return this.get(key, true).subscribedTopics;\n    }\n    getTopicsByKey() {\n        const result = {};\n        for (const refKey in this.wsState) {\n            result[refKey] = this.getTopics(refKey);\n        }\n        return result;\n    }\n    addTopic(key, topic) {\n        return this.getTopics(key).add(topic);\n    }\n    deleteTopic(key, topic) {\n        return this.getTopics(key).delete(topic);\n    }\n}\nexports[\"default\"] = WsStore;\n//# sourceMappingURL=WsStore.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi91dGlsL1dzU3RvcmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCO0FBQzdCLGlCQUFpQixtQkFBTyxDQUFDLG1FQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRCQUE0Qiw2QkFBNkIsNkJBQTZCO0FBQ3ZGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWRpbmctc3lzdGVtLy4vbm9kZV9tb2R1bGVzL2J5Yml0LWFwaS9saWIvdXRpbC9Xc1N0b3JlLmpzPzQ3MmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLldzQ29ubmVjdGlvblN0YXRlRW51bSA9IHZvaWQgMDtcbmNvbnN0IGxvZ2dlcl8xID0gcmVxdWlyZShcIi4vbG9nZ2VyXCIpO1xudmFyIFdzQ29ubmVjdGlvblN0YXRlRW51bTtcbihmdW5jdGlvbiAoV3NDb25uZWN0aW9uU3RhdGVFbnVtKSB7XG4gICAgV3NDb25uZWN0aW9uU3RhdGVFbnVtW1dzQ29ubmVjdGlvblN0YXRlRW51bVtcIklOSVRJQUxcIl0gPSAwXSA9IFwiSU5JVElBTFwiO1xuICAgIFdzQ29ubmVjdGlvblN0YXRlRW51bVtXc0Nvbm5lY3Rpb25TdGF0ZUVudW1bXCJDT05ORUNUSU5HXCJdID0gMV0gPSBcIkNPTk5FQ1RJTkdcIjtcbiAgICBXc0Nvbm5lY3Rpb25TdGF0ZUVudW1bV3NDb25uZWN0aW9uU3RhdGVFbnVtW1wiQ09OTkVDVEVEXCJdID0gMl0gPSBcIkNPTk5FQ1RFRFwiO1xuICAgIFdzQ29ubmVjdGlvblN0YXRlRW51bVtXc0Nvbm5lY3Rpb25TdGF0ZUVudW1bXCJDTE9TSU5HXCJdID0gM10gPSBcIkNMT1NJTkdcIjtcbiAgICBXc0Nvbm5lY3Rpb25TdGF0ZUVudW1bV3NDb25uZWN0aW9uU3RhdGVFbnVtW1wiUkVDT05ORUNUSU5HXCJdID0gNF0gPSBcIlJFQ09OTkVDVElOR1wiO1xuICAgIC8vIEVSUk9SID0gNSxcbn0pKFdzQ29ubmVjdGlvblN0YXRlRW51bSB8fCAoZXhwb3J0cy5Xc0Nvbm5lY3Rpb25TdGF0ZUVudW0gPSBXc0Nvbm5lY3Rpb25TdGF0ZUVudW0gPSB7fSkpO1xuY2xhc3MgV3NTdG9yZSB7XG4gICAgY29uc3RydWN0b3IobG9nZ2VyKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyID0gbG9nZ2VyIHx8IGxvZ2dlcl8xLkRlZmF1bHRMb2dnZXI7XG4gICAgICAgIHRoaXMud3NTdGF0ZSA9IHt9O1xuICAgIH1cbiAgICBnZXQoa2V5LCBjcmVhdGVJZk1pc3NpbmcpIHtcbiAgICAgICAgaWYgKHRoaXMud3NTdGF0ZVtrZXldKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy53c1N0YXRlW2tleV07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNyZWF0ZUlmTWlzc2luZykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlKGtleSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZ2V0S2V5cygpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMud3NTdGF0ZSk7XG4gICAgfVxuICAgIGNyZWF0ZShrZXkpIHtcbiAgICAgICAgaWYgKHRoaXMuaGFzRXhpc3RpbmdBY3RpdmVDb25uZWN0aW9uKGtleSkpIHtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLndhcm5pbmcoJ1dzU3RvcmUgc2V0Q29ubmVjdGlvbigpIG92ZXJ3cml0aW5nIGV4aXN0aW5nIG9wZW4gY29ubmVjdGlvbjogJywgdGhpcy5nZXRXcyhrZXkpKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLndzU3RhdGVba2V5XSA9IHtcbiAgICAgICAgICAgIHN1YnNjcmliZWRUb3BpY3M6IG5ldyBTZXQoKSxcbiAgICAgICAgICAgIGNvbm5lY3Rpb25TdGF0ZTogV3NDb25uZWN0aW9uU3RhdGVFbnVtLklOSVRJQUwsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiB0aGlzLmdldChrZXkpO1xuICAgIH1cbiAgICBkZWxldGUoa2V5KSB7XG4gICAgICAgIGlmICh0aGlzLmhhc0V4aXN0aW5nQWN0aXZlQ29ubmVjdGlvbihrZXkpKSB7XG4gICAgICAgICAgICBjb25zdCB3cyA9IHRoaXMuZ2V0V3Moa2V5KTtcbiAgICAgICAgICAgIHRoaXMubG9nZ2VyLndhcm5pbmcoJ1dzU3RvcmUgZGVsZXRpbmcgc3RhdGUgZm9yIGNvbm5lY3Rpb24gc3RpbGwgb3BlbjogJywgd3MpO1xuICAgICAgICAgICAgd3MgPT09IG51bGwgfHwgd3MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHdzLmNsb3NlKCk7XG4gICAgICAgIH1cbiAgICAgICAgZGVsZXRlIHRoaXMud3NTdGF0ZVtrZXldO1xuICAgIH1cbiAgICAvKiBjb25uZWN0aW9uIHdlYnNvY2tldCAqL1xuICAgIGhhc0V4aXN0aW5nQWN0aXZlQ29ubmVjdGlvbihrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KGtleSkgJiYgdGhpcy5pc1dzT3BlbihrZXkpO1xuICAgIH1cbiAgICBnZXRXcyhrZXkpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICByZXR1cm4gKF9hID0gdGhpcy5nZXQoa2V5KSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLndzO1xuICAgIH1cbiAgICBzZXRXcyhrZXksIHdzQ29ubmVjdGlvbikge1xuICAgICAgICBpZiAodGhpcy5pc1dzT3BlbihrZXkpKSB7XG4gICAgICAgICAgICB0aGlzLmxvZ2dlci53YXJuaW5nKCdXc1N0b3JlIHNldENvbm5lY3Rpb24oKSBvdmVyd3JpdGluZyBleGlzdGluZyBvcGVuIGNvbm5lY3Rpb246ICcsIHRoaXMuZ2V0V3Moa2V5KSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5nZXQoa2V5LCB0cnVlKS53cyA9IHdzQ29ubmVjdGlvbjtcbiAgICAgICAgcmV0dXJuIHdzQ29ubmVjdGlvbjtcbiAgICB9XG4gICAgLyogY29ubmVjdGlvbiBzdGF0ZSAqL1xuICAgIGlzV3NPcGVuKGtleSkge1xuICAgICAgICBjb25zdCBleGlzdGluZ0Nvbm5lY3Rpb24gPSB0aGlzLmdldFdzKGtleSk7XG4gICAgICAgIHJldHVybiAoISFleGlzdGluZ0Nvbm5lY3Rpb24gJiZcbiAgICAgICAgICAgIGV4aXN0aW5nQ29ubmVjdGlvbi5yZWFkeVN0YXRlID09PSBleGlzdGluZ0Nvbm5lY3Rpb24uT1BFTik7XG4gICAgfVxuICAgIGdldENvbm5lY3Rpb25TdGF0ZShrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0KGtleSwgdHJ1ZSkuY29ubmVjdGlvblN0YXRlO1xuICAgIH1cbiAgICBzZXRDb25uZWN0aW9uU3RhdGUoa2V5LCBzdGF0ZSkge1xuICAgICAgICB0aGlzLmdldChrZXksIHRydWUpLmNvbm5lY3Rpb25TdGF0ZSA9IHN0YXRlO1xuICAgIH1cbiAgICBpc0Nvbm5lY3Rpb25TdGF0ZShrZXksIHN0YXRlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldENvbm5lY3Rpb25TdGF0ZShrZXkpID09PSBzdGF0ZTtcbiAgICB9XG4gICAgLyogc3Vic2NyaWJlZCB0b3BpY3MgKi9cbiAgICBnZXRUb3BpY3Moa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldChrZXksIHRydWUpLnN1YnNjcmliZWRUb3BpY3M7XG4gICAgfVxuICAgIGdldFRvcGljc0J5S2V5KCkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCByZWZLZXkgaW4gdGhpcy53c1N0YXRlKSB7XG4gICAgICAgICAgICByZXN1bHRbcmVmS2V5XSA9IHRoaXMuZ2V0VG9waWNzKHJlZktleSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgYWRkVG9waWMoa2V5LCB0b3BpYykge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRUb3BpY3Moa2V5KS5hZGQodG9waWMpO1xuICAgIH1cbiAgICBkZWxldGVUb3BpYyhrZXksIHRvcGljKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldFRvcGljcyhrZXkpLmRlbGV0ZSh0b3BpYyk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gV3NTdG9yZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVdzU3RvcmUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/util/WsStore.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/util/index.js":
/*!**************************************************!*\
  !*** ./node_modules/bybit-api/lib/util/index.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./BaseRestClient */ \"(rsc)/./node_modules/bybit-api/lib/util/BaseRestClient.js\"), exports);\n__exportStar(__webpack_require__(/*! ./logger */ \"(rsc)/./node_modules/bybit-api/lib/util/logger.js\"), exports);\n__exportStar(__webpack_require__(/*! ./requestUtils */ \"(rsc)/./node_modules/bybit-api/lib/util/requestUtils.js\"), exports);\n__exportStar(__webpack_require__(/*! ./typeGuards */ \"(rsc)/./node_modules/bybit-api/lib/util/typeGuards.js\"), exports);\n__exportStar(__webpack_require__(/*! ./websocket-util */ \"(rsc)/./node_modules/bybit-api/lib/util/websocket-util.js\"), exports);\n__exportStar(__webpack_require__(/*! ./WsStore */ \"(rsc)/./node_modules/bybit-api/lib/util/WsStore.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi91dGlsL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyxtRkFBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLG1FQUFVO0FBQy9CLGFBQWEsbUJBQU8sQ0FBQywrRUFBZ0I7QUFDckMsYUFBYSxtQkFBTyxDQUFDLDJFQUFjO0FBQ25DLGFBQWEsbUJBQU8sQ0FBQyxtRkFBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLHFFQUFXO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi91dGlsL2luZGV4LmpzPzczNGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9CYXNlUmVzdENsaWVudFwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vbG9nZ2VyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9yZXF1ZXN0VXRpbHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVHdWFyZHNcIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3dlYnNvY2tldC11dGlsXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9Xc1N0b3JlXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/util/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/util/logger.js":
/*!***************************************************!*\
  !*** ./node_modules/bybit-api/lib/util/logger.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DefaultLogger = void 0;\nexports.DefaultLogger = {\n    /** Ping/pong events and other raw messages that might be noisy */\n    silly: (...params) => {\n        // console.log(params);\n    },\n    debug: (...params) => {\n        console.log(params);\n    },\n    notice: (...params) => {\n        console.log(params);\n    },\n    info: (...params) => {\n        console.info(params);\n    },\n    warning: (...params) => {\n        console.error(params);\n    },\n    error: (...params) => {\n        console.error(params);\n    },\n};\n//# sourceMappingURL=logger.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi91dGlsL2xvZ2dlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYWRpbmctc3lzdGVtLy4vbm9kZV9tb2R1bGVzL2J5Yml0LWFwaS9saWIvdXRpbC9sb2dnZXIuanM/YjExNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRGVmYXVsdExvZ2dlciA9IHZvaWQgMDtcbmV4cG9ydHMuRGVmYXVsdExvZ2dlciA9IHtcbiAgICAvKiogUGluZy9wb25nIGV2ZW50cyBhbmQgb3RoZXIgcmF3IG1lc3NhZ2VzIHRoYXQgbWlnaHQgYmUgbm9pc3kgKi9cbiAgICBzaWxseTogKC4uLnBhcmFtcykgPT4ge1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhwYXJhbXMpO1xuICAgIH0sXG4gICAgZGVidWc6ICguLi5wYXJhbXMpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2cocGFyYW1zKTtcbiAgICB9LFxuICAgIG5vdGljZTogKC4uLnBhcmFtcykgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhwYXJhbXMpO1xuICAgIH0sXG4gICAgaW5mbzogKC4uLnBhcmFtcykgPT4ge1xuICAgICAgICBjb25zb2xlLmluZm8ocGFyYW1zKTtcbiAgICB9LFxuICAgIHdhcm5pbmc6ICguLi5wYXJhbXMpID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcihwYXJhbXMpO1xuICAgIH0sXG4gICAgZXJyb3I6ICguLi5wYXJhbXMpID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcihwYXJhbXMpO1xuICAgIH0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nZ2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/util/logger.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/util/node-support.js":
/*!*********************************************************!*\
  !*** ./node_modules/bybit-api/lib/util/node-support.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.signMessage = void 0;\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\n/** This is async because the browser version uses a promise (browser-support) */\nfunction signMessage(message, secret) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return (0, crypto_1.createHmac)('sha256', secret).update(message).digest('hex');\n    });\n}\nexports.signMessage = signMessage;\n//# sourceMappingURL=node-support.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi91dGlsL25vZGUtc3VwcG9ydC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLGlCQUFpQixtQkFBTyxDQUFDLHNCQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi91dGlsL25vZGUtc3VwcG9ydC5qcz9jMmJlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNpZ25NZXNzYWdlID0gdm9pZCAwO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuLyoqIFRoaXMgaXMgYXN5bmMgYmVjYXVzZSB0aGUgYnJvd3NlciB2ZXJzaW9uIHVzZXMgYSBwcm9taXNlIChicm93c2VyLXN1cHBvcnQpICovXG5mdW5jdGlvbiBzaWduTWVzc2FnZShtZXNzYWdlLCBzZWNyZXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICByZXR1cm4gKDAsIGNyeXB0b18xLmNyZWF0ZUhtYWMpKCdzaGEyNTYnLCBzZWNyZXQpLnVwZGF0ZShtZXNzYWdlKS5kaWdlc3QoJ2hleCcpO1xuICAgIH0pO1xufVxuZXhwb3J0cy5zaWduTWVzc2FnZSA9IHNpZ25NZXNzYWdlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZS1zdXBwb3J0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/util/node-support.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/util/requestUtils.js":
/*!*********************************************************!*\
  !*** ./node_modules/bybit-api/lib/util/requestUtils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseRateLimitHeaders = exports.REST_CLIENT_TYPE_ENUM = exports.APIID = exports.isTopicSubscriptionSuccess = exports.isTopicSubscriptionConfirmation = exports.isWsPong = exports.getRestBaseUrl = exports.serializeParams = void 0;\n/**\n * Serialise a (flat) object into a query string\n * @param params the object to serialise\n * @param strict_validation throw if any properties are undefined\n * @param sortProperties sort properties alphabetically before building a query string\n * @param encodeSerialisedValues URL encode value before serialising\n * @returns the params object as a serialised string key1=value1&key2=value2&etc\n */\nfunction serializeParams(params = {}, strict_validation = false, sortProperties = true, encodeSerialisedValues = true) {\n    const properties = sortProperties\n        ? Object.keys(params).sort()\n        : Object.keys(params);\n    return properties\n        .map((key) => {\n        const value = encodeSerialisedValues\n            ? encodeURIComponent(params[key])\n            : params[key];\n        if (strict_validation === true && typeof value === 'undefined') {\n            throw new Error('Failed to sign API request due to undefined parameter');\n        }\n        return `${key}=${value}`;\n    })\n        .join('&');\n}\nexports.serializeParams = serializeParams;\nfunction getRestBaseUrl(useTestnet, restClientOptions) {\n    const exchangeBaseUrls = {\n        livenet: 'https://api.bybit.com',\n        testnet: 'https://api-testnet.bybit.com',\n        demoLivenet: 'https://api-demo.bybit.com',\n    };\n    if (restClientOptions.baseUrl) {\n        return restClientOptions.baseUrl;\n    }\n    if (restClientOptions.demoTrading) {\n        return exchangeBaseUrls.demoLivenet;\n    }\n    if (useTestnet) {\n        return exchangeBaseUrls.testnet;\n    }\n    return exchangeBaseUrls.livenet;\n}\nexports.getRestBaseUrl = getRestBaseUrl;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isWsPong(msg) {\n    if (!msg) {\n        return false;\n    }\n    if (msg.pong || msg.ping) {\n        return true;\n    }\n    if (msg['op'] === 'pong') {\n        return true;\n    }\n    if (msg['ret_msg'] === 'pong') {\n        return true;\n    }\n    return (msg.request &&\n        msg.request.op === 'ping' &&\n        msg.ret_msg === 'pong' &&\n        msg.success === true);\n}\nexports.isWsPong = isWsPong;\nfunction isTopicSubscriptionConfirmation(msg) {\n    if (typeof msg !== 'object') {\n        return false;\n    }\n    if (!msg) {\n        return false;\n    }\n    if (typeof msg['op'] !== 'string') {\n        return false;\n    }\n    if (msg['op'] !== 'subscribe') {\n        return false;\n    }\n    return true;\n}\nexports.isTopicSubscriptionConfirmation = isTopicSubscriptionConfirmation;\nfunction isTopicSubscriptionSuccess(msg) {\n    if (!isTopicSubscriptionConfirmation(msg))\n        return false;\n    return msg.success === true;\n}\nexports.isTopicSubscriptionSuccess = isTopicSubscriptionSuccess;\nexports.APIID = 'bybitapinode';\n/**\n * Used to switch how authentication/requests work under the hood (primarily for SPOT since it's different there)\n */\nexports.REST_CLIENT_TYPE_ENUM = {\n    accountAsset: 'accountAsset',\n    inverse: 'inverse',\n    inverseFutures: 'inverseFutures',\n    linear: 'linear',\n    spot: 'spot',\n    v3: 'v3',\n};\n/** Parse V5 rate limit response headers, if enabled */\nfunction parseRateLimitHeaders(headers, throwOnFailedRateLimitParse) {\n    try {\n        if (!headers || typeof headers !== 'object') {\n            return;\n        }\n        const remaining = headers['x-bapi-limit-status'];\n        const max = headers['x-bapi-limit'];\n        const resetAt = headers['x-bapi-limit-reset-timestamp'];\n        if (typeof remaining === 'undefined' ||\n            typeof max === 'undefined' ||\n            typeof resetAt === 'undefined') {\n            return;\n        }\n        const result = {\n            remainingRequests: Number(remaining),\n            maxRequests: Number(max),\n            resetAtTimestamp: Number(resetAt),\n        };\n        if (isNaN(result.remainingRequests) ||\n            isNaN(result.maxRequests) ||\n            isNaN(result.resetAtTimestamp)) {\n            return;\n        }\n        return result;\n    }\n    catch (e) {\n        if (throwOnFailedRateLimitParse) {\n            console.log(new Date(), 'parseRateLimitHeaders()', 'Failed to parse rate limit headers', {\n                headers,\n                exception: e,\n            });\n            throw e;\n        }\n    }\n    return undefined;\n}\nexports.parseRateLimitHeaders = parseRateLimitHeaders;\n//# sourceMappingURL=requestUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi91dGlsL3JlcXVlc3RVdGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkIsR0FBRyw2QkFBNkIsR0FBRyxhQUFhLEdBQUcsa0NBQWtDLEdBQUcsdUNBQXVDLEdBQUcsZ0JBQWdCLEdBQUcsc0JBQXNCLEdBQUcsdUJBQXVCO0FBQ2xPO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixJQUFJLEdBQUcsTUFBTTtBQUMvQixLQUFLO0FBQ0w7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi91dGlsL3JlcXVlc3RVdGlscy5qcz84M2RjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wYXJzZVJhdGVMaW1pdEhlYWRlcnMgPSBleHBvcnRzLlJFU1RfQ0xJRU5UX1RZUEVfRU5VTSA9IGV4cG9ydHMuQVBJSUQgPSBleHBvcnRzLmlzVG9waWNTdWJzY3JpcHRpb25TdWNjZXNzID0gZXhwb3J0cy5pc1RvcGljU3Vic2NyaXB0aW9uQ29uZmlybWF0aW9uID0gZXhwb3J0cy5pc1dzUG9uZyA9IGV4cG9ydHMuZ2V0UmVzdEJhc2VVcmwgPSBleHBvcnRzLnNlcmlhbGl6ZVBhcmFtcyA9IHZvaWQgMDtcbi8qKlxuICogU2VyaWFsaXNlIGEgKGZsYXQpIG9iamVjdCBpbnRvIGEgcXVlcnkgc3RyaW5nXG4gKiBAcGFyYW0gcGFyYW1zIHRoZSBvYmplY3QgdG8gc2VyaWFsaXNlXG4gKiBAcGFyYW0gc3RyaWN0X3ZhbGlkYXRpb24gdGhyb3cgaWYgYW55IHByb3BlcnRpZXMgYXJlIHVuZGVmaW5lZFxuICogQHBhcmFtIHNvcnRQcm9wZXJ0aWVzIHNvcnQgcHJvcGVydGllcyBhbHBoYWJldGljYWxseSBiZWZvcmUgYnVpbGRpbmcgYSBxdWVyeSBzdHJpbmdcbiAqIEBwYXJhbSBlbmNvZGVTZXJpYWxpc2VkVmFsdWVzIFVSTCBlbmNvZGUgdmFsdWUgYmVmb3JlIHNlcmlhbGlzaW5nXG4gKiBAcmV0dXJucyB0aGUgcGFyYW1zIG9iamVjdCBhcyBhIHNlcmlhbGlzZWQgc3RyaW5nIGtleTE9dmFsdWUxJmtleTI9dmFsdWUyJmV0Y1xuICovXG5mdW5jdGlvbiBzZXJpYWxpemVQYXJhbXMocGFyYW1zID0ge30sIHN0cmljdF92YWxpZGF0aW9uID0gZmFsc2UsIHNvcnRQcm9wZXJ0aWVzID0gdHJ1ZSwgZW5jb2RlU2VyaWFsaXNlZFZhbHVlcyA9IHRydWUpIHtcbiAgICBjb25zdCBwcm9wZXJ0aWVzID0gc29ydFByb3BlcnRpZXNcbiAgICAgICAgPyBPYmplY3Qua2V5cyhwYXJhbXMpLnNvcnQoKVxuICAgICAgICA6IE9iamVjdC5rZXlzKHBhcmFtcyk7XG4gICAgcmV0dXJuIHByb3BlcnRpZXNcbiAgICAgICAgLm1hcCgoa2V5KSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gZW5jb2RlU2VyaWFsaXNlZFZhbHVlc1xuICAgICAgICAgICAgPyBlbmNvZGVVUklDb21wb25lbnQocGFyYW1zW2tleV0pXG4gICAgICAgICAgICA6IHBhcmFtc1trZXldO1xuICAgICAgICBpZiAoc3RyaWN0X3ZhbGlkYXRpb24gPT09IHRydWUgJiYgdHlwZW9mIHZhbHVlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gc2lnbiBBUEkgcmVxdWVzdCBkdWUgdG8gdW5kZWZpbmVkIHBhcmFtZXRlcicpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBgJHtrZXl9PSR7dmFsdWV9YDtcbiAgICB9KVxuICAgICAgICAuam9pbignJicpO1xufVxuZXhwb3J0cy5zZXJpYWxpemVQYXJhbXMgPSBzZXJpYWxpemVQYXJhbXM7XG5mdW5jdGlvbiBnZXRSZXN0QmFzZVVybCh1c2VUZXN0bmV0LCByZXN0Q2xpZW50T3B0aW9ucykge1xuICAgIGNvbnN0IGV4Y2hhbmdlQmFzZVVybHMgPSB7XG4gICAgICAgIGxpdmVuZXQ6ICdodHRwczovL2FwaS5ieWJpdC5jb20nLFxuICAgICAgICB0ZXN0bmV0OiAnaHR0cHM6Ly9hcGktdGVzdG5ldC5ieWJpdC5jb20nLFxuICAgICAgICBkZW1vTGl2ZW5ldDogJ2h0dHBzOi8vYXBpLWRlbW8uYnliaXQuY29tJyxcbiAgICB9O1xuICAgIGlmIChyZXN0Q2xpZW50T3B0aW9ucy5iYXNlVXJsKSB7XG4gICAgICAgIHJldHVybiByZXN0Q2xpZW50T3B0aW9ucy5iYXNlVXJsO1xuICAgIH1cbiAgICBpZiAocmVzdENsaWVudE9wdGlvbnMuZGVtb1RyYWRpbmcpIHtcbiAgICAgICAgcmV0dXJuIGV4Y2hhbmdlQmFzZVVybHMuZGVtb0xpdmVuZXQ7XG4gICAgfVxuICAgIGlmICh1c2VUZXN0bmV0KSB7XG4gICAgICAgIHJldHVybiBleGNoYW5nZUJhc2VVcmxzLnRlc3RuZXQ7XG4gICAgfVxuICAgIHJldHVybiBleGNoYW5nZUJhc2VVcmxzLmxpdmVuZXQ7XG59XG5leHBvcnRzLmdldFJlc3RCYXNlVXJsID0gZ2V0UmVzdEJhc2VVcmw7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuZnVuY3Rpb24gaXNXc1BvbmcobXNnKSB7XG4gICAgaWYgKCFtc2cpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAobXNnLnBvbmcgfHwgbXNnLnBpbmcpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmIChtc2dbJ29wJ10gPT09ICdwb25nJykge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKG1zZ1sncmV0X21zZyddID09PSAncG9uZycpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiAobXNnLnJlcXVlc3QgJiZcbiAgICAgICAgbXNnLnJlcXVlc3Qub3AgPT09ICdwaW5nJyAmJlxuICAgICAgICBtc2cucmV0X21zZyA9PT0gJ3BvbmcnICYmXG4gICAgICAgIG1zZy5zdWNjZXNzID09PSB0cnVlKTtcbn1cbmV4cG9ydHMuaXNXc1BvbmcgPSBpc1dzUG9uZztcbmZ1bmN0aW9uIGlzVG9waWNTdWJzY3JpcHRpb25Db25maXJtYXRpb24obXNnKSB7XG4gICAgaWYgKHR5cGVvZiBtc2cgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKCFtc2cpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG1zZ1snb3AnXSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBpZiAobXNnWydvcCddICE9PSAnc3Vic2NyaWJlJykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0cy5pc1RvcGljU3Vic2NyaXB0aW9uQ29uZmlybWF0aW9uID0gaXNUb3BpY1N1YnNjcmlwdGlvbkNvbmZpcm1hdGlvbjtcbmZ1bmN0aW9uIGlzVG9waWNTdWJzY3JpcHRpb25TdWNjZXNzKG1zZykge1xuICAgIGlmICghaXNUb3BpY1N1YnNjcmlwdGlvbkNvbmZpcm1hdGlvbihtc2cpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgcmV0dXJuIG1zZy5zdWNjZXNzID09PSB0cnVlO1xufVxuZXhwb3J0cy5pc1RvcGljU3Vic2NyaXB0aW9uU3VjY2VzcyA9IGlzVG9waWNTdWJzY3JpcHRpb25TdWNjZXNzO1xuZXhwb3J0cy5BUElJRCA9ICdieWJpdGFwaW5vZGUnO1xuLyoqXG4gKiBVc2VkIHRvIHN3aXRjaCBob3cgYXV0aGVudGljYXRpb24vcmVxdWVzdHMgd29yayB1bmRlciB0aGUgaG9vZCAocHJpbWFyaWx5IGZvciBTUE9UIHNpbmNlIGl0J3MgZGlmZmVyZW50IHRoZXJlKVxuICovXG5leHBvcnRzLlJFU1RfQ0xJRU5UX1RZUEVfRU5VTSA9IHtcbiAgICBhY2NvdW50QXNzZXQ6ICdhY2NvdW50QXNzZXQnLFxuICAgIGludmVyc2U6ICdpbnZlcnNlJyxcbiAgICBpbnZlcnNlRnV0dXJlczogJ2ludmVyc2VGdXR1cmVzJyxcbiAgICBsaW5lYXI6ICdsaW5lYXInLFxuICAgIHNwb3Q6ICdzcG90JyxcbiAgICB2MzogJ3YzJyxcbn07XG4vKiogUGFyc2UgVjUgcmF0ZSBsaW1pdCByZXNwb25zZSBoZWFkZXJzLCBpZiBlbmFibGVkICovXG5mdW5jdGlvbiBwYXJzZVJhdGVMaW1pdEhlYWRlcnMoaGVhZGVycywgdGhyb3dPbkZhaWxlZFJhdGVMaW1pdFBhcnNlKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKCFoZWFkZXJzIHx8IHR5cGVvZiBoZWFkZXJzICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlbWFpbmluZyA9IGhlYWRlcnNbJ3gtYmFwaS1saW1pdC1zdGF0dXMnXTtcbiAgICAgICAgY29uc3QgbWF4ID0gaGVhZGVyc1sneC1iYXBpLWxpbWl0J107XG4gICAgICAgIGNvbnN0IHJlc2V0QXQgPSBoZWFkZXJzWyd4LWJhcGktbGltaXQtcmVzZXQtdGltZXN0YW1wJ107XG4gICAgICAgIGlmICh0eXBlb2YgcmVtYWluaW5nID09PSAndW5kZWZpbmVkJyB8fFxuICAgICAgICAgICAgdHlwZW9mIG1heCA9PT0gJ3VuZGVmaW5lZCcgfHxcbiAgICAgICAgICAgIHR5cGVvZiByZXNldEF0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHtcbiAgICAgICAgICAgIHJlbWFpbmluZ1JlcXVlc3RzOiBOdW1iZXIocmVtYWluaW5nKSxcbiAgICAgICAgICAgIG1heFJlcXVlc3RzOiBOdW1iZXIobWF4KSxcbiAgICAgICAgICAgIHJlc2V0QXRUaW1lc3RhbXA6IE51bWJlcihyZXNldEF0KSxcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGlzTmFOKHJlc3VsdC5yZW1haW5pbmdSZXF1ZXN0cykgfHxcbiAgICAgICAgICAgIGlzTmFOKHJlc3VsdC5tYXhSZXF1ZXN0cykgfHxcbiAgICAgICAgICAgIGlzTmFOKHJlc3VsdC5yZXNldEF0VGltZXN0YW1wKSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIGlmICh0aHJvd09uRmFpbGVkUmF0ZUxpbWl0UGFyc2UpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKG5ldyBEYXRlKCksICdwYXJzZVJhdGVMaW1pdEhlYWRlcnMoKScsICdGYWlsZWQgdG8gcGFyc2UgcmF0ZSBsaW1pdCBoZWFkZXJzJywge1xuICAgICAgICAgICAgICAgIGhlYWRlcnMsXG4gICAgICAgICAgICAgICAgZXhjZXB0aW9uOiBlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59XG5leHBvcnRzLnBhcnNlUmF0ZUxpbWl0SGVhZGVycyA9IHBhcnNlUmF0ZUxpbWl0SGVhZGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3RVdGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/util/requestUtils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/util/typeGuards.js":
/*!*******************************************************!*\
  !*** ./node_modules/bybit-api/lib/util/typeGuards.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * Use type guards to narrow down types with minimal efforts.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isWsExecutionEventV5 = exports.isWsAccountOrderEventV5 = exports.isWsPositionEventV5 = exports.isWsOrderbookEventV5 = void 0;\n/**\n * Type guard to detect a V5 orderbook event (delta & snapshots)\n *\n * @param event\n * @returns\n */\nfunction isWsOrderbookEventV5(event) {\n    if (typeof event !== 'object' ||\n        !event ||\n        typeof event['topic'] !== 'string' ||\n        typeof event['type'] !== 'string') {\n        return false;\n    }\n    return (['delta', 'snapshot'].includes(event['type']) &&\n        event['topic'].startsWith('orderbook'));\n}\nexports.isWsOrderbookEventV5 = isWsOrderbookEventV5;\n/**\n * Type guard to detect a V5 position event.\n *\n * @param event\n * @returns\n */\nfunction isWsPositionEventV5(event) {\n    if (typeof event !== 'object' ||\n        !event ||\n        typeof event['topic'] !== 'string') {\n        return false;\n    }\n    return event['topic'] === 'position';\n}\nexports.isWsPositionEventV5 = isWsPositionEventV5;\n/**\n * Type guard to detect a V5 order event.\n *\n * @param event\n * @returns\n */\nfunction isWsAccountOrderEventV5(event) {\n    if (typeof event !== 'object' ||\n        !event ||\n        typeof event['topic'] !== 'string') {\n        return false;\n    }\n    return event['topic'] === 'order';\n}\nexports.isWsAccountOrderEventV5 = isWsAccountOrderEventV5;\n/**\n * Type guard to detect a V5 execution event.\n *\n * @param event\n * @returns\n */\nfunction isWsExecutionEventV5(event) {\n    if (typeof event !== 'object' ||\n        !event ||\n        typeof event['topic'] !== 'string') {\n        return false;\n    }\n    return event['topic'] === 'execution';\n}\nexports.isWsExecutionEventV5 = isWsExecutionEventV5;\n//# sourceMappingURL=typeGuards.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi91dGlsL3R5cGVHdWFyZHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCLEdBQUcsK0JBQStCLEdBQUcsMkJBQTJCLEdBQUcsNEJBQTRCO0FBQzNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZGluZy1zeXN0ZW0vLi9ub2RlX21vZHVsZXMvYnliaXQtYXBpL2xpYi91dGlsL3R5cGVHdWFyZHMuanM/M2Q4NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qKlxuICogVXNlIHR5cGUgZ3VhcmRzIHRvIG5hcnJvdyBkb3duIHR5cGVzIHdpdGggbWluaW1hbCBlZmZvcnRzLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzV3NFeGVjdXRpb25FdmVudFY1ID0gZXhwb3J0cy5pc1dzQWNjb3VudE9yZGVyRXZlbnRWNSA9IGV4cG9ydHMuaXNXc1Bvc2l0aW9uRXZlbnRWNSA9IGV4cG9ydHMuaXNXc09yZGVyYm9va0V2ZW50VjUgPSB2b2lkIDA7XG4vKipcbiAqIFR5cGUgZ3VhcmQgdG8gZGV0ZWN0IGEgVjUgb3JkZXJib29rIGV2ZW50IChkZWx0YSAmIHNuYXBzaG90cylcbiAqXG4gKiBAcGFyYW0gZXZlbnRcbiAqIEByZXR1cm5zXG4gKi9cbmZ1bmN0aW9uIGlzV3NPcmRlcmJvb2tFdmVudFY1KGV2ZW50KSB7XG4gICAgaWYgKHR5cGVvZiBldmVudCAhPT0gJ29iamVjdCcgfHxcbiAgICAgICAgIWV2ZW50IHx8XG4gICAgICAgIHR5cGVvZiBldmVudFsndG9waWMnXSAhPT0gJ3N0cmluZycgfHxcbiAgICAgICAgdHlwZW9mIGV2ZW50Wyd0eXBlJ10gIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIChbJ2RlbHRhJywgJ3NuYXBzaG90J10uaW5jbHVkZXMoZXZlbnRbJ3R5cGUnXSkgJiZcbiAgICAgICAgZXZlbnRbJ3RvcGljJ10uc3RhcnRzV2l0aCgnb3JkZXJib29rJykpO1xufVxuZXhwb3J0cy5pc1dzT3JkZXJib29rRXZlbnRWNSA9IGlzV3NPcmRlcmJvb2tFdmVudFY1O1xuLyoqXG4gKiBUeXBlIGd1YXJkIHRvIGRldGVjdCBhIFY1IHBvc2l0aW9uIGV2ZW50LlxuICpcbiAqIEBwYXJhbSBldmVudFxuICogQHJldHVybnNcbiAqL1xuZnVuY3Rpb24gaXNXc1Bvc2l0aW9uRXZlbnRWNShldmVudCkge1xuICAgIGlmICh0eXBlb2YgZXZlbnQgIT09ICdvYmplY3QnIHx8XG4gICAgICAgICFldmVudCB8fFxuICAgICAgICB0eXBlb2YgZXZlbnRbJ3RvcGljJ10gIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIGV2ZW50Wyd0b3BpYyddID09PSAncG9zaXRpb24nO1xufVxuZXhwb3J0cy5pc1dzUG9zaXRpb25FdmVudFY1ID0gaXNXc1Bvc2l0aW9uRXZlbnRWNTtcbi8qKlxuICogVHlwZSBndWFyZCB0byBkZXRlY3QgYSBWNSBvcmRlciBldmVudC5cbiAqXG4gKiBAcGFyYW0gZXZlbnRcbiAqIEByZXR1cm5zXG4gKi9cbmZ1bmN0aW9uIGlzV3NBY2NvdW50T3JkZXJFdmVudFY1KGV2ZW50KSB7XG4gICAgaWYgKHR5cGVvZiBldmVudCAhPT0gJ29iamVjdCcgfHxcbiAgICAgICAgIWV2ZW50IHx8XG4gICAgICAgIHR5cGVvZiBldmVudFsndG9waWMnXSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gZXZlbnRbJ3RvcGljJ10gPT09ICdvcmRlcic7XG59XG5leHBvcnRzLmlzV3NBY2NvdW50T3JkZXJFdmVudFY1ID0gaXNXc0FjY291bnRPcmRlckV2ZW50VjU7XG4vKipcbiAqIFR5cGUgZ3VhcmQgdG8gZGV0ZWN0IGEgVjUgZXhlY3V0aW9uIGV2ZW50LlxuICpcbiAqIEBwYXJhbSBldmVudFxuICogQHJldHVybnNcbiAqL1xuZnVuY3Rpb24gaXNXc0V4ZWN1dGlvbkV2ZW50VjUoZXZlbnQpIHtcbiAgICBpZiAodHlwZW9mIGV2ZW50ICE9PSAnb2JqZWN0JyB8fFxuICAgICAgICAhZXZlbnQgfHxcbiAgICAgICAgdHlwZW9mIGV2ZW50Wyd0b3BpYyddICE9PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBldmVudFsndG9waWMnXSA9PT0gJ2V4ZWN1dGlvbic7XG59XG5leHBvcnRzLmlzV3NFeGVjdXRpb25FdmVudFY1ID0gaXNXc0V4ZWN1dGlvbkV2ZW50VjU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlR3VhcmRzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/util/typeGuards.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/util/websocket-util.js":
/*!***********************************************************!*\
  !*** ./node_modules/bybit-api/lib/util/websocket-util.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.safeTerminateWs = exports.neverGuard = exports.WS_ERROR_ENUM = exports.getUsdcWsKeyForTopic = exports.getMaxTopicsPerSubscribeEvent = exports.getWsUrl = exports.getWsKeyForTopic = exports.isPrivateWsTopic = exports.PUBLIC_WS_KEYS = exports.WS_AUTH_ON_CONNECT_KEYS = exports.WS_KEY_MAP = exports.WS_BASE_URL_MAP = void 0;\nexports.WS_BASE_URL_MAP = {\n    inverse: {\n        public: {\n            livenet: 'wss://stream.bybit.com/realtime',\n            testnet: 'wss://stream-testnet.bybit.com/realtime',\n        },\n        private: {\n            livenet: 'wss://stream.bybit.com/realtime',\n            testnet: 'wss://stream-testnet.bybit.com/realtime',\n        },\n    },\n    linear: {\n        public: {\n            livenet: 'wss://stream.bybit.com/realtime_public',\n            livenet2: 'wss://stream.bytick.com/realtime_public',\n            testnet: 'wss://stream-testnet.bybit.com/realtime_public',\n        },\n        private: {\n            livenet: 'wss://stream.bybit.com/realtime_private',\n            livenet2: 'wss://stream.bytick.com/realtime_private',\n            testnet: 'wss://stream-testnet.bybit.com/realtime_private',\n        },\n    },\n    spot: {\n        public: {\n            livenet: 'wss://stream.bybit.com/spot/quote/ws/v1',\n            livenet2: 'wss://stream.bybit.com/spot/quote/ws/v2',\n            testnet: 'wss://stream-testnet.bybit.com/spot/quote/ws/v1',\n            testnet2: 'wss://stream-testnet.bybit.com/spot/quote/ws/v2',\n        },\n        private: {\n            livenet: 'wss://stream.bybit.com/spot/ws',\n            testnet: 'wss://stream-testnet.bybit.com/spot/ws',\n        },\n    },\n    spotv3: {\n        public: {\n            livenet: 'wss://stream.bybit.com/spot/public/v3',\n            testnet: 'wss://stream-testnet.bybit.com/spot/public/v3',\n        },\n        private: {\n            livenet: 'wss://stream.bybit.com/spot/private/v3',\n            testnet: 'wss://stream-testnet.bybit.com/spot/private/v3',\n        },\n    },\n    usdcOption: {\n        public: {\n            livenet: 'wss://stream.bybit.com/trade/option/usdc/public/v1',\n            livenet2: 'wss://stream.bytick.com/trade/option/usdc/public/v1',\n            testnet: 'wss://stream-testnet.bybit.com/trade/option/usdc/public/v1',\n        },\n        private: {\n            livenet: 'wss://stream.bybit.com/trade/option/usdc/private/v1',\n            livenet2: 'wss://stream.bytick.com/trade/option/usdc/private/v1',\n            testnet: 'wss://stream-testnet.bybit.com/trade/option/usdc/private/v1',\n        },\n    },\n    usdcPerp: {\n        public: {\n            livenet: 'wss://stream.bybit.com/perpetual/ws/v1/realtime_public',\n            livenet2: 'wss://stream.bytick.com/perpetual/ws/v1/realtime_public',\n            testnet: 'wss://stream-testnet.bybit.com/perpetual/ws/v1/realtime_public',\n        },\n        private: {\n            livenet: 'wss://stream.bybit.com/trade/option/usdc/private/v1',\n            livenet2: 'wss://stream.bytick.com/trade/option/usdc/private/v1',\n            testnet: 'wss://stream-testnet.bybit.com/trade/option/usdc/private/v1',\n        },\n    },\n    unifiedOption: {\n        public: {\n            livenet: 'wss://stream.bybit.com/option/usdc/public/v3',\n            testnet: 'wss://stream-testnet.bybit.com/option/usdc/public/v3',\n        },\n        private: {\n            livenet: 'wss://stream.bybit.com/unified/private/v3',\n            testnet: 'wss://stream-testnet.bybit.com/unified/private/v3',\n        },\n    },\n    unifiedPerp: {\n        public: {\n            livenet: 'useBaseSpecificEndpoint',\n            testnet: 'useBaseSpecificEndpoint',\n        },\n        private: {\n            livenet: 'wss://stream.bybit.com/unified/private/v3',\n            testnet: 'wss://stream-testnet.bybit.com/unified/private/v3',\n        },\n    },\n    unifiedPerpUSDT: {\n        public: {\n            livenet: 'wss://stream.bybit.com/contract/usdt/public/v3',\n            testnet: 'wss://stream-testnet.bybit.com/contract/usdt/public/v3',\n        },\n    },\n    unifiedPerpUSDC: {\n        public: {\n            livenet: 'wss://stream.bybit.com/contract/usdc/public/v3',\n            testnet: 'wss://stream-testnet.bybit.com/contract/usdc/public/v3',\n        },\n    },\n    contractUSDT: {\n        public: {\n            livenet: 'wss://stream.bybit.com/contract/usdt/public/v3',\n            testnet: 'wss://stream-testnet.bybit.com/contract/usdt/public/v3',\n        },\n        private: {\n            livenet: 'wss://stream.bybit.com/contract/private/v3',\n            testnet: 'wss://stream-testnet.bybit.com/contract/private/v3',\n        },\n    },\n    contractInverse: {\n        public: {\n            livenet: 'wss://stream.bybit.com/contract/inverse/public/v3',\n            testnet: 'wss://stream-testnet.bybit.com/contract/inverse/public/v3',\n        },\n        private: {\n            livenet: 'wss://stream.bybit.com/contract/private/v3',\n            testnet: 'wss://stream-testnet.bybit.com/contract/private/v3',\n        },\n    },\n    v5: {\n        public: {\n            livenet: 'public topics are routed internally via the public wskeys',\n            testnet: 'public topics are routed internally via the public wskeys',\n        },\n        private: {\n            livenet: 'wss://stream.bybit.com/v5/private',\n            testnet: 'wss://stream-testnet.bybit.com/v5/private',\n        },\n    },\n    v5SpotPublic: {\n        public: {\n            livenet: 'wss://stream.bybit.com/v5/public/spot',\n            testnet: 'wss://stream-testnet.bybit.com/v5/public/spot',\n        },\n    },\n    v5LinearPublic: {\n        public: {\n            livenet: 'wss://stream.bybit.com/v5/public/linear',\n            testnet: 'wss://stream-testnet.bybit.com/v5/public/linear',\n        },\n    },\n    v5InversePublic: {\n        public: {\n            livenet: 'wss://stream.bybit.com/v5/public/inverse',\n            testnet: 'wss://stream-testnet.bybit.com/v5/public/inverse',\n        },\n    },\n    v5OptionPublic: {\n        public: {\n            livenet: 'wss://stream.bybit.com/v5/public/option',\n            testnet: 'wss://stream-testnet.bybit.com/v5/public/option',\n        },\n    },\n};\nexports.WS_KEY_MAP = {\n    inverse: 'inverse',\n    linearPrivate: 'linearPrivate',\n    linearPublic: 'linearPublic',\n    spotPrivate: 'spotPrivate',\n    spotPublic: 'spotPublic',\n    spotV3Private: 'spotV3Private',\n    spotV3Public: 'spotV3Public',\n    usdcOptionPrivate: 'usdcOptionPrivate',\n    usdcOptionPublic: 'usdcOptionPublic',\n    usdcPerpPrivate: 'usdcPerpPrivate',\n    usdcPerpPublic: 'usdcPerpPublic',\n    unifiedPrivate: 'unifiedPrivate',\n    unifiedOptionPublic: 'unifiedOptionPublic',\n    unifiedPerpUSDTPublic: 'unifiedPerpUSDTPublic',\n    unifiedPerpUSDCPublic: 'unifiedPerpUSDCPublic',\n    contractUSDTPublic: 'contractUSDTPublic',\n    contractUSDTPrivate: 'contractUSDTPrivate',\n    contractInversePublic: 'contractInversePublic',\n    contractInversePrivate: 'contractInversePrivate',\n    v5SpotPublic: 'v5SpotPublic',\n    v5LinearPublic: 'v5LinearPublic',\n    v5InversePublic: 'v5InversePublic',\n    v5OptionPublic: 'v5OptionPublic',\n    v5Private: 'v5Private',\n};\nexports.WS_AUTH_ON_CONNECT_KEYS = [\n    exports.WS_KEY_MAP.spotV3Private,\n    exports.WS_KEY_MAP.usdcOptionPrivate,\n    exports.WS_KEY_MAP.usdcPerpPrivate,\n    exports.WS_KEY_MAP.unifiedPrivate,\n    exports.WS_KEY_MAP.contractUSDTPrivate,\n    exports.WS_KEY_MAP.contractInversePrivate,\n    exports.WS_KEY_MAP.v5Private,\n];\nexports.PUBLIC_WS_KEYS = [\n    exports.WS_KEY_MAP.linearPublic,\n    exports.WS_KEY_MAP.spotPublic,\n    exports.WS_KEY_MAP.spotV3Public,\n    exports.WS_KEY_MAP.usdcOptionPublic,\n    exports.WS_KEY_MAP.usdcPerpPublic,\n    exports.WS_KEY_MAP.unifiedOptionPublic,\n    exports.WS_KEY_MAP.unifiedPerpUSDTPublic,\n    exports.WS_KEY_MAP.unifiedPerpUSDCPublic,\n    exports.WS_KEY_MAP.contractUSDTPublic,\n    exports.WS_KEY_MAP.contractInversePublic,\n    exports.WS_KEY_MAP.v5SpotPublic,\n    exports.WS_KEY_MAP.v5LinearPublic,\n    exports.WS_KEY_MAP.v5InversePublic,\n    exports.WS_KEY_MAP.v5OptionPublic,\n];\n/** Used to automatically determine if a sub request should be to the public or private ws (when there's two) */\nconst PRIVATE_TOPICS = [\n    'stop_order',\n    'outboundAccountInfo',\n    'executionReport',\n    'ticketInfo',\n    // copy trading apis\n    'copyTradePosition',\n    'copyTradeOrder',\n    'copyTradeExecution',\n    'copyTradeWallet',\n    // usdc options\n    'user.openapi.option.position',\n    'user.openapi.option.trade',\n    'user.order',\n    'user.openapi.option.order',\n    'user.service',\n    'user.openapi.greeks',\n    'user.mmp.event',\n    // usdc perps\n    'user.openapi.perp.position',\n    'user.openapi.perp.trade',\n    'user.openapi.perp.order',\n    'user.service',\n    // unified margin\n    'user.position.unifiedAccount',\n    'user.execution.unifiedAccount',\n    'user.order.unifiedAccount',\n    'user.wallet.unifiedAccount',\n    'user.greeks.unifiedAccount',\n    // contract v3\n    'user.position.contractAccount',\n    'user.execution.contractAccount',\n    'user.order.contractAccount',\n    'user.wallet.contractAccount',\n    // v5\n    'position',\n    'execution',\n    'order',\n    'wallet',\n    'greeks',\n];\nfunction isPrivateWsTopic(topic) {\n    return PRIVATE_TOPICS.includes(topic);\n}\nexports.isPrivateWsTopic = isPrivateWsTopic;\nfunction getWsKeyForTopic(market, topic, isPrivate, category) {\n    const isPrivateTopic = isPrivate === true || PRIVATE_TOPICS.includes(topic);\n    switch (market) {\n        case 'inverse': {\n            return exports.WS_KEY_MAP.inverse;\n        }\n        case 'linear': {\n            return isPrivateTopic\n                ? exports.WS_KEY_MAP.linearPrivate\n                : exports.WS_KEY_MAP.linearPublic;\n        }\n        case 'spot': {\n            return isPrivateTopic ? exports.WS_KEY_MAP.spotPrivate : exports.WS_KEY_MAP.spotPublic;\n        }\n        case 'spotv3': {\n            return isPrivateTopic\n                ? exports.WS_KEY_MAP.spotV3Private\n                : exports.WS_KEY_MAP.spotV3Public;\n        }\n        case 'usdcOption': {\n            return isPrivateTopic\n                ? exports.WS_KEY_MAP.usdcOptionPrivate\n                : exports.WS_KEY_MAP.usdcOptionPublic;\n        }\n        case 'usdcPerp': {\n            return isPrivateTopic\n                ? exports.WS_KEY_MAP.usdcPerpPrivate\n                : exports.WS_KEY_MAP.usdcPerpPublic;\n        }\n        case 'unifiedOption': {\n            return isPrivateTopic\n                ? exports.WS_KEY_MAP.unifiedPrivate\n                : exports.WS_KEY_MAP.unifiedOptionPublic;\n        }\n        case 'unifiedPerp': {\n            if (isPrivateTopic) {\n                return exports.WS_KEY_MAP.unifiedPrivate;\n            }\n            const upperTopic = topic.toUpperCase();\n            if (upperTopic.indexOf('USDT') !== -1) {\n                return exports.WS_KEY_MAP.unifiedPerpUSDTPublic;\n            }\n            if (upperTopic.indexOf('USDC') !== -1 ||\n                upperTopic.indexOf('PERP') !== -1) {\n                return exports.WS_KEY_MAP.unifiedPerpUSDCPublic;\n            }\n            throw new Error(`Failed to determine wskey for unified perps topic: \"${topic}\"`);\n        }\n        case 'contractInverse': {\n            return isPrivateTopic\n                ? exports.WS_KEY_MAP.contractInversePrivate\n                : exports.WS_KEY_MAP.contractInversePublic;\n        }\n        case 'contractUSDT': {\n            return isPrivateTopic\n                ? exports.WS_KEY_MAP.contractUSDTPrivate\n                : exports.WS_KEY_MAP.contractUSDTPublic;\n        }\n        case 'v5': {\n            if (isPrivateTopic) {\n                return exports.WS_KEY_MAP.v5Private;\n            }\n            switch (category) {\n                case 'spot': {\n                    return exports.WS_KEY_MAP.v5SpotPublic;\n                }\n                case 'linear': {\n                    return exports.WS_KEY_MAP.v5LinearPublic;\n                }\n                case 'inverse': {\n                    return exports.WS_KEY_MAP.v5InversePublic;\n                }\n                case 'option': {\n                    return exports.WS_KEY_MAP.v5OptionPublic;\n                }\n                case undefined: {\n                    throw new Error('Category cannot be undefined');\n                }\n                default: {\n                    throw neverGuard(category, 'getWsKeyForTopic(v5): Unhandled v5 category');\n                }\n            }\n        }\n        default: {\n            throw neverGuard(market, 'getWsKeyForTopic(): Unhandled market');\n        }\n    }\n}\nexports.getWsKeyForTopic = getWsKeyForTopic;\nfunction getWsUrl(wsKey, wsClientOptions, logger) {\n    const wsUrl = wsClientOptions.wsUrl;\n    if (wsUrl) {\n        return wsUrl;\n    }\n    // https://bybit-exchange.github.io/docs/v5/demo\n    const isDemoTrading = wsClientOptions.demoTrading;\n    if (isDemoTrading) {\n        return 'wss://stream-demo.bybit.com/v5/private';\n    }\n    const isTestnet = wsClientOptions.testnet;\n    const networkKey = isTestnet ? 'testnet' : 'livenet';\n    switch (wsKey) {\n        case exports.WS_KEY_MAP.linearPublic: {\n            return exports.WS_BASE_URL_MAP.linear.public[networkKey];\n        }\n        case exports.WS_KEY_MAP.linearPrivate: {\n            return exports.WS_BASE_URL_MAP.linear.private[networkKey];\n        }\n        case exports.WS_KEY_MAP.spotPublic: {\n            return exports.WS_BASE_URL_MAP.spot.public[networkKey];\n        }\n        case exports.WS_KEY_MAP.spotPrivate: {\n            return exports.WS_BASE_URL_MAP.spot.private[networkKey];\n        }\n        case exports.WS_KEY_MAP.spotV3Public: {\n            return exports.WS_BASE_URL_MAP.spotv3.public[networkKey];\n        }\n        case exports.WS_KEY_MAP.spotV3Private: {\n            return exports.WS_BASE_URL_MAP.spotv3.private[networkKey];\n        }\n        case exports.WS_KEY_MAP.inverse: {\n            // private and public are on the same WS connection\n            return exports.WS_BASE_URL_MAP.inverse.public[networkKey];\n        }\n        case exports.WS_KEY_MAP.usdcOptionPublic: {\n            return exports.WS_BASE_URL_MAP.usdcOption.public[networkKey];\n        }\n        case exports.WS_KEY_MAP.usdcOptionPrivate: {\n            return exports.WS_BASE_URL_MAP.usdcOption.private[networkKey];\n        }\n        case exports.WS_KEY_MAP.usdcPerpPublic: {\n            return exports.WS_BASE_URL_MAP.usdcPerp.public[networkKey];\n        }\n        case exports.WS_KEY_MAP.usdcPerpPrivate: {\n            return exports.WS_BASE_URL_MAP.usdcPerp.private[networkKey];\n        }\n        case exports.WS_KEY_MAP.unifiedOptionPublic: {\n            return exports.WS_BASE_URL_MAP.unifiedOption.public[networkKey];\n        }\n        case exports.WS_KEY_MAP.unifiedPerpUSDTPublic: {\n            return exports.WS_BASE_URL_MAP.unifiedPerpUSDT.public[networkKey];\n        }\n        case exports.WS_KEY_MAP.unifiedPerpUSDCPublic: {\n            return exports.WS_BASE_URL_MAP.unifiedPerpUSDC.public[networkKey];\n        }\n        case exports.WS_KEY_MAP.unifiedPrivate: {\n            return exports.WS_BASE_URL_MAP.unifiedPerp.private[networkKey];\n        }\n        case exports.WS_KEY_MAP.contractInversePrivate: {\n            return exports.WS_BASE_URL_MAP.contractInverse.private[networkKey];\n        }\n        case exports.WS_KEY_MAP.contractInversePublic: {\n            return exports.WS_BASE_URL_MAP.contractInverse.public[networkKey];\n        }\n        case exports.WS_KEY_MAP.contractUSDTPrivate: {\n            return exports.WS_BASE_URL_MAP.contractUSDT.private[networkKey];\n        }\n        case exports.WS_KEY_MAP.contractUSDTPublic: {\n            return exports.WS_BASE_URL_MAP.contractUSDT.public[networkKey];\n        }\n        case exports.WS_KEY_MAP.v5Private: {\n            return exports.WS_BASE_URL_MAP.v5.private[networkKey];\n        }\n        case exports.WS_KEY_MAP.v5SpotPublic: {\n            return exports.WS_BASE_URL_MAP.v5SpotPublic.public[networkKey];\n        }\n        case exports.WS_KEY_MAP.v5LinearPublic: {\n            return exports.WS_BASE_URL_MAP.v5LinearPublic.public[networkKey];\n        }\n        case exports.WS_KEY_MAP.v5InversePublic: {\n            return exports.WS_BASE_URL_MAP.v5InversePublic.public[networkKey];\n        }\n        case exports.WS_KEY_MAP.v5OptionPublic: {\n            return exports.WS_BASE_URL_MAP.v5OptionPublic.public[networkKey];\n        }\n        default: {\n            logger.error('getWsUrl(): Unhandled wsKey: ', {\n                category: 'bybit-ws',\n                wsKey,\n            });\n            throw neverGuard(wsKey, 'getWsUrl(): Unhandled wsKey');\n        }\n    }\n}\nexports.getWsUrl = getWsUrl;\nfunction getMaxTopicsPerSubscribeEvent(market, wsKey) {\n    const topicsPerEventSpot = 10;\n    switch (market) {\n        case 'inverse':\n        case 'linear':\n        case 'usdcOption':\n        case 'usdcPerp':\n        case 'unifiedOption':\n        case 'unifiedPerp':\n        case 'spot':\n        case 'contractInverse':\n        case 'contractUSDT':\n        case 'v5': {\n            if (wsKey === exports.WS_KEY_MAP.v5SpotPublic) {\n                return topicsPerEventSpot;\n            }\n            return null;\n        }\n        case 'spotv3': {\n            return topicsPerEventSpot;\n        }\n        default: {\n            throw neverGuard(market, 'getWsKeyForTopic(): Unhandled market');\n        }\n    }\n}\nexports.getMaxTopicsPerSubscribeEvent = getMaxTopicsPerSubscribeEvent;\nfunction getUsdcWsKeyForTopic(topic, subGroup) {\n    const isPrivateTopic = PRIVATE_TOPICS.includes(topic);\n    if (subGroup === 'option') {\n        return isPrivateTopic\n            ? exports.WS_KEY_MAP.usdcOptionPrivate\n            : exports.WS_KEY_MAP.usdcOptionPublic;\n    }\n    return isPrivateTopic\n        ? exports.WS_KEY_MAP.usdcOptionPrivate\n        : exports.WS_KEY_MAP.usdcOptionPublic;\n    // return isPrivateTopic\n    //   ? WS_KEY_MAP.usdcPerpPrivate\n    //   : WS_KEY_MAP.usdcPerpPublic;\n}\nexports.getUsdcWsKeyForTopic = getUsdcWsKeyForTopic;\nexports.WS_ERROR_ENUM = {\n    NOT_AUTHENTICATED_SPOT_V3: '-1004',\n    API_ERROR_GENERIC: '10001',\n    API_SIGN_AUTH_FAILED: '10003',\n    USDC_OPTION_AUTH_FAILED: '3303006',\n};\nfunction neverGuard(x, msg) {\n    return new Error(`Unhandled value exception \"x\", ${msg}`);\n}\nexports.neverGuard = neverGuard;\n/**\n * #305: ws.terminate() is undefined in browsers.\n * This only works in node.js, not in browsers.\n * Does nothing if `ws` is undefined.\n */\nfunction safeTerminateWs(ws) {\n    // #305: ws.terminate() undefined in browsers\n    if (ws && typeof ws['terminate'] === 'function') {\n        ws.terminate();\n    }\n}\nexports.safeTerminateWs = safeTerminateWs;\n//# sourceMappingURL=websocket-util.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/util/websocket-util.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/bybit-api/lib/websocket-client.js":
/*!********************************************************!*\
  !*** ./node_modules/bybit-api/lib/websocket-client.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WebsocketClient = void 0;\n/* eslint-disable max-len */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst events_1 = __webpack_require__(/*! events */ \"events\");\nconst isomorphic_ws_1 = __importDefault(__webpack_require__(/*! isomorphic-ws */ \"(rsc)/./node_modules/isomorphic-ws/node.js\"));\nconst inverse_client_1 = __webpack_require__(/*! ./inverse-client */ \"(rsc)/./node_modules/bybit-api/lib/inverse-client.js\");\nconst linear_client_1 = __webpack_require__(/*! ./linear-client */ \"(rsc)/./node_modules/bybit-api/lib/linear-client.js\");\nconst spot_client_v3_1 = __webpack_require__(/*! ./spot-client-v3 */ \"(rsc)/./node_modules/bybit-api/lib/spot-client-v3.js\");\nconst spot_client_1 = __webpack_require__(/*! ./spot-client */ \"(rsc)/./node_modules/bybit-api/lib/spot-client.js\");\nconst usdc_option_client_1 = __webpack_require__(/*! ./usdc-option-client */ \"(rsc)/./node_modules/bybit-api/lib/usdc-option-client.js\");\nconst usdc_perpetual_client_1 = __webpack_require__(/*! ./usdc-perpetual-client */ \"(rsc)/./node_modules/bybit-api/lib/usdc-perpetual-client.js\");\nconst unified_margin_client_1 = __webpack_require__(/*! ./unified-margin-client */ \"(rsc)/./node_modules/bybit-api/lib/unified-margin-client.js\");\nconst contract_client_1 = __webpack_require__(/*! ./contract-client */ \"(rsc)/./node_modules/bybit-api/lib/contract-client.js\");\nconst node_support_1 = __webpack_require__(/*! ./util/node-support */ \"(rsc)/./node_modules/bybit-api/lib/util/node-support.js\");\nconst WsStore_1 = __importDefault(__webpack_require__(/*! ./util/WsStore */ \"(rsc)/./node_modules/bybit-api/lib/util/WsStore.js\"));\nconst util_1 = __webpack_require__(/*! ./util */ \"(rsc)/./node_modules/bybit-api/lib/util/index.js\");\nconst rest_client_v5_1 = __webpack_require__(/*! ./rest-client-v5 */ \"(rsc)/./node_modules/bybit-api/lib/rest-client-v5.js\");\nconst loggerCategory = { category: 'bybit-ws' };\n// eslint-disable-next-line no-redeclare\nclass WebsocketClient extends events_1.EventEmitter {\n    constructor(options, logger) {\n        super();\n        this.pendingTopicsSubscriptions = [];\n        this.logger = logger || util_1.DefaultLogger;\n        this.wsStore = new WsStore_1.default(this.logger);\n        this.options = Object.assign({ testnet: false, pongTimeout: 1000, pingInterval: 10000, reconnectTimeout: 500, recvWindow: 5000, fetchTimeOffsetBeforeAuth: false }, options);\n        this.options.restOptions = Object.assign(Object.assign({}, this.options.restOptions), { testnet: this.options.testnet });\n        this.prepareRESTClient();\n        // add default error handling so this doesn't crash node (if the user didn't set a handler)\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        this.on('error', () => { });\n    }\n    /** Get the WsStore that tracks websockets & topics */\n    getWsStore() {\n        return this.wsStore;\n    }\n    isTestnet() {\n        return this.options.testnet === true;\n    }\n    /**\n     * Subscribe to V5 topics & track/persist them.\n     * @param wsTopics - topic or list of topics\n     * @param category - the API category this topic is for (e.g. \"linear\"). The value is only important when connecting to public topics and will be ignored for private topics.\n     * @param isPrivateTopic - optional - the library will try to detect private topics, you can use this to mark a topic as private (if the topic isn't recognised yet)\n     */\n    subscribeV5(wsTopics, category, isPrivateTopic) {\n        const topics = Array.isArray(wsTopics) ? wsTopics : [wsTopics];\n        return new Promise((resolver, rejector) => {\n            topics.forEach((topic) => {\n                const wsKey = (0, util_1.getWsKeyForTopic)(this.options.market, topic, isPrivateTopic, category);\n                // Persist topic for reconnects\n                this.wsStore.addTopic(wsKey, topic);\n                this.upsertPendingTopicsSubscriptions(wsKey, topic, resolver, rejector);\n                // if connected, send subscription request\n                if (this.wsStore.isConnectionState(wsKey, util_1.WsConnectionStateEnum.CONNECTED)) {\n                    return this.requestSubscribeTopics(wsKey, [topic]);\n                }\n                // start connection process if it hasn't yet begun. Topics are automatically subscribed to on-connect\n                if (!this.wsStore.isConnectionState(wsKey, util_1.WsConnectionStateEnum.CONNECTING) &&\n                    !this.wsStore.isConnectionState(wsKey, util_1.WsConnectionStateEnum.RECONNECTING)) {\n                    return this.connect(wsKey);\n                }\n            });\n        });\n    }\n    /**\n     * Subscribe to V1-V3 topics & track/persist them.\n     *\n     * Note: for public V5 topics use the `subscribeV5()` method.\n     *\n     * Topics will be automatically resubscribed to if the connection resets/drops/reconnects.\n     * @param wsTopics - topic or list of topics\n     * @param isPrivateTopic optional - the library will try to detect private topics, you can use this to mark a topic as private (if the topic isn't recognised yet)\n     */\n    subscribe(wsTopics, isPrivateTopic) {\n        const topics = Array.isArray(wsTopics) ? wsTopics : [wsTopics];\n        if (this.options.market === 'v5') {\n            topics.forEach((topic) => {\n                if (!(0, util_1.isPrivateWsTopic)(topic)) {\n                    throw new Error('For public \"v5\" websocket topics, use the subscribeV5() method & provide the category parameter');\n                }\n            });\n        }\n        return new Promise((resolver, rejector) => {\n            topics.forEach((topic) => {\n                const wsKey = (0, util_1.getWsKeyForTopic)(this.options.market, topic, isPrivateTopic);\n                // Persist topic for reconnects\n                this.wsStore.addTopic(wsKey, topic);\n                this.upsertPendingTopicsSubscriptions(wsKey, topic, resolver, rejector);\n                // if connected, send subscription request\n                if (this.wsStore.isConnectionState(wsKey, util_1.WsConnectionStateEnum.CONNECTED)) {\n                    return this.requestSubscribeTopics(wsKey, [topic]);\n                }\n                // start connection process if it hasn't yet begun. Topics are automatically subscribed to on-connect\n                if (!this.wsStore.isConnectionState(wsKey, util_1.WsConnectionStateEnum.CONNECTING) &&\n                    !this.wsStore.isConnectionState(wsKey, util_1.WsConnectionStateEnum.RECONNECTING)) {\n                    return this.connect(wsKey);\n                }\n            });\n        });\n    }\n    upsertPendingTopicsSubscriptions(wsKey, topic, resolver, rejector) {\n        const existingWsKeyPendingSubscriptions = this.pendingTopicsSubscriptions.find((s) => s.wsKey === wsKey);\n        if (!existingWsKeyPendingSubscriptions) {\n            this.pendingTopicsSubscriptions.push({\n                wsKey,\n                resolver,\n                rejector,\n                failedTopicsSubscriptions: new Set(),\n                pendingTopicsSubscriptions: new Set([topic]),\n            });\n            return;\n        }\n        existingWsKeyPendingSubscriptions.pendingTopicsSubscriptions.add(topic);\n    }\n    /**\n     * Unsubscribe from V5 topics & remove them from memory. They won't be re-subscribed to if the connection reconnects.\n     * @param wsTopics - topic or list of topics\n     * @param category - the API category this topic is for (e.g. \"linear\"). The value is only important when connecting to public topics and will be ignored for private topics.\n     * @param isPrivateTopic - optional - the library will try to detect private topics, you can use this to mark a topic as private (if the topic isn't recognised yet)\n     */\n    unsubscribeV5(wsTopics, category, isPrivateTopic) {\n        const topics = Array.isArray(wsTopics) ? wsTopics : [wsTopics];\n        topics.forEach((topic) => {\n            const wsKey = (0, util_1.getWsKeyForTopic)(this.options.market, topic, isPrivateTopic, category);\n            // Remove topic from persistence for reconnects\n            this.wsStore.deleteTopic(wsKey, topic);\n            this.removeTopicPendingSubscription(wsKey, topic);\n            // unsubscribe request only necessary if active connection exists\n            if (this.wsStore.isConnectionState(wsKey, util_1.WsConnectionStateEnum.CONNECTED)) {\n                this.requestUnsubscribeTopics(wsKey, [topic]);\n            }\n        });\n    }\n    removeTopicPendingSubscription(wsKey, topic) {\n        const existingWsKeyPendingSubscriptions = this.pendingTopicsSubscriptions.find((s) => s.wsKey === wsKey);\n        if (existingWsKeyPendingSubscriptions) {\n            existingWsKeyPendingSubscriptions.pendingTopicsSubscriptions.delete(topic);\n            if (!existingWsKeyPendingSubscriptions.pendingTopicsSubscriptions.size) {\n                this.pendingTopicsSubscriptions =\n                    this.pendingTopicsSubscriptions.filter((s) => s.wsKey !== wsKey);\n            }\n        }\n    }\n    clearTopicsPendingSubscriptions(wsKey) {\n        this.pendingTopicsSubscriptions = this.pendingTopicsSubscriptions.filter((s) => s.wsKey !== wsKey);\n    }\n    /**\n     * Unsubscribe from V1-V3 topics & remove them from memory. They won't be re-subscribed to if the connection reconnects.\n     *\n     * Note: For public V5 topics, use `unsubscribeV5()` instead!\n     *\n     * @param wsTopics topic or list of topics\n     * @param isPrivateTopic optional - the library will try to detect private topics, you can use this to mark a topic as private (if the topic isn't recognised yet)\n     */\n    unsubscribe(wsTopics, isPrivateTopic) {\n        const topics = Array.isArray(wsTopics) ? wsTopics : [wsTopics];\n        if (this.options.market === 'v5') {\n            topics.forEach((topic) => {\n                if (!(0, util_1.isPrivateWsTopic)(topic)) {\n                    throw new Error('For public \"v5\" websocket topics, use the unsubscribeV5() method & provide the category parameter');\n                }\n            });\n        }\n        topics.forEach((topic) => {\n            const wsKey = (0, util_1.getWsKeyForTopic)(this.options.market, topic, isPrivateTopic);\n            // Remove topic from persistence for reconnects\n            this.wsStore.deleteTopic(wsKey, topic);\n            this.removeTopicPendingSubscription(wsKey, topic);\n            // unsubscribe request only necessary if active connection exists\n            if (this.wsStore.isConnectionState(wsKey, util_1.WsConnectionStateEnum.CONNECTED)) {\n                this.requestUnsubscribeTopics(wsKey, [topic]);\n            }\n        });\n    }\n    /**\n     * @private Only used if we fetch exchange time before attempting auth. Disabled by default.\n     * I've removed this for ftx and it's working great, tempted to remove this here\n     */\n    prepareRESTClient() {\n        switch (this.options.market) {\n            case 'inverse': {\n                this.restClient = new inverse_client_1.InverseClient(this.options.restOptions, this.options.requestOptions);\n                break;\n            }\n            case 'linear': {\n                this.restClient = new linear_client_1.LinearClient(this.options.restOptions, this.options.requestOptions);\n                break;\n            }\n            case 'spot': {\n                this.restClient = new spot_client_1.SpotClient(this.options.restOptions, this.options.requestOptions);\n                this.connectPublic();\n                break;\n            }\n            case 'spotv3': {\n                this.restClient = new spot_client_v3_1.SpotClientV3(this.options.restOptions, this.options.requestOptions);\n                break;\n            }\n            case 'usdcOption': {\n                this.restClient = new usdc_option_client_1.USDCOptionClient(this.options.restOptions, this.options.requestOptions);\n                break;\n            }\n            case 'usdcPerp': {\n                this.restClient = new usdc_perpetual_client_1.USDCPerpetualClient(this.options.restOptions, this.options.requestOptions);\n                break;\n            }\n            case 'unifiedOption':\n            case 'unifiedPerp': {\n                this.restClient = new unified_margin_client_1.UnifiedMarginClient(this.options.restOptions, this.options.requestOptions);\n                break;\n            }\n            case 'contractInverse':\n            case 'contractUSDT': {\n                this.restClient = new contract_client_1.ContractClient(this.options.restOptions, this.options.requestOptions);\n                break;\n            }\n            case 'v5': {\n                this.restClient = new rest_client_v5_1.RestClientV5(this.options.restOptions, this.options.requestOptions);\n                break;\n            }\n            default: {\n                throw (0, util_1.neverGuard)(this.options.market, 'prepareRESTClient(): Unhandled market');\n            }\n        }\n    }\n    close(wsKey, force) {\n        this.logger.info('Closing connection', Object.assign(Object.assign({}, loggerCategory), { wsKey }));\n        this.setWsState(wsKey, util_1.WsConnectionStateEnum.CLOSING);\n        this.clearTimers(wsKey);\n        const ws = this.getWs(wsKey);\n        ws === null || ws === void 0 ? void 0 : ws.close();\n        if (force) {\n            (0, util_1.safeTerminateWs)(ws);\n        }\n    }\n    closeAll(force) {\n        const keys = this.wsStore.getKeys();\n        this.logger.info(`Closing all ws connections: ${keys}`);\n        keys.forEach((key) => {\n            this.close(key, force);\n        });\n    }\n    /**\n     * Request connection of all dependent (public & private) websockets, instead of waiting for automatic connection by library\n     */\n    connectAll() {\n        switch (this.options.market) {\n            case 'inverse': {\n                // only one for inverse\n                return [...this.connectPublic()];\n            }\n            // these all have separate public & private ws endpoints\n            case 'linear':\n            case 'spot':\n            case 'spotv3':\n            case 'usdcOption':\n            case 'usdcPerp':\n            case 'unifiedPerp':\n            case 'unifiedOption':\n            case 'contractUSDT':\n            case 'contractInverse': {\n                return [...this.connectPublic(), this.connectPrivate()];\n            }\n            case 'v5': {\n                return [this.connectPrivate()];\n            }\n            default: {\n                throw (0, util_1.neverGuard)(this.options.market, 'connectAll(): Unhandled market');\n            }\n        }\n    }\n    connectPublic() {\n        switch (this.options.market) {\n            case 'inverse': {\n                return [this.connect(util_1.WS_KEY_MAP.inverse)];\n            }\n            case 'linear': {\n                return [this.connect(util_1.WS_KEY_MAP.linearPublic)];\n            }\n            case 'spot': {\n                return [this.connect(util_1.WS_KEY_MAP.spotPublic)];\n            }\n            case 'spotv3': {\n                return [this.connect(util_1.WS_KEY_MAP.spotV3Public)];\n            }\n            case 'usdcOption': {\n                return [this.connect(util_1.WS_KEY_MAP.usdcOptionPublic)];\n            }\n            case 'usdcPerp': {\n                return [this.connect(util_1.WS_KEY_MAP.usdcPerpPublic)];\n            }\n            case 'unifiedOption': {\n                return [this.connect(util_1.WS_KEY_MAP.unifiedOptionPublic)];\n            }\n            case 'unifiedPerp': {\n                return [\n                    this.connect(util_1.WS_KEY_MAP.unifiedPerpUSDTPublic),\n                    this.connect(util_1.WS_KEY_MAP.unifiedPerpUSDCPublic),\n                ];\n            }\n            case 'contractUSDT':\n                return [this.connect(util_1.WS_KEY_MAP.contractUSDTPublic)];\n            case 'contractInverse':\n                return [this.connect(util_1.WS_KEY_MAP.contractInversePublic)];\n            case 'v5': {\n                return [\n                    this.connect(util_1.WS_KEY_MAP.v5SpotPublic),\n                    this.connect(util_1.WS_KEY_MAP.v5LinearPublic),\n                    this.connect(util_1.WS_KEY_MAP.v5InversePublic),\n                    this.connect(util_1.WS_KEY_MAP.v5OptionPublic),\n                ];\n            }\n            default: {\n                throw (0, util_1.neverGuard)(this.options.market, 'connectPublic(): Unhandled market');\n            }\n        }\n    }\n    connectPrivate() {\n        switch (this.options.market) {\n            case 'inverse': {\n                return this.connect(util_1.WS_KEY_MAP.inverse);\n            }\n            case 'linear': {\n                return this.connect(util_1.WS_KEY_MAP.linearPrivate);\n            }\n            case 'spot': {\n                return this.connect(util_1.WS_KEY_MAP.spotPrivate);\n            }\n            case 'spotv3': {\n                return this.connect(util_1.WS_KEY_MAP.spotV3Private);\n            }\n            case 'usdcOption': {\n                return this.connect(util_1.WS_KEY_MAP.usdcOptionPrivate);\n            }\n            case 'usdcPerp': {\n                return this.connect(util_1.WS_KEY_MAP.usdcPerpPrivate);\n            }\n            case 'unifiedPerp':\n            case 'unifiedOption': {\n                return this.connect(util_1.WS_KEY_MAP.unifiedPrivate);\n            }\n            case 'contractUSDT':\n                return this.connect(util_1.WS_KEY_MAP.contractUSDTPrivate);\n            case 'contractInverse':\n                return this.connect(util_1.WS_KEY_MAP.contractInversePrivate);\n            case 'v5': {\n                return this.connect(util_1.WS_KEY_MAP.v5Private);\n            }\n            default: {\n                throw (0, util_1.neverGuard)(this.options.market, 'connectPrivate(): Unhandled market');\n            }\n        }\n    }\n    connect(wsKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.wsStore.isWsOpen(wsKey)) {\n                    this.logger.error('Refused to connect to ws with existing active connection', Object.assign(Object.assign({}, loggerCategory), { wsKey }));\n                    return this.wsStore.getWs(wsKey);\n                }\n                if (this.wsStore.isConnectionState(wsKey, util_1.WsConnectionStateEnum.CONNECTING)) {\n                    this.logger.error('Refused to connect to ws, connection attempt already active', Object.assign(Object.assign({}, loggerCategory), { wsKey }));\n                    return;\n                }\n                if (!this.wsStore.getConnectionState(wsKey) ||\n                    this.wsStore.isConnectionState(wsKey, util_1.WsConnectionStateEnum.INITIAL)) {\n                    this.setWsState(wsKey, util_1.WsConnectionStateEnum.CONNECTING);\n                }\n                const authParams = yield this.getAuthParams(wsKey);\n                const url = (0, util_1.getWsUrl)(wsKey, this.options, this.logger);\n                const ws = this.connectToWsUrl(url + authParams, wsKey);\n                return this.wsStore.setWs(wsKey, ws);\n            }\n            catch (err) {\n                this.parseWsError('Connection failed', err, wsKey);\n                this.reconnectWithDelay(wsKey, this.options.reconnectTimeout);\n            }\n        });\n    }\n    parseWsError(context, error, wsKey) {\n        if (!error.message) {\n            this.logger.error(`${context} due to unexpected error: `, error);\n            this.emit('error', error);\n            return;\n        }\n        switch (error.message) {\n            case 'Unexpected server response: 401':\n                this.logger.error(`${context} due to 401 authorization failure.`, Object.assign(Object.assign({}, loggerCategory), { wsKey }));\n                break;\n            default:\n                if (this.wsStore.getConnectionState(wsKey) !==\n                    util_1.WsConnectionStateEnum.CLOSING) {\n                    this.logger.error(`${context} due to unexpected response error: \"${(error === null || error === void 0 ? void 0 : error.msg) || (error === null || error === void 0 ? void 0 : error.message) || error}\"`, Object.assign(Object.assign({}, loggerCategory), { wsKey, error }));\n                    this.executeReconnectableClose(wsKey, 'unhandled onWsError');\n                }\n                else {\n                    this.logger.info(`${wsKey} socket forcefully closed. Will not reconnect.`);\n                }\n                break;\n        }\n        this.emit('error', error);\n    }\n    /**\n     * Return params required to make authorized request\n     */\n    getAuthParams(wsKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (util_1.PUBLIC_WS_KEYS.includes(wsKey)) {\n                this.logger.debug('Starting public only websocket client.', Object.assign(Object.assign({}, loggerCategory), { wsKey }));\n                return '';\n            }\n            try {\n                const { signature, expiresAt } = yield this.getWsAuthSignature(wsKey);\n                const authParams = {\n                    api_key: this.options.key,\n                    expires: expiresAt,\n                    signature,\n                };\n                return '?' + (0, util_1.serializeParams)(authParams);\n            }\n            catch (e) {\n                this.logger.error(e, Object.assign(Object.assign({}, loggerCategory), { wsKey }));\n                return '';\n            }\n        });\n    }\n    sendAuthRequest(wsKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { signature, expiresAt } = yield this.getWsAuthSignature(wsKey);\n                const request = {\n                    op: 'auth',\n                    args: [this.options.key, expiresAt, signature],\n                    req_id: `${wsKey}-auth`,\n                };\n                return this.tryWsSend(wsKey, JSON.stringify(request));\n            }\n            catch (e) {\n                this.logger.error(e, Object.assign(Object.assign({}, loggerCategory), { wsKey }));\n            }\n        });\n    }\n    getWsAuthSignature(wsKey) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { key, secret } = this.options;\n            if (!key || !secret) {\n                this.logger.warning('Cannot authenticate websocket, either api or private keys missing.', Object.assign(Object.assign({}, loggerCategory), { wsKey }));\n                throw new Error('Cannot auth - missing api or secret in config');\n            }\n            this.logger.debug(\"Getting auth'd request params\", Object.assign(Object.assign({}, loggerCategory), { wsKey }));\n            const timeOffset = this.options.fetchTimeOffsetBeforeAuth\n                ? (yield ((_a = this.restClient) === null || _a === void 0 ? void 0 : _a.fetchTimeOffset())) || 0\n                : 0;\n            const recvWindow = this.options.recvWindow || 5000;\n            const signatureExpiresAt = Date.now() + timeOffset + recvWindow;\n            const signature = yield (0, node_support_1.signMessage)('GET/realtime' + signatureExpiresAt, secret);\n            return {\n                expiresAt: signatureExpiresAt,\n                signature,\n            };\n        });\n    }\n    reconnectWithDelay(wsKey, connectionDelayMs) {\n        var _a;\n        this.clearTimers(wsKey);\n        if (this.wsStore.getConnectionState(wsKey) !==\n            util_1.WsConnectionStateEnum.CONNECTING) {\n            this.setWsState(wsKey, util_1.WsConnectionStateEnum.RECONNECTING);\n        }\n        if ((_a = this.wsStore.get(wsKey)) === null || _a === void 0 ? void 0 : _a.activeReconnectTimer) {\n            this.clearReconnectTimer(wsKey);\n        }\n        this.wsStore.get(wsKey, true).activeReconnectTimer = setTimeout(() => {\n            this.logger.info('Reconnecting to websocket', Object.assign(Object.assign({}, loggerCategory), { wsKey }));\n            this.clearReconnectTimer(wsKey);\n            this.connect(wsKey);\n        }, connectionDelayMs);\n    }\n    ping(wsKey) {\n        if (this.wsStore.get(wsKey, true).activePongTimer) {\n            return;\n        }\n        this.clearPongTimer(wsKey);\n        this.logger.silly('Sending ping', Object.assign(Object.assign({}, loggerCategory), { wsKey }));\n        this.tryWsSend(wsKey, JSON.stringify({ op: 'ping' }));\n        this.wsStore.get(wsKey, true).activePongTimer = setTimeout(() => this.executeReconnectableClose(wsKey, 'Pong timeout'), this.options.pongTimeout);\n    }\n    /**\n     * Closes a connection, if it's even open. If open, this will trigger a reconnect asynchronously.\n     * If closed, trigger a reconnect immediately\n     */\n    executeReconnectableClose(wsKey, reason) {\n        this.logger.info(`${reason} - closing socket to reconnect`, Object.assign(Object.assign({}, loggerCategory), { wsKey,\n            reason }));\n        const wasOpen = this.wsStore.isWsOpen(wsKey);\n        this.clearPingTimer(wsKey);\n        this.clearPongTimer(wsKey);\n        const ws = this.getWs(wsKey);\n        if (ws) {\n            ws.close();\n            (0, util_1.safeTerminateWs)(ws);\n        }\n        if (!wasOpen) {\n            this.logger.info(`${reason} - socket already closed - trigger immediate reconnect`, Object.assign(Object.assign({}, loggerCategory), { wsKey,\n                reason }));\n            this.reconnectWithDelay(wsKey, this.options.reconnectTimeout);\n        }\n    }\n    clearTimers(wsKey) {\n        this.clearPingTimer(wsKey);\n        this.clearPongTimer(wsKey);\n        this.clearReconnectTimer(wsKey);\n    }\n    // Send a ping at intervals\n    clearPingTimer(wsKey) {\n        const wsState = this.wsStore.get(wsKey);\n        if (wsState === null || wsState === void 0 ? void 0 : wsState.activePingTimer) {\n            clearInterval(wsState.activePingTimer);\n            wsState.activePingTimer = undefined;\n        }\n    }\n    // Expect a pong within a time limit\n    clearPongTimer(wsKey) {\n        const wsState = this.wsStore.get(wsKey);\n        if (wsState === null || wsState === void 0 ? void 0 : wsState.activePongTimer) {\n            clearTimeout(wsState.activePongTimer);\n            wsState.activePongTimer = undefined;\n        }\n    }\n    clearReconnectTimer(wsKey) {\n        const wsState = this.wsStore.get(wsKey);\n        if (wsState === null || wsState === void 0 ? void 0 : wsState.activeReconnectTimer) {\n            clearTimeout(wsState.activeReconnectTimer);\n            wsState.activeReconnectTimer = undefined;\n        }\n    }\n    /**\n     * @private Use the `subscribe(topics)` method to subscribe to topics. Send WS message to subscribe to topics.\n     */\n    requestSubscribeTopics(wsKey, topics) {\n        if (!topics.length) {\n            return;\n        }\n        const maxTopicsPerEvent = (0, util_1.getMaxTopicsPerSubscribeEvent)(this.options.market, wsKey);\n        if (maxTopicsPerEvent && topics.length > maxTopicsPerEvent) {\n            this.logger.silly(`Subscribing to topics in batches of ${maxTopicsPerEvent}`);\n            for (let i = 0; i < topics.length; i += maxTopicsPerEvent) {\n                const batch = topics.slice(i, i + maxTopicsPerEvent);\n                this.logger.silly(`Subscribing to batch of ${batch.length}`);\n                this.requestSubscribeTopics(wsKey, batch);\n            }\n            this.logger.silly(`Finished batch subscribing to ${topics.length} topics`);\n            return;\n        }\n        const wsMessage = JSON.stringify({\n            req_id: topics.join(','),\n            op: 'subscribe',\n            args: topics,\n        });\n        this.tryWsSend(wsKey, wsMessage);\n    }\n    /**\n     * @private Use the `unsubscribe(topics)` method to unsubscribe from topics. Send WS message to unsubscribe from topics.\n     */\n    requestUnsubscribeTopics(wsKey, topics) {\n        if (!topics.length) {\n            return;\n        }\n        const maxTopicsPerEvent = (0, util_1.getMaxTopicsPerSubscribeEvent)(this.options.market, wsKey);\n        if (maxTopicsPerEvent && topics.length > maxTopicsPerEvent) {\n            this.logger.silly(`Unsubscribing to topics in batches of ${maxTopicsPerEvent}`);\n            for (let i = 0; i < topics.length; i += maxTopicsPerEvent) {\n                const batch = topics.slice(i, i + maxTopicsPerEvent);\n                this.logger.silly(`Unsubscribing to batch of ${batch.length}`);\n                this.requestUnsubscribeTopics(wsKey, batch);\n            }\n            this.logger.silly(`Finished batch unsubscribing to ${topics.length} topics`);\n            return;\n        }\n        const wsMessage = JSON.stringify({\n            op: 'unsubscribe',\n            args: topics,\n        });\n        this.tryWsSend(wsKey, wsMessage);\n    }\n    tryWsSend(wsKey, wsMessage) {\n        try {\n            this.logger.silly('Sending upstream ws message: ', Object.assign(Object.assign({}, loggerCategory), { wsMessage,\n                wsKey }));\n            if (!wsKey) {\n                throw new Error('Cannot send message due to no known websocket for this wsKey');\n            }\n            const ws = this.getWs(wsKey);\n            if (!ws) {\n                throw new Error(`${wsKey} socket not connected yet, call \"connect(${wsKey}) first then try again when the \"open\" event arrives`);\n            }\n            ws.send(wsMessage);\n        }\n        catch (e) {\n            this.logger.error('Failed to send WS message', Object.assign(Object.assign({}, loggerCategory), { wsMessage,\n                wsKey, exception: e }));\n        }\n    }\n    connectToWsUrl(url, wsKey) {\n        var _a;\n        this.logger.silly(`Opening WS connection to URL: ${url}`, Object.assign(Object.assign({}, loggerCategory), { wsKey }));\n        const agent = (_a = this.options.requestOptions) === null || _a === void 0 ? void 0 : _a.agent;\n        const ws = new isomorphic_ws_1.default(url, undefined, agent ? { agent } : undefined);\n        ws.onopen = (event) => this.onWsOpen(event, wsKey);\n        ws.onmessage = (event) => this.onWsMessage(event, wsKey);\n        ws.onerror = (event) => this.parseWsError('Websocket onWsError', event, wsKey);\n        ws.onclose = (event) => this.onWsClose(event, wsKey);\n        return ws;\n    }\n    onWsOpen(event, wsKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.wsStore.isConnectionState(wsKey, util_1.WsConnectionStateEnum.CONNECTING)) {\n                this.logger.info('Websocket connected', Object.assign(Object.assign({}, loggerCategory), { wsKey, testnet: this.isTestnet(), market: this.options.market }));\n                this.emit('open', { wsKey, event });\n            }\n            else if (this.wsStore.isConnectionState(wsKey, util_1.WsConnectionStateEnum.RECONNECTING)) {\n                this.logger.info('Websocket reconnected', Object.assign(Object.assign({}, loggerCategory), { wsKey }));\n                this.emit('reconnected', { wsKey, event });\n            }\n            this.setWsState(wsKey, util_1.WsConnectionStateEnum.CONNECTED);\n            // Some websockets require an auth packet to be sent after opening the connection\n            if (util_1.WS_AUTH_ON_CONNECT_KEYS.includes(wsKey)) {\n                this.logger.info('Sending auth request...');\n                yield this.sendAuthRequest(wsKey);\n            }\n            // TODO: persistence not working yet for spot v1 topics\n            if (wsKey !== util_1.WS_KEY_MAP.spotPublic && wsKey !== util_1.WS_KEY_MAP.spotPrivate) {\n                const topics = [...this.wsStore.getTopics(wsKey)];\n                this.logger.info('Subscribing to topics', Object.assign(Object.assign({}, loggerCategory), { wsKey,\n                    topics }));\n                this.requestSubscribeTopics(wsKey, topics);\n            }\n            this.wsStore.get(wsKey, true).activePingTimer = setInterval(() => this.ping(wsKey), this.options.pingInterval);\n        });\n    }\n    onWsMessage(event, wsKey) {\n        try {\n            // any message can clear the pong timer - wouldn't get a message if the ws dropped\n            this.clearPongTimer(wsKey);\n            const msg = JSON.parse((event && event.data) || event);\n            // this.logger.silly('Received event', {\n            //   ...loggerCategory,\n            //   wsKey,\n            //   msg: JSON.stringify(msg),\n            // });\n            if ((0, util_1.isTopicSubscriptionConfirmation)(msg)) {\n                this.updatePendingTopicSubscriptionStatus(wsKey, msg);\n            }\n            // TODO: cleanme\n            if (msg['success'] || (msg === null || msg === void 0 ? void 0 : msg.pong) || (0, util_1.isWsPong)(msg)) {\n                if ((0, util_1.isWsPong)(msg)) {\n                    this.logger.silly('Received pong', Object.assign(Object.assign({}, loggerCategory), { wsKey }));\n                }\n                else {\n                    this.emit('response', Object.assign(Object.assign({}, msg), { wsKey }));\n                }\n                return;\n            }\n            if (msg['finalFragment']) {\n                return this.emit('response', Object.assign(Object.assign({}, msg), { wsKey }));\n            }\n            if (msg === null || msg === void 0 ? void 0 : msg.topic) {\n                return this.emit('update', Object.assign(Object.assign({}, msg), { wsKey }));\n            }\n            if (\n            // spot v1\n            (msg === null || msg === void 0 ? void 0 : msg.code) ||\n                // spot v3\n                (msg === null || msg === void 0 ? void 0 : msg.type) === 'error' ||\n                // usdc options\n                (msg === null || msg === void 0 ? void 0 : msg.success) === false) {\n                return this.emit('error', Object.assign(Object.assign({}, msg), { wsKey }));\n            }\n            this.logger.warning('Unhandled/unrecognised ws event message', Object.assign(Object.assign({}, loggerCategory), { message: msg, event,\n                wsKey }));\n        }\n        catch (e) {\n            this.logger.error('Failed to parse ws event message', Object.assign(Object.assign({}, loggerCategory), { error: e, event,\n                wsKey }));\n        }\n    }\n    updatePendingTopicSubscriptionStatus(wsKey, msg) {\n        const requestsIds = msg.req_id;\n        const pendingTopicsSubscriptions = this.pendingTopicsSubscriptions.find((s) => s.wsKey === wsKey);\n        if (!pendingTopicsSubscriptions)\n            return;\n        const splitRequestsIds = requestsIds.split(',');\n        if (!(0, util_1.isTopicSubscriptionSuccess)(msg)) {\n            splitRequestsIds.forEach((req_id) => pendingTopicsSubscriptions.failedTopicsSubscriptions.add(req_id));\n        }\n        splitRequestsIds.forEach((req_id) => {\n            this.removeTopicPendingSubscription(wsKey, req_id);\n            if (!pendingTopicsSubscriptions.pendingTopicsSubscriptions.size &&\n                !pendingTopicsSubscriptions.failedTopicsSubscriptions.size) {\n                // all topics have been subscribed successfully, so we can resolve the subscription request\n                pendingTopicsSubscriptions.resolver();\n                this.clearTopicsPendingSubscriptions(wsKey);\n            }\n            if (!pendingTopicsSubscriptions.pendingTopicsSubscriptions.size &&\n                pendingTopicsSubscriptions.failedTopicsSubscriptions.size) {\n                // not all topics have been subscribed successfully, so we reject the subscription request\n                // and let the caller handle the situation by providing the list of failed subscriptions requests\n                const failedSubscriptionsMessage = `(${[\n                    ...pendingTopicsSubscriptions.failedTopicsSubscriptions,\n                ].toString()}) failed to subscribe`;\n                pendingTopicsSubscriptions.rejector(failedSubscriptionsMessage);\n                this.clearTopicsPendingSubscriptions(wsKey);\n            }\n        });\n    }\n    onWsClose(event, wsKey) {\n        this.logger.info('Websocket connection closed', Object.assign(Object.assign({}, loggerCategory), { wsKey }));\n        if (this.wsStore.getConnectionState(wsKey) !== util_1.WsConnectionStateEnum.CLOSING) {\n            this.reconnectWithDelay(wsKey, this.options.reconnectTimeout);\n            this.emit('reconnect', { wsKey, event });\n        }\n        else {\n            this.setWsState(wsKey, util_1.WsConnectionStateEnum.INITIAL);\n            this.emit('close', { wsKey, event });\n        }\n    }\n    getWs(wsKey) {\n        return this.wsStore.getWs(wsKey);\n    }\n    setWsState(wsKey, state) {\n        this.wsStore.setConnectionState(wsKey, state);\n    }\n    wrongMarketError(market) {\n        return new Error(`This WS client was instanced for the ${this.options.market} market. Make another WebsocketClient instance with \"market: '${market}'\" to listen to ${market} topics`);\n    }\n    /** @deprecated use \"market: 'spotv3\" client */\n    subscribePublicSpotTrades(symbol, binary) {\n        if (this.options.market !== 'spot') {\n            throw this.wrongMarketError('spot');\n        }\n        return this.tryWsSend(util_1.WS_KEY_MAP.spotPublic, JSON.stringify({\n            topic: 'trade',\n            event: 'sub',\n            symbol,\n            params: {\n                binary: !!binary,\n            },\n        }));\n    }\n    /** @deprecated use \"market: 'spotv3\" client */\n    subscribePublicSpotTradingPair(symbol, binary) {\n        if (this.options.market !== 'spot') {\n            throw this.wrongMarketError('spot');\n        }\n        return this.tryWsSend(util_1.WS_KEY_MAP.spotPublic, JSON.stringify({\n            symbol,\n            topic: 'realtimes',\n            event: 'sub',\n            params: {\n                binary: !!binary,\n            },\n        }));\n    }\n    /** @deprecated use \"market: 'spotv3\" client */\n    subscribePublicSpotV1Kline(symbol, candleSize, binary) {\n        if (this.options.market !== 'spot') {\n            throw this.wrongMarketError('spot');\n        }\n        return this.tryWsSend(util_1.WS_KEY_MAP.spotPublic, JSON.stringify({\n            symbol,\n            topic: 'kline_' + candleSize,\n            event: 'sub',\n            params: {\n                binary: !!binary,\n            },\n        }));\n    }\n    //ws.send('{\"symbol\":\"BTCUSDT\",\"topic\":\"depth\",\"event\":\"sub\",\"params\":{\"binary\":false}}');\n    //ws.send('{\"symbol\":\"BTCUSDT\",\"topic\":\"mergedDepth\",\"event\":\"sub\",\"params\":{\"binary\":false,\"dumpScale\":1}}');\n    //ws.send('{\"symbol\":\"BTCUSDT\",\"topic\":\"diffDepth\",\"event\":\"sub\",\"params\":{\"binary\":false}}');\n    /** @deprecated use \"market: 'spotv3\" client */\n    subscribePublicSpotOrderbook(symbol, depth, dumpScale, binary) {\n        if (this.options.market !== 'spot') {\n            throw this.wrongMarketError('spot');\n        }\n        let topic;\n        switch (depth) {\n            case 'full': {\n                topic = 'depth';\n                break;\n            }\n            case 'merge': {\n                topic = 'mergedDepth';\n                if (!dumpScale) {\n                    throw new Error('Dumpscale must be provided for merged orderbooks');\n                }\n                break;\n            }\n            case 'delta': {\n                topic = 'diffDepth';\n                break;\n            }\n        }\n        const msg = {\n            symbol,\n            topic,\n            event: 'sub',\n            params: {\n                binary: !!binary,\n            },\n        };\n        if (dumpScale) {\n            msg.params.dumpScale = dumpScale;\n        }\n        return this.tryWsSend(util_1.WS_KEY_MAP.spotPublic, JSON.stringify(msg));\n    }\n}\nexports.WebsocketClient = WebsocketClient;\n//# sourceMappingURL=websocket-client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/bybit-api/lib/websocket-client.js\n");

/***/ })

};
;